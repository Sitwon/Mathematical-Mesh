<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="Goedel.Cryptography.Framework">
      <assemblydata version="1.0.6471.40473" culture="" key="002400000480000014010000060200000024000052534131000800000100010079CBE3907EE5DE8FA0C17A2E85DF515BE28F41829CCAD96C8D39A4D5D33CC8928040325FFE95F9FEC1B3FDBD6CD00190A1DEBC9E5B4F7DCBB6C628B024BD59C00A9DA5AA8EAE0A23AA71206B8066BFCA87508FC5BF63E9155DF28FD7AB25487D390F61DAF10FB60914E5DC0C9B7C7C36EE0BC8F83DAAF7BC63F8925ABD575D9122F9B5889C58756D8E3A673F20E6260CFFD9DF70E6002F22D3D7D25C8F4218D6210AED4D57C8BA1341C8FDBA2889AA7169FF557E2AA13E2C42FC67A8DB4E29A2EC3ECDA29DEBCC076BC7CDE17D9BE92B14322AA0ECA72982BEE8B409C0A9EA2DCF2FD91711435162D5BEB306D475B0C032051A49355EE735F2E50DCCA6AC75B5" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </assembly>
    <assembly name="Goedel.Cryptography.KeyFile">
      <assemblydata version="1.0.6471.40474" culture="" key="002400000480000014010000060200000024000052534131000800000100010079CBE3907EE5DE8FA0C17A2E85DF515BE28F41829CCAD96C8D39A4D5D33CC8928040325FFE95F9FEC1B3FDBD6CD00190A1DEBC9E5B4F7DCBB6C628B024BD59C00A9DA5AA8EAE0A23AA71206B8066BFCA87508FC5BF63E9155DF28FD7AB25487D390F61DAF10FB60914E5DC0C9B7C7C36EE0BC8F83DAAF7BC63F8925ABD575D9122F9B5889C58756D8E3A673F20E6260CFFD9DF70E6002F22D3D7D25C8F4218D6210AED4D57C8BA1341C8FDBA2889AA7169FF557E2AA13E2C42FC67A8DB4E29A2EC3ECDA29DEBCC076BC7CDE17D9BE92B14322AA0ECA72982BEE8B409C0A9EA2DCF2FD91711435162D5BEB306D475B0C032051A49355EE735F2E50DCCA6AC75B5" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </assembly>
    <assembly name="Goedel.IO">
      <assemblydata version="1.0.6471.40469" culture="" key="002400000480000014010000060200000024000052534131000800000100010079CBE3907EE5DE8FA0C17A2E85DF515BE28F41829CCAD96C8D39A4D5D33CC8928040325FFE95F9FEC1B3FDBD6CD00190A1DEBC9E5B4F7DCBB6C628B024BD59C00A9DA5AA8EAE0A23AA71206B8066BFCA87508FC5BF63E9155DF28FD7AB25487D390F61DAF10FB60914E5DC0C9B7C7C36EE0BC8F83DAAF7BC63F8925ABD575D9122F9B5889C58756D8E3A673F20E6260CFFD9DF70E6002F22D3D7D25C8F4218D6210AED4D57C8BA1341C8FDBA2889AA7169FF557E2AA13E2C42FC67A8DB4E29A2EC3ECDA29DEBCC076BC7CDE17D9BE92B14322AA0ECA72982BEE8B409C0A9EA2DCF2FD91711435162D5BEB306D475B0C032051A49355EE735F2E50DCCA6AC75B5" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </assembly>
    <assembly name="Goedel.Platform.Framework">
      <assemblydata version="1.0.6471.31020" culture="" key="002400000480000014010000060200000024000052534131000800000100010079CBE3907EE5DE8FA0C17A2E85DF515BE28F41829CCAD96C8D39A4D5D33CC8928040325FFE95F9FEC1B3FDBD6CD00190A1DEBC9E5B4F7DCBB6C628B024BD59C00A9DA5AA8EAE0A23AA71206B8066BFCA87508FC5BF63E9155DF28FD7AB25487D390F61DAF10FB60914E5DC0C9B7C7C36EE0BC8F83DAAF7BC63F8925ABD575D9122F9B5889C58756D8E3A673F20E6260CFFD9DF70E6002F22D3D7D25C8F4218D6210AED4D57C8BA1341C8FDBA2889AA7169FF557E2AA13E2C42FC67A8DB4E29A2EC3ECDA29DEBCC076BC7CDE17D9BE92B14322AA0ECA72982BEE8B409C0A9EA2DCF2FD91711435162D5BEB306D475B0C032051A49355EE735F2E50DCCA6AC75B5" hash="SHA1" />
    </assembly>
    <assembly name="Goedel.Platform.Framework">
      <assemblydata version="1.0.6471.40475" culture="" key="002400000480000014010000060200000024000052534131000800000100010079CBE3907EE5DE8FA0C17A2E85DF515BE28F41829CCAD96C8D39A4D5D33CC8928040325FFE95F9FEC1B3FDBD6CD00190A1DEBC9E5B4F7DCBB6C628B024BD59C00A9DA5AA8EAE0A23AA71206B8066BFCA87508FC5BF63E9155DF28FD7AB25487D390F61DAF10FB60914E5DC0C9B7C7C36EE0BC8F83DAAF7BC63F8925ABD575D9122F9B5889C58756D8E3A673F20E6260CFFD9DF70E6002F22D3D7D25C8F4218D6210AED4D57C8BA1341C8FDBA2889AA7169FF557E2AA13E2C42FC67A8DB4E29A2EC3ECDA29DEBCC076BC7CDE17D9BE92B14322AA0ECA72982BEE8B409C0A9EA2DCF2FD91711435162D5BEB306D475B0C032051A49355EE735F2E50DCCA6AC75B5" hash="SHA1" />
    </assembly>
    <assembly name="Goedel.Protocol.Debug">
      <assemblydata version="1.0.6471.31021" culture="" key="002400000480000014010000060200000024000052534131000800000100010079CBE3907EE5DE8FA0C17A2E85DF515BE28F41829CCAD96C8D39A4D5D33CC8928040325FFE95F9FEC1B3FDBD6CD00190A1DEBC9E5B4F7DCBB6C628B024BD59C00A9DA5AA8EAE0A23AA71206B8066BFCA87508FC5BF63E9155DF28FD7AB25487D390F61DAF10FB60914E5DC0C9B7C7C36EE0BC8F83DAAF7BC63F8925ABD575D9122F9B5889C58756D8E3A673F20E6260CFFD9DF70E6002F22D3D7D25C8F4218D6210AED4D57C8BA1341C8FDBA2889AA7169FF557E2AA13E2C42FC67A8DB4E29A2EC3ECDA29DEBCC076BC7CDE17D9BE92B14322AA0ECA72982BEE8B409C0A9EA2DCF2FD91711435162D5BEB306D475B0C032051A49355EE735F2E50DCCA6AC75B5" hash="SHA1" />
    </assembly>
    <assembly name="Goedel.Protocol.Debug">
      <assemblydata version="1.0.6471.40475" culture="" key="002400000480000014010000060200000024000052534131000800000100010079CBE3907EE5DE8FA0C17A2E85DF515BE28F41829CCAD96C8D39A4D5D33CC8928040325FFE95F9FEC1B3FDBD6CD00190A1DEBC9E5B4F7DCBB6C628B024BD59C00A9DA5AA8EAE0A23AA71206B8066BFCA87508FC5BF63E9155DF28FD7AB25487D390F61DAF10FB60914E5DC0C9B7C7C36EE0BC8F83DAAF7BC63F8925ABD575D9122F9B5889C58756D8E3A673F20E6260CFFD9DF70E6002F22D3D7D25C8F4218D6210AED4D57C8BA1341C8FDBA2889AA7169FF557E2AA13E2C42FC67A8DB4E29A2EC3ECDA29DEBCC076BC7CDE17D9BE92B14322AA0ECA72982BEE8B409C0A9EA2DCF2FD91711435162D5BEB306D475B0C032051A49355EE735F2E50DCCA6AC75B5" hash="SHA1" />
    </assembly>
    <assembly name="Goedel.Protocol.Framework">
      <assemblydata version="1.0.6471.31020" culture="" key="002400000480000014010000060200000024000052534131000800000100010079CBE3907EE5DE8FA0C17A2E85DF515BE28F41829CCAD96C8D39A4D5D33CC8928040325FFE95F9FEC1B3FDBD6CD00190A1DEBC9E5B4F7DCBB6C628B024BD59C00A9DA5AA8EAE0A23AA71206B8066BFCA87508FC5BF63E9155DF28FD7AB25487D390F61DAF10FB60914E5DC0C9B7C7C36EE0BC8F83DAAF7BC63F8925ABD575D9122F9B5889C58756D8E3A673F20E6260CFFD9DF70E6002F22D3D7D25C8F4218D6210AED4D57C8BA1341C8FDBA2889AA7169FF557E2AA13E2C42FC67A8DB4E29A2EC3ECDA29DEBCC076BC7CDE17D9BE92B14322AA0ECA72982BEE8B409C0A9EA2DCF2FD91711435162D5BEB306D475B0C032051A49355EE735F2E50DCCA6AC75B5" hash="SHA1" />
    </assembly>
    <assembly name="Goedel.Protocol.Framework">
      <assemblydata version="1.0.6471.40475" culture="" key="002400000480000014010000060200000024000052534131000800000100010079CBE3907EE5DE8FA0C17A2E85DF515BE28F41829CCAD96C8D39A4D5D33CC8928040325FFE95F9FEC1B3FDBD6CD00190A1DEBC9E5B4F7DCBB6C628B024BD59C00A9DA5AA8EAE0A23AA71206B8066BFCA87508FC5BF63E9155DF28FD7AB25487D390F61DAF10FB60914E5DC0C9B7C7C36EE0BC8F83DAAF7BC63F8925ABD575D9122F9B5889C58756D8E3A673F20E6260CFFD9DF70E6002F22D3D7D25C8F4218D6210AED4D57C8BA1341C8FDBA2889AA7169FF557E2AA13E2C42FC67A8DB4E29A2EC3ECDA29DEBCC076BC7CDE17D9BE92B14322AA0ECA72982BEE8B409C0A9EA2DCF2FD91711435162D5BEB306D475B0C032051A49355EE735F2E50DCCA6AC75B5" hash="SHA1" />
    </assembly>
    <assembly name="Goedel.Registry">
      <assemblydata version="1.0.6471.40474" culture="" key="002400000480000014010000060200000024000052534131000800000100010079CBE3907EE5DE8FA0C17A2E85DF515BE28F41829CCAD96C8D39A4D5D33CC8928040325FFE95F9FEC1B3FDBD6CD00190A1DEBC9E5B4F7DCBB6C628B024BD59C00A9DA5AA8EAE0A23AA71206B8066BFCA87508FC5BF63E9155DF28FD7AB25487D390F61DAF10FB60914E5DC0C9B7C7C36EE0BC8F83DAAF7BC63F8925ABD575D9122F9B5889C58756D8E3A673F20E6260CFFD9DF70E6002F22D3D7D25C8F4218D6210AED4D57C8BA1341C8FDBA2889AA7169FF557E2AA13E2C42FC67A8DB4E29A2EC3ECDA29DEBCC076BC7CDE17D9BE92B14322AA0ECA72982BEE8B409C0A9EA2DCF2FD91711435162D5BEB306D475B0C032051A49355EE735F2E50DCCA6AC75B5" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:Goedel.Cryptography">
      <topicdata group="api" />
      <apidata name="Goedel.Cryptography" group="namespace" />
      <elements>
        <element api="T:Goedel.Cryptography.CryptographyFramework" />
      </elements>
    </api>
    <api id="T:Goedel.Cryptography.CryptographyFramework">
      <topicdata group="api" />
      <apidata name="CryptographyFramework" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Goedel.Cryptography.CryptographyFramework.GetRandomBytes(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Goedel.Cryptography.CryptographyFramework.Initialize(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Cryptography.CryptographyFramework">
      <topicdata name="CryptographyFramework" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.CryptographyFramework" />
      <apidata name="CryptographyFramework" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Goedel.Cryptography.CryptographyFramework.GetRandomBytes(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Goedel.Cryptography.CryptographyFramework.Initialize(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography" />
        <type api="T:Goedel.Cryptography.CryptographyFramework" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.CryptographyFramework.GetRandomBytes(System.Byte[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="GetRandomBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="Offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="Count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography" />
        <type api="T:Goedel.Cryptography.CryptographyFramework" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.CryptographyFramework.Initialize(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="TestMode" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography" />
        <type api="T:Goedel.Cryptography.CryptographyFramework" ref="true" />
      </containers>
    </api>
    <api id="N:Goedel.Cryptography.Framework">
      <topicdata group="api" />
      <apidata name="Goedel.Cryptography.Framework" group="namespace" />
      <elements>
        <element api="T:Goedel.Cryptography.Framework.AesBlock" />
        <element api="T:Goedel.Cryptography.Framework.ExtensionMethods" />
        <element api="T:Goedel.Cryptography.Framework.Container" />
        <element api="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA" />
        <element api="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSAPKCS" />
        <element api="T:Goedel.Cryptography.Framework.Factory" />
        <element api="T:Goedel.Cryptography.Framework.CryptoProviderAuthentication" />
        <element api="T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256" />
        <element api="T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512" />
        <element api="T:Goedel.Cryptography.Framework.CryptoProviderDigest" />
        <element api="T:Goedel.Cryptography.Framework.CryptoProviderSHA2_256" />
        <element api="T:Goedel.Cryptography.Framework.CryptoProviderSHA2_512" />
        <element api="T:Goedel.Cryptography.Framework.CryptoProviderSHA1" />
        <element api="T:Goedel.Cryptography.Framework.CryptoProviderEncryption" />
        <element api="T:Goedel.Cryptography.Framework.CryptoProviderEncryptAES" />
        <element api="T:Goedel.Cryptography.Framework.RSAKeyPair" />
        <element api="T:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA" />
      </elements>
    </api>
    <api id="T:Goedel.Cryptography.Framework.AesBlock">
      <topicdata group="api" />
      <apidata name="AesBlock" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Cryptography.BlockProvider" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.AesBlock.#ctor(System.Byte[],System.Boolean)" />
        <element api="P:Goedel.Cryptography.Framework.AesBlock.BlockSize" />
        <element api="M:Goedel.Cryptography.Framework.AesBlock.Factory(System.Byte[],System.Boolean)" />
        <element api="M:Goedel.Cryptography.Framework.AesBlock.Process(System.Byte[],System.Int32,System.Byte[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Cryptography.Framework.AesBlock">
      <topicdata name="AesBlock" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.Framework.AesBlock" />
      <apidata name="AesBlock" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.AesBlock.Factory(System.Byte[],System.Boolean)" />
        <element api="M:Goedel.Cryptography.Framework.AesBlock.Process(System.Byte[],System.Int32,System.Byte[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.AesBlock" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Cryptography.Framework.AesBlock">
      <topicdata name="AesBlock" group="list" subgroup="Properties" typeTopicId="T:Goedel.Cryptography.Framework.AesBlock" />
      <apidata name="AesBlock" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Goedel.Cryptography.Framework.AesBlock.BlockSize" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.AesBlock" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.AesBlock.#ctor(System.Byte[],System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="Key">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="Encrypt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.AesBlock" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.AesBlock.BlockSize">
      <topicdata group="api" />
      <apidata name="BlockSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.BlockProvider.BlockSize">
          <type api="T:Goedel.Cryptography.BlockProvider" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_BlockSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.AesBlock" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.AesBlock.Factory(System.Byte[],System.Boolean)">
      <topicdata group="api" />
      <apidata name="Factory" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Key">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="Encrypt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.BlockProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.AesBlock" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.AesBlock.Process(System.Byte[],System.Int32,System.Byte[],System.Int32)">
      <topicdata group="api" />
      <apidata name="Process" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Cryptography.BlockProvider.Process(System.Byte[],System.Int32,System.Byte[],System.Int32)">
          <type api="T:Goedel.Cryptography.BlockProvider" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Input">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="InputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="Output">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="OutputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.AesBlock" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.Framework.Container">
      <topicdata group="api" />
      <apidata name="Container" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Goedel.Cryptography.Framework.Container.Name(System.String)" />
        <element api="M:Goedel.Cryptography.Framework.Container.Prefix" />
        <element api="F:Goedel.Cryptography.Framework.Container.PrefixProduction" />
        <element api="F:Goedel.Cryptography.Framework.Container.PrefixTest" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Cryptography.Framework.Container">
      <topicdata name="Container" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.Framework.Container" />
      <apidata name="Container" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Goedel.Cryptography.Framework.Container.Name(System.String)" />
        <element api="M:Goedel.Cryptography.Framework.Container.Prefix" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.Container" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Cryptography.Framework.Container">
      <topicdata name="Container" group="list" subgroup="Fields" typeTopicId="T:Goedel.Cryptography.Framework.Container" />
      <apidata name="Container" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:Goedel.Cryptography.Framework.Container.PrefixProduction" />
        <element api="F:Goedel.Cryptography.Framework.Container.PrefixTest" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.Container" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.Container.Name(System.String)">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="UDF">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.Container" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.Container.Prefix">
      <topicdata group="api" />
      <apidata name="Prefix" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.Container" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.Framework.Container.PrefixProduction">
      <topicdata group="api" />
      <apidata name="PrefixProduction" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>mmm:</value>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.Container" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.Framework.Container.PrefixTest">
      <topicdata group="api" />
      <apidata name="PrefixTest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>TEST:mmm:</value>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.Container" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.Framework.CryptoProviderAuthentication">
      <topicdata group="api" />
      <apidata name="CryptoProviderAuthentication" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Cryptography.CryptoProviderAuthentication" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256" ref="true" />
          <type api="T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderAuthentication.MakeEncoder">
          <element api="M:Goedel.Cryptography.CryptoProvider.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
            <apidata name="MakeEncoder" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata abstract="true" virtual="true" />
            <parameters>
              <parameter name="Bulk" optional="true">
                <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
              <parameter name="OutputStream" optional="true">
                <type api="T:System.IO.Stream" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderAuthentication.MakeAuthenticator">
          <element api="M:Goedel.Cryptography.CryptoProviderAuthentication.MakeAuthenticator(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
            <apidata name="MakeAuthenticator" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata abstract="true" virtual="true" />
            <parameters>
              <parameter name="Key" optional="true">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
              <parameter name="OutputStream" optional="true">
                <type api="T:System.IO.Stream" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderAuthentication" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.MakeAuthenticator(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderAuthentication.ProcessData">
          <element api="M:Goedel.Cryptography.CryptoProviderDigest.ProcessData(System.Byte[],System.Byte[])">
            <apidata name="ProcessData" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Key" optional="true">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.ProcessData(System.Byte[],System.Int32,System.Int32,System.Byte[])" />
        </element>
        <element api="M:Goedel.Cryptography.CryptoProviderDigest.Process(System.Byte[],System.Byte[])">
          <apidata name="Process" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="Data">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="Key" optional="true">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.CryptoProvider.Complete(Goedel.Cryptography.CryptoData)">
          <apidata name="Complete" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="CryptoData">
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderAuthentication.Encode">
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.String,Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.CryptoAlgorithm">
          <apidata name="CryptoAlgorithm" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_CryptoAlgorithm" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithm" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.CryptoAlgorithmID">
          <apidata name="CryptoAlgorithmID" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" />
          <getter name="get_CryptoAlgorithmID" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.Size">
          <apidata name="Size" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" />
          <getter name="get_Size" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.UDF">
          <apidata name="UDF" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_UDF" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.KeyPair">
          <apidata name="KeyPair" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_KeyPair" />
          <setter name="set_KeyPair" />
          <returns>
            <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.#ctor(System.Security.Cryptography.KeyedHashAlgorithm)" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderAuthentication.AlgorithmClass" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.BindEncoder(Goedel.Cryptography.CryptoDataEncoder)" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderAuthentication.Key" />
        <element api="F:Goedel.Cryptography.Framework.CryptoProviderAuthentication.KeyedHashAlgorithm" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Cryptography.Framework.CryptoProviderAuthentication">
      <topicdata name="CryptoProviderAuthentication" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderAuthentication" />
      <apidata name="CryptoProviderAuthentication" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderAuthentication.MakeEncoder">
          <element api="M:Goedel.Cryptography.CryptoProvider.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
            <apidata name="MakeEncoder" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata abstract="true" virtual="true" />
            <parameters>
              <parameter name="Bulk" optional="true">
                <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
              <parameter name="OutputStream" optional="true">
                <type api="T:System.IO.Stream" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderAuthentication.MakeAuthenticator">
          <element api="M:Goedel.Cryptography.CryptoProviderAuthentication.MakeAuthenticator(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
            <apidata name="MakeAuthenticator" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata abstract="true" virtual="true" />
            <parameters>
              <parameter name="Key" optional="true">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
              <parameter name="OutputStream" optional="true">
                <type api="T:System.IO.Stream" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderAuthentication" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.MakeAuthenticator(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderAuthentication.ProcessData">
          <element api="M:Goedel.Cryptography.CryptoProviderDigest.ProcessData(System.Byte[],System.Byte[])">
            <apidata name="ProcessData" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Key" optional="true">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.ProcessData(System.Byte[],System.Int32,System.Int32,System.Byte[])" />
        </element>
        <element api="M:Goedel.Cryptography.CryptoProviderDigest.Process(System.Byte[],System.Byte[])">
          <apidata name="Process" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="Data">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="Key" optional="true">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.CryptoProvider.Complete(Goedel.Cryptography.CryptoData)">
          <apidata name="Complete" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="CryptoData">
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderAuthentication.Encode">
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.String,Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.BindEncoder(Goedel.Cryptography.CryptoDataEncoder)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderAuthentication" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Cryptography.Framework.CryptoProviderAuthentication">
      <topicdata name="CryptoProviderAuthentication" group="list" subgroup="Properties" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderAuthentication" />
      <apidata name="CryptoProviderAuthentication" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Goedel.Cryptography.CryptoProvider.CryptoAlgorithm">
          <apidata name="CryptoAlgorithm" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_CryptoAlgorithm" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithm" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.CryptoAlgorithmID">
          <apidata name="CryptoAlgorithmID" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" />
          <getter name="get_CryptoAlgorithmID" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.Size">
          <apidata name="Size" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" />
          <getter name="get_Size" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.UDF">
          <apidata name="UDF" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_UDF" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.KeyPair">
          <apidata name="KeyPair" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_KeyPair" />
          <setter name="set_KeyPair" />
          <returns>
            <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderAuthentication.AlgorithmClass" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderAuthentication.Key" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderAuthentication" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Cryptography.Framework.CryptoProviderAuthentication">
      <topicdata name="CryptoProviderAuthentication" group="list" subgroup="Fields" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderAuthentication" />
      <apidata name="CryptoProviderAuthentication" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="F:Goedel.Cryptography.Framework.CryptoProviderAuthentication.KeyedHashAlgorithm" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderAuthentication" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.Framework.CryptoProviderAuthentication.MakeEncoder">
      <topicdata name="MakeEncoder" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="MakeEncoder" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Cryptography.CryptoProvider.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
          <apidata name="MakeEncoder" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <parameters>
            <parameter name="Bulk" optional="true">
              <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
            <parameter name="Algorithm" optional="true">
              <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
              <argument>
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <enumValue>
                  <field name="Default" />
                </enumValue>
              </argument>
            </parameter>
            <parameter name="OutputStream" optional="true">
              <type api="T:System.IO.Stream" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderAuthentication" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.Framework.CryptoProviderAuthentication.MakeAuthenticator">
      <topicdata name="MakeAuthenticator" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="MakeAuthenticator" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Cryptography.CryptoProviderAuthentication.MakeAuthenticator(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
          <apidata name="MakeAuthenticator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <parameters>
            <parameter name="Key" optional="true">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
            <parameter name="Algorithm" optional="true">
              <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
              <argument>
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <enumValue>
                  <field name="Default" />
                </enumValue>
              </argument>
            </parameter>
            <parameter name="OutputStream" optional="true">
              <type api="T:System.IO.Stream" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderAuthentication" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.MakeAuthenticator(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderAuthentication" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.Framework.CryptoProviderAuthentication.ProcessData">
      <topicdata name="ProcessData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ProcessData" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Cryptography.CryptoProviderDigest.ProcessData(System.Byte[],System.Byte[])">
          <apidata name="ProcessData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="Data">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="Key" optional="true">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.ProcessData(System.Byte[],System.Int32,System.Int32,System.Byte[])" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderAuthentication" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.#ctor(System.Security.Cryptography.KeyedHashAlgorithm)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="KeyedHashAlgorithm">
          <type api="T:System.Security.Cryptography.KeyedHashAlgorithm" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderAuthentication" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderAuthentication.AlgorithmClass">
      <topicdata group="api" />
      <apidata name="AlgorithmClass" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.CryptoProviderAuthentication.AlgorithmClass">
          <type api="T:Goedel.Cryptography.CryptoProviderAuthentication" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_AlgorithmClass" />
      <returns>
        <type api="T:Goedel.Cryptography.CryptoAlgorithmClass" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderAuthentication" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.BindEncoder(Goedel.Cryptography.CryptoDataEncoder)">
      <topicdata group="api" />
      <apidata name="BindEncoder" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Cryptography.CryptoProviderBulk.BindEncoder(Goedel.Cryptography.CryptoDataEncoder)">
          <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Encoder">
          <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderAuthentication" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderAuthentication.Key">
      <topicdata group="api" />
      <apidata name="Key" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Key" />
      <setter name="set_Key" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderAuthentication" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.Framework.CryptoProviderAuthentication.KeyedHashAlgorithm">
      <topicdata group="api" />
      <apidata name="KeyedHashAlgorithm" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.KeyedHashAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderAuthentication" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.MakeAuthenticator(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="MakeAuthenticator" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Cryptography.Framework.CryptoProviderAuthentication.MakeAuthenticator" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="Key" optional="true">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="Algorithm" optional="true">
          <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
          <argument>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
            <enumValue>
              <field name="Default" />
            </enumValue>
          </argument>
        </parameter>
        <parameter name="OutputStream" optional="true">
          <type api="T:System.IO.Stream" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderAuthentication" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="MakeEncoder" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Cryptography.Framework.CryptoProviderAuthentication.MakeEncoder" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="Bulk" optional="true">
          <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="Algorithm" optional="true">
          <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
          <argument>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
            <enumValue>
              <field name="Default" />
            </enumValue>
          </argument>
        </parameter>
        <parameter name="OutputStream" optional="true">
          <type api="T:System.IO.Stream" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderAuthentication" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.ProcessData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
      <topicdata group="api" />
      <apidata name="ProcessData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Cryptography.Framework.CryptoProviderAuthentication.ProcessData" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Cryptography.CryptoProviderDigest.ProcessData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="Offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="Count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="Key" optional="true">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderAuthentication" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.Framework.CryptoProviderDigest">
      <topicdata group="api" />
      <apidata name="CryptoProviderDigest" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Goedel.Cryptography.Framework.CryptoProviderSHA2_256" ref="true" />
          <type api="T:Goedel.Cryptography.Framework.CryptoProviderSHA2_512" ref="true" />
          <type api="T:Goedel.Cryptography.Framework.CryptoProviderSHA1" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderDigest.MakeEncoder">
          <element api="M:Goedel.Cryptography.CryptoProvider.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
            <apidata name="MakeEncoder" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata abstract="true" virtual="true" />
            <parameters>
              <parameter name="Bulk" optional="true">
                <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
              <parameter name="OutputStream" optional="true">
                <type api="T:System.IO.Stream" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderDigest.ProcessData">
          <element api="M:Goedel.Cryptography.CryptoProviderDigest.ProcessData(System.Byte[],System.Byte[])">
            <apidata name="ProcessData" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Key" optional="true">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.ProcessData(System.Byte[],System.Int32,System.Int32,System.Byte[])" />
        </element>
        <element api="M:Goedel.Cryptography.CryptoProviderDigest.Process(System.Byte[],System.Byte[])">
          <apidata name="Process" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="Data">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="Key" optional="true">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProviderDigest.AlgorithmClass">
          <apidata name="AlgorithmClass" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:Goedel.Cryptography.CryptoProvider.AlgorithmClass">
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_AlgorithmClass" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmClass" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderDigest.Encode">
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.String,Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.CryptoAlgorithm">
          <apidata name="CryptoAlgorithm" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_CryptoAlgorithm" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithm" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.CryptoAlgorithmID">
          <apidata name="CryptoAlgorithmID" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" />
          <getter name="get_CryptoAlgorithmID" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.Size">
          <apidata name="Size" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" />
          <getter name="get_Size" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.UDF">
          <apidata name="UDF" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_UDF" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.KeyPair">
          <apidata name="KeyPair" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_KeyPair" />
          <setter name="set_KeyPair" />
          <returns>
            <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderDigest.#ctor">
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.#ctor" />
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.#ctor(System.Security.Cryptography.HashAlgorithm)" />
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.BindEncoder(Goedel.Cryptography.CryptoDataEncoder)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.Complete(Goedel.Cryptography.CryptoData)" />
        <element api="F:Goedel.Cryptography.Framework.CryptoProviderDigest.HashAlgorithm" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.Register(Goedel.Cryptography.CryptoCatalog)" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderDigest.Truncate" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Cryptography.Framework.CryptoProviderDigest">
      <topicdata name="CryptoProviderDigest" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderDigest" />
      <apidata name="CryptoProviderDigest" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderDigest.MakeEncoder">
          <element api="M:Goedel.Cryptography.CryptoProvider.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
            <apidata name="MakeEncoder" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata abstract="true" virtual="true" />
            <parameters>
              <parameter name="Bulk" optional="true">
                <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
              <parameter name="OutputStream" optional="true">
                <type api="T:System.IO.Stream" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderDigest.ProcessData">
          <element api="M:Goedel.Cryptography.CryptoProviderDigest.ProcessData(System.Byte[],System.Byte[])">
            <apidata name="ProcessData" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Key" optional="true">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.ProcessData(System.Byte[],System.Int32,System.Int32,System.Byte[])" />
        </element>
        <element api="M:Goedel.Cryptography.CryptoProviderDigest.Process(System.Byte[],System.Byte[])">
          <apidata name="Process" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="Data">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="Key" optional="true">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderDigest.Encode">
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.String,Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.BindEncoder(Goedel.Cryptography.CryptoDataEncoder)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.Complete(Goedel.Cryptography.CryptoData)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.Register(Goedel.Cryptography.CryptoCatalog)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderDigest" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Cryptography.Framework.CryptoProviderDigest">
      <topicdata name="CryptoProviderDigest" group="list" subgroup="Properties" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderDigest" />
      <apidata name="CryptoProviderDigest" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Goedel.Cryptography.CryptoProviderDigest.AlgorithmClass">
          <apidata name="AlgorithmClass" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:Goedel.Cryptography.CryptoProvider.AlgorithmClass">
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_AlgorithmClass" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmClass" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.CryptoAlgorithm">
          <apidata name="CryptoAlgorithm" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_CryptoAlgorithm" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithm" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.CryptoAlgorithmID">
          <apidata name="CryptoAlgorithmID" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" />
          <getter name="get_CryptoAlgorithmID" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.Size">
          <apidata name="Size" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" />
          <getter name="get_Size" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.UDF">
          <apidata name="UDF" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_UDF" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.KeyPair">
          <apidata name="KeyPair" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_KeyPair" />
          <setter name="set_KeyPair" />
          <returns>
            <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderDigest.Truncate" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderDigest" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Cryptography.Framework.CryptoProviderDigest">
      <topicdata name="CryptoProviderDigest" group="list" subgroup="Fields" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderDigest" />
      <apidata name="CryptoProviderDigest" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="F:Goedel.Cryptography.Framework.CryptoProviderDigest.HashAlgorithm" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderDigest" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.Framework.CryptoProviderDigest.MakeEncoder">
      <topicdata name="MakeEncoder" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="MakeEncoder" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Cryptography.CryptoProvider.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
          <apidata name="MakeEncoder" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <parameters>
            <parameter name="Bulk" optional="true">
              <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
            <parameter name="Algorithm" optional="true">
              <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
              <argument>
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <enumValue>
                  <field name="Default" />
                </enumValue>
              </argument>
            </parameter>
            <parameter name="OutputStream" optional="true">
              <type api="T:System.IO.Stream" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderDigest" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.Framework.CryptoProviderDigest.ProcessData">
      <topicdata name="ProcessData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ProcessData" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Cryptography.CryptoProviderDigest.ProcessData(System.Byte[],System.Byte[])">
          <apidata name="ProcessData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="Data">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="Key" optional="true">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.ProcessData(System.Byte[],System.Int32,System.Int32,System.Byte[])" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderDigest" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.Framework.CryptoProviderDigest.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.#ctor" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.#ctor(System.Security.Cryptography.HashAlgorithm)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderDigest" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderDigest.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:Goedel.Cryptography.Framework.CryptoProviderDigest.#ctor" />
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderDigest" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderDigest.#ctor(System.Security.Cryptography.HashAlgorithm)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:Goedel.Cryptography.Framework.CryptoProviderDigest.#ctor" />
      <parameters>
        <parameter name="HashAlgorithm">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderDigest" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderDigest.BindEncoder(Goedel.Cryptography.CryptoDataEncoder)">
      <topicdata group="api" />
      <apidata name="BindEncoder" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Cryptography.CryptoProviderBulk.BindEncoder(Goedel.Cryptography.CryptoDataEncoder)">
          <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Encoder">
          <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderDigest" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderDigest.Complete(Goedel.Cryptography.CryptoData)">
      <topicdata group="api" />
      <apidata name="Complete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Cryptography.CryptoProvider.Complete(Goedel.Cryptography.CryptoData)">
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="CryptoData">
          <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderDigest" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.Framework.CryptoProviderDigest.HashAlgorithm">
      <topicdata group="api" />
      <apidata name="HashAlgorithm" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderDigest" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderDigest.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="MakeEncoder" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Cryptography.Framework.CryptoProviderDigest.MakeEncoder" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="Bulk" optional="true">
          <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="Algorithm" optional="true">
          <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
          <argument>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
            <enumValue>
              <field name="Default" />
            </enumValue>
          </argument>
        </parameter>
        <parameter name="OutputStream" optional="true">
          <type api="T:System.IO.Stream" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderDigest" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderDigest.ProcessData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
      <topicdata group="api" />
      <apidata name="ProcessData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Cryptography.Framework.CryptoProviderDigest.ProcessData" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Cryptography.CryptoProviderDigest.ProcessData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="Offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="Count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="Key" optional="true">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderDigest" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderDigest.Register(Goedel.Cryptography.CryptoCatalog)">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Catalog" optional="true">
          <type api="T:Goedel.Cryptography.CryptoCatalog" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.CryptoAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderDigest" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderDigest.Truncate">
      <topicdata group="api" />
      <apidata name="Truncate" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Truncate" />
      <setter name="set_Truncate" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderDigest" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.Framework.CryptoProviderEncryptAES">
      <topicdata group="api" />
      <apidata name="CryptoProviderEncryptAES" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Cryptography.Framework.CryptoProviderEncryption" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProviderEncryption" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderEncryptAES.MakeEncoder">
          <element api="M:Goedel.Cryptography.CryptoProvider.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
            <apidata name="MakeEncoder" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata abstract="true" virtual="true" />
            <parameters>
              <parameter name="Bulk" optional="true">
                <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
              <parameter name="OutputStream" optional="true">
                <type api="T:System.IO.Stream" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderEncryptAES.MakeEncryptor">
          <element api="M:Goedel.Cryptography.CryptoProviderEncryption.MakeEncryptor(System.Byte[],System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
            <apidata name="MakeEncryptor" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata abstract="true" virtual="true" />
            <parameters>
              <parameter name="Key" optional="true">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
              <parameter name="IV" optional="true">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
              <parameter name="OutputStream" optional="true">
                <type api="T:System.IO.Stream" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderEncryption" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.MakeEncryptor(System.Byte[],System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderEncryptAES.MakeDecryptor">
          <element api="M:Goedel.Cryptography.CryptoProviderEncryption.MakeDecryptor(System.Byte[],System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
            <apidata name="MakeDecryptor" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata abstract="true" virtual="true" />
            <parameters>
              <parameter name="Key">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="IV">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
              <parameter name="OutputStream" optional="true">
                <type api="T:System.IO.Stream" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataDecoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderEncryption" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.MakeDecryptor(System.Byte[],System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderEncryptAES.Encode">
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.String,Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.CryptoAlgorithm">
          <apidata name="CryptoAlgorithm" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_CryptoAlgorithm" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithm" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.UDF">
          <apidata name="UDF" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_UDF" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.KeyPair">
          <apidata name="KeyPair" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_KeyPair" />
          <setter name="set_KeyPair" />
          <returns>
            <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryptAES.#ctor(System.Int32,System.Security.Cryptography.CipherMode,System.Security.Cryptography.PaddingMode)" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderEncryptAES.BlockSize" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderEncryptAES.CryptoAlgorithmID" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryptAES.Register(Goedel.Cryptography.CryptoCatalog)" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderEncryptAES.Size" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderEncryption.AlgorithmClass" />
        <element api="F:Goedel.Cryptography.Framework.CryptoProviderEncryption.AppendIntegrity" />
        <element api="F:Goedel.Cryptography.Framework.CryptoProviderEncryption.AppendIV" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.BindDecoder(Goedel.Cryptography.CryptoDataDecoder)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.BindEncoder(Goedel.Cryptography.CryptoDataEncoder)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.Complete(Goedel.Cryptography.CryptoData)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.Decrypt(System.Byte[],System.Byte[],System.Byte[])" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.Encrypt(System.Byte[],System.Byte[],System.Byte[])" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderEncryption.IVSize" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderEncryption.KeySize" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderEncryption.Provider" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Cryptography.Framework.CryptoProviderEncryptAES">
      <topicdata name="CryptoProviderEncryptAES" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderEncryptAES" />
      <apidata name="CryptoProviderEncryptAES" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderEncryptAES.MakeEncoder">
          <element api="M:Goedel.Cryptography.CryptoProvider.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
            <apidata name="MakeEncoder" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata abstract="true" virtual="true" />
            <parameters>
              <parameter name="Bulk" optional="true">
                <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
              <parameter name="OutputStream" optional="true">
                <type api="T:System.IO.Stream" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderEncryptAES.MakeEncryptor">
          <element api="M:Goedel.Cryptography.CryptoProviderEncryption.MakeEncryptor(System.Byte[],System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
            <apidata name="MakeEncryptor" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata abstract="true" virtual="true" />
            <parameters>
              <parameter name="Key" optional="true">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
              <parameter name="IV" optional="true">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
              <parameter name="OutputStream" optional="true">
                <type api="T:System.IO.Stream" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderEncryption" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.MakeEncryptor(System.Byte[],System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderEncryptAES.MakeDecryptor">
          <element api="M:Goedel.Cryptography.CryptoProviderEncryption.MakeDecryptor(System.Byte[],System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
            <apidata name="MakeDecryptor" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata abstract="true" virtual="true" />
            <parameters>
              <parameter name="Key">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="IV">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
              <parameter name="OutputStream" optional="true">
                <type api="T:System.IO.Stream" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataDecoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderEncryption" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.MakeDecryptor(System.Byte[],System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderEncryptAES.Encode">
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.String,Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryptAES.Register(Goedel.Cryptography.CryptoCatalog)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.BindDecoder(Goedel.Cryptography.CryptoDataDecoder)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.BindEncoder(Goedel.Cryptography.CryptoDataEncoder)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.Complete(Goedel.Cryptography.CryptoData)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.Decrypt(System.Byte[],System.Byte[],System.Byte[])" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.Encrypt(System.Byte[],System.Byte[],System.Byte[])" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderEncryptAES" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Cryptography.Framework.CryptoProviderEncryptAES">
      <topicdata name="CryptoProviderEncryptAES" group="list" subgroup="Properties" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderEncryptAES" />
      <apidata name="CryptoProviderEncryptAES" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Goedel.Cryptography.CryptoProvider.CryptoAlgorithm">
          <apidata name="CryptoAlgorithm" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_CryptoAlgorithm" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithm" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.UDF">
          <apidata name="UDF" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_UDF" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.KeyPair">
          <apidata name="KeyPair" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_KeyPair" />
          <setter name="set_KeyPair" />
          <returns>
            <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderEncryptAES.BlockSize" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderEncryptAES.CryptoAlgorithmID" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderEncryptAES.Size" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderEncryption.AlgorithmClass" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderEncryption.IVSize" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderEncryption.KeySize" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderEncryption.Provider" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderEncryptAES" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Cryptography.Framework.CryptoProviderEncryptAES">
      <topicdata name="CryptoProviderEncryptAES" group="list" subgroup="Fields" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderEncryptAES" />
      <apidata name="CryptoProviderEncryptAES" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Cryptography.Framework.CryptoProviderEncryption.AppendIntegrity" />
        <element api="F:Goedel.Cryptography.Framework.CryptoProviderEncryption.AppendIV" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderEncryptAES" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderEncryptAES.#ctor(System.Int32,System.Security.Cryptography.CipherMode,System.Security.Cryptography.PaddingMode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="KeySize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="CipherMode" optional="true">
          <type api="T:System.Security.Cryptography.CipherMode" ref="false" />
          <argument>
            <type api="T:System.Security.Cryptography.CipherMode" ref="false" />
            <enumValue>
              <field name="CBC" />
            </enumValue>
          </argument>
        </parameter>
        <parameter name="PaddingMode" optional="true">
          <type api="T:System.Security.Cryptography.PaddingMode" ref="false" />
          <argument>
            <type api="T:System.Security.Cryptography.PaddingMode" ref="false" />
            <enumValue>
              <field name="PKCS7" />
            </enumValue>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderEncryptAES" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderEncryptAES.BlockSize">
      <topicdata group="api" />
      <apidata name="BlockSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.CryptoProviderEncryption.BlockSize">
          <type api="T:Goedel.Cryptography.CryptoProviderEncryption" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_BlockSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderEncryptAES" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderEncryptAES.CryptoAlgorithmID">
      <topicdata group="api" />
      <apidata name="CryptoAlgorithmID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.CryptoProvider.CryptoAlgorithmID">
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CryptoAlgorithmID" />
      <returns>
        <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderEncryptAES" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderEncryptAES.Register(Goedel.Cryptography.CryptoCatalog)">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Catalog" optional="true">
          <type api="T:Goedel.Cryptography.CryptoCatalog" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.CryptoAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderEncryptAES" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderEncryptAES.Size">
      <topicdata group="api" />
      <apidata name="Size" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.CryptoProvider.Size">
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Size" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderEncryptAES" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.Framework.CryptoProviderEncryption">
      <topicdata group="api" />
      <apidata name="CryptoProviderEncryption" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Cryptography.CryptoProviderEncryption" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Goedel.Cryptography.Framework.CryptoProviderEncryptAES" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderEncryption.MakeEncoder">
          <element api="M:Goedel.Cryptography.CryptoProvider.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
            <apidata name="MakeEncoder" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata abstract="true" virtual="true" />
            <parameters>
              <parameter name="Bulk" optional="true">
                <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
              <parameter name="OutputStream" optional="true">
                <type api="T:System.IO.Stream" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderEncryption.MakeEncryptor">
          <element api="M:Goedel.Cryptography.CryptoProviderEncryption.MakeEncryptor(System.Byte[],System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
            <apidata name="MakeEncryptor" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata abstract="true" virtual="true" />
            <parameters>
              <parameter name="Key" optional="true">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
              <parameter name="IV" optional="true">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
              <parameter name="OutputStream" optional="true">
                <type api="T:System.IO.Stream" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderEncryption" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.MakeEncryptor(System.Byte[],System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderEncryption.MakeDecryptor">
          <element api="M:Goedel.Cryptography.CryptoProviderEncryption.MakeDecryptor(System.Byte[],System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
            <apidata name="MakeDecryptor" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata abstract="true" virtual="true" />
            <parameters>
              <parameter name="Key">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="IV">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
              <parameter name="OutputStream" optional="true">
                <type api="T:System.IO.Stream" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataDecoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderEncryption" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.MakeDecryptor(System.Byte[],System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
        </element>
        <element api="P:Goedel.Cryptography.CryptoProviderEncryption.BlockSize">
          <apidata name="BlockSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" />
          <getter name="get_BlockSize" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderEncryption" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderEncryption.Encode">
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.String,Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.CryptoAlgorithm">
          <apidata name="CryptoAlgorithm" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_CryptoAlgorithm" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithm" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.CryptoAlgorithmID">
          <apidata name="CryptoAlgorithmID" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" />
          <getter name="get_CryptoAlgorithmID" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.Size">
          <apidata name="Size" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" />
          <getter name="get_Size" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.UDF">
          <apidata name="UDF" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_UDF" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.KeyPair">
          <apidata name="KeyPair" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_KeyPair" />
          <setter name="set_KeyPair" />
          <returns>
            <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.#ctor(System.Security.Cryptography.SymmetricAlgorithm,System.Int32,System.Security.Cryptography.CipherMode,System.Security.Cryptography.PaddingMode)" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderEncryption.AlgorithmClass" />
        <element api="F:Goedel.Cryptography.Framework.CryptoProviderEncryption.AppendIntegrity" />
        <element api="F:Goedel.Cryptography.Framework.CryptoProviderEncryption.AppendIV" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.BindDecoder(Goedel.Cryptography.CryptoDataDecoder)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.BindEncoder(Goedel.Cryptography.CryptoDataEncoder)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.Complete(Goedel.Cryptography.CryptoData)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.Decrypt(System.Byte[],System.Byte[],System.Byte[])" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.Encrypt(System.Byte[],System.Byte[],System.Byte[])" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderEncryption.IVSize" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderEncryption.KeySize" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderEncryption.Provider" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Cryptography.Framework.CryptoProviderEncryption">
      <topicdata name="CryptoProviderEncryption" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderEncryption" />
      <apidata name="CryptoProviderEncryption" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderEncryption.MakeEncoder">
          <element api="M:Goedel.Cryptography.CryptoProvider.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
            <apidata name="MakeEncoder" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata abstract="true" virtual="true" />
            <parameters>
              <parameter name="Bulk" optional="true">
                <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
              <parameter name="OutputStream" optional="true">
                <type api="T:System.IO.Stream" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderEncryption.MakeEncryptor">
          <element api="M:Goedel.Cryptography.CryptoProviderEncryption.MakeEncryptor(System.Byte[],System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
            <apidata name="MakeEncryptor" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata abstract="true" virtual="true" />
            <parameters>
              <parameter name="Key" optional="true">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
              <parameter name="IV" optional="true">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
              <parameter name="OutputStream" optional="true">
                <type api="T:System.IO.Stream" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderEncryption" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.MakeEncryptor(System.Byte[],System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderEncryption.MakeDecryptor">
          <element api="M:Goedel.Cryptography.CryptoProviderEncryption.MakeDecryptor(System.Byte[],System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
            <apidata name="MakeDecryptor" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata abstract="true" virtual="true" />
            <parameters>
              <parameter name="Key">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="IV">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
              <parameter name="OutputStream" optional="true">
                <type api="T:System.IO.Stream" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataDecoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderEncryption" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.MakeDecryptor(System.Byte[],System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderEncryption.Encode">
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.String,Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.BindDecoder(Goedel.Cryptography.CryptoDataDecoder)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.BindEncoder(Goedel.Cryptography.CryptoDataEncoder)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.Complete(Goedel.Cryptography.CryptoData)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.Decrypt(System.Byte[],System.Byte[],System.Byte[])" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.Encrypt(System.Byte[],System.Byte[],System.Byte[])" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderEncryption" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Cryptography.Framework.CryptoProviderEncryption">
      <topicdata name="CryptoProviderEncryption" group="list" subgroup="Properties" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderEncryption" />
      <apidata name="CryptoProviderEncryption" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Goedel.Cryptography.CryptoProviderEncryption.BlockSize">
          <apidata name="BlockSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" />
          <getter name="get_BlockSize" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderEncryption" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.CryptoAlgorithm">
          <apidata name="CryptoAlgorithm" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_CryptoAlgorithm" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithm" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.CryptoAlgorithmID">
          <apidata name="CryptoAlgorithmID" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" />
          <getter name="get_CryptoAlgorithmID" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.Size">
          <apidata name="Size" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <propertydata get="true" />
          <getter name="get_Size" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.UDF">
          <apidata name="UDF" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_UDF" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.KeyPair">
          <apidata name="KeyPair" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_KeyPair" />
          <setter name="set_KeyPair" />
          <returns>
            <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderEncryption.AlgorithmClass" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderEncryption.IVSize" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderEncryption.KeySize" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderEncryption.Provider" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderEncryption" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Cryptography.Framework.CryptoProviderEncryption">
      <topicdata name="CryptoProviderEncryption" group="list" subgroup="Fields" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderEncryption" />
      <apidata name="CryptoProviderEncryption" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="F:Goedel.Cryptography.Framework.CryptoProviderEncryption.AppendIntegrity" />
        <element api="F:Goedel.Cryptography.Framework.CryptoProviderEncryption.AppendIV" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderEncryption" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.Framework.CryptoProviderEncryption.MakeEncoder">
      <topicdata name="MakeEncoder" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="MakeEncoder" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Cryptography.CryptoProvider.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
          <apidata name="MakeEncoder" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <parameters>
            <parameter name="Bulk" optional="true">
              <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
            <parameter name="Algorithm" optional="true">
              <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
              <argument>
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <enumValue>
                  <field name="Default" />
                </enumValue>
              </argument>
            </parameter>
            <parameter name="OutputStream" optional="true">
              <type api="T:System.IO.Stream" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderEncryption" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.Framework.CryptoProviderEncryption.MakeEncryptor">
      <topicdata name="MakeEncryptor" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="MakeEncryptor" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Cryptography.CryptoProviderEncryption.MakeEncryptor(System.Byte[],System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
          <apidata name="MakeEncryptor" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <parameters>
            <parameter name="Key" optional="true">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
            <parameter name="IV" optional="true">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
            <parameter name="Algorithm" optional="true">
              <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
              <argument>
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <enumValue>
                  <field name="Default" />
                </enumValue>
              </argument>
            </parameter>
            <parameter name="OutputStream" optional="true">
              <type api="T:System.IO.Stream" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderEncryption" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.MakeEncryptor(System.Byte[],System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderEncryption" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.Framework.CryptoProviderEncryption.MakeDecryptor">
      <topicdata name="MakeDecryptor" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="MakeDecryptor" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Cryptography.CryptoProviderEncryption.MakeDecryptor(System.Byte[],System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
          <apidata name="MakeDecryptor" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <parameters>
            <parameter name="Key">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="IV">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="Algorithm" optional="true">
              <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
              <argument>
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <enumValue>
                  <field name="Default" />
                </enumValue>
              </argument>
            </parameter>
            <parameter name="OutputStream" optional="true">
              <type api="T:System.IO.Stream" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoDataDecoder" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderEncryption" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.MakeDecryptor(System.Byte[],System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderEncryption" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.#ctor(System.Security.Cryptography.SymmetricAlgorithm,System.Int32,System.Security.Cryptography.CipherMode,System.Security.Cryptography.PaddingMode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="SymmetricAlgorithm">
          <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
        </parameter>
        <parameter name="KeySize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="CipherMode">
          <type api="T:System.Security.Cryptography.CipherMode" ref="false" />
        </parameter>
        <parameter name="PaddingMode" optional="true">
          <type api="T:System.Security.Cryptography.PaddingMode" ref="false" />
          <argument>
            <type api="T:System.Security.Cryptography.PaddingMode" ref="false" />
            <enumValue>
              <field name="PKCS7" />
            </enumValue>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderEncryption" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderEncryption.AlgorithmClass">
      <topicdata group="api" />
      <apidata name="AlgorithmClass" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.CryptoProviderEncryption.AlgorithmClass">
          <type api="T:Goedel.Cryptography.CryptoProviderEncryption" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_AlgorithmClass" />
      <returns>
        <type api="T:Goedel.Cryptography.CryptoAlgorithmClass" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderEncryption" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.Framework.CryptoProviderEncryption.AppendIntegrity">
      <topicdata group="api" />
      <apidata name="AppendIntegrity" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderEncryption" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.Framework.CryptoProviderEncryption.AppendIV">
      <topicdata group="api" />
      <apidata name="AppendIV" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderEncryption" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.BindDecoder(Goedel.Cryptography.CryptoDataDecoder)">
      <topicdata group="api" />
      <apidata name="BindDecoder" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Cryptography.CryptoProviderEncryption.BindDecoder(Goedel.Cryptography.CryptoDataDecoder)">
          <type api="T:Goedel.Cryptography.CryptoProviderEncryption" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Decoder">
          <type api="T:Goedel.Cryptography.CryptoDataDecoder" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderEncryption" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.BindEncoder(Goedel.Cryptography.CryptoDataEncoder)">
      <topicdata group="api" />
      <apidata name="BindEncoder" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Cryptography.CryptoProviderBulk.BindEncoder(Goedel.Cryptography.CryptoDataEncoder)">
          <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Encoder">
          <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderEncryption" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.Complete(Goedel.Cryptography.CryptoData)">
      <topicdata group="api" />
      <apidata name="Complete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Cryptography.CryptoProvider.Complete(Goedel.Cryptography.CryptoData)">
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="CryptoData">
          <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderEncryption" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.Decrypt(System.Byte[],System.Byte[],System.Byte[])">
      <topicdata group="api" />
      <apidata name="Decrypt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Cryptography.CryptoProviderEncryption.Decrypt(System.Byte[],System.Byte[],System.Byte[])">
          <type api="T:Goedel.Cryptography.CryptoProviderEncryption" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="Key" optional="true">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="IV" optional="true">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderEncryption" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.Encrypt(System.Byte[],System.Byte[],System.Byte[])">
      <topicdata group="api" />
      <apidata name="Encrypt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Cryptography.CryptoProviderEncryption.Encrypt(System.Byte[],System.Byte[],System.Byte[])">
          <type api="T:Goedel.Cryptography.CryptoProviderEncryption" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="Key" optional="true">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="IV" optional="true">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderEncryption" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderEncryption.IVSize">
      <topicdata group="api" />
      <apidata name="IVSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.CryptoProviderEncryption.IVSize">
          <type api="T:Goedel.Cryptography.CryptoProviderEncryption" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IVSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderEncryption" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderEncryption.KeySize">
      <topicdata group="api" />
      <apidata name="KeySize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.CryptoProviderEncryption.KeySize">
          <type api="T:Goedel.Cryptography.CryptoProviderEncryption" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_KeySize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderEncryption" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.MakeDecryptor(System.Byte[],System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="MakeDecryptor" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Cryptography.Framework.CryptoProviderEncryption.MakeDecryptor" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="Key">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="IV">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="Algorithm" optional="true">
          <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
          <argument>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
            <enumValue>
              <field name="Default" />
            </enumValue>
          </argument>
        </parameter>
        <parameter name="OutputStream" optional="true">
          <type api="T:System.IO.Stream" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.CryptoDataDecoder" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderEncryption" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="MakeEncoder" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Cryptography.Framework.CryptoProviderEncryption.MakeEncoder" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="Bulk" optional="true">
          <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="Algorithm" optional="true">
          <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
          <argument>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
            <enumValue>
              <field name="Default" />
            </enumValue>
          </argument>
        </parameter>
        <parameter name="OutputStream" optional="true">
          <type api="T:System.IO.Stream" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderEncryption" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderEncryption.MakeEncryptor(System.Byte[],System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="MakeEncryptor" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Cryptography.Framework.CryptoProviderEncryption.MakeEncryptor" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="Key" optional="true">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="IV" optional="true">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="Algorithm" optional="true">
          <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
          <argument>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
            <enumValue>
              <field name="Default" />
            </enumValue>
          </argument>
        </parameter>
        <parameter name="OutputStream" optional="true">
          <type api="T:System.IO.Stream" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderEncryption" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderEncryption.Provider">
      <topicdata group="api" />
      <apidata name="Provider" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Provider" />
      <setter name="set_Provider" />
      <returns>
        <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderEncryption" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA">
      <topicdata group="api" />
      <apidata name="CryptoProviderExchangeRSA" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Cryptography.CryptoProviderExchange" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProviderAsymmetric" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSAPKCS" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.Encrypt">
          <element api="M:Goedel.Cryptography.CryptoProviderExchange.Encrypt(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encrypt" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderExchange" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.CryptoProviderExchange.Encrypt(System.String,Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encrypt" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderExchange" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.Encrypt(Goedel.Cryptography.CryptoData,Goedel.Cryptography.CryptoAlgorithmID,System.Boolean)" />
        </element>
        <element api="M:Goedel.Cryptography.CryptoProviderExchange.SetOptions(Goedel.Cryptography.CryptoAlgorithmID)">
          <apidata name="SetOptions" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="BaseAlgorithm">
              <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderExchange" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.CryptoProviderExchange.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
          <apidata name="MakeEncoder" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:Goedel.Cryptography.CryptoProvider.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="Bulk" optional="true">
              <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
            <parameter name="Algorithm" optional="true">
              <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
              <argument>
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <enumValue>
                  <field name="Default" />
                </enumValue>
              </argument>
            </parameter>
            <parameter name="OutputStream" optional="true">
              <type api="T:System.IO.Stream" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderExchange" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProviderExchange.AlgorithmClass">
          <apidata name="AlgorithmClass" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:Goedel.Cryptography.CryptoProvider.AlgorithmClass">
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_AlgorithmClass" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmClass" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderExchange" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProviderExchange.BulkAlgorithmDefault">
          <apidata name="BulkAlgorithmDefault" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:Goedel.Cryptography.CryptoProviderAsymmetric.BulkAlgorithmDefault">
              <type api="T:Goedel.Cryptography.CryptoProviderAsymmetric" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" set="true" />
          <getter name="get_BulkAlgorithmDefault" />
          <setter name="set_BulkAlgorithmDefault" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderExchange" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.CryptoProvider.Complete(Goedel.Cryptography.CryptoData)">
          <apidata name="Complete" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="CryptoData">
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.Encode">
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.String,Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.#ctor">
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.#ctor(System.Int32)" />
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.#ctor(Goedel.Cryptography.Framework.RSAKeyPair)" />
        </element>
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.CryptoAlgorithm" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.CryptoAlgorithmID" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.Decrypt(System.Byte[],Goedel.Cryptography.KeyPair,Goedel.Cryptography.CryptoAlgorithmID,Goedel.Cryptography.KeyAgreementResult)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.FindLocal(System.String)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.Generate(Goedel.Cryptography.KeySecurity,System.Int32)" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.KeyPair" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.KeySize" />
        <element api="F:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.OAEP" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.Register(Goedel.Cryptography.CryptoCatalog)" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.Size" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.UDF" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA">
      <topicdata name="CryptoProviderExchangeRSA" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA" />
      <apidata name="CryptoProviderExchangeRSA" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.Encrypt">
          <element api="M:Goedel.Cryptography.CryptoProviderExchange.Encrypt(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encrypt" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderExchange" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.CryptoProviderExchange.Encrypt(System.String,Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encrypt" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderExchange" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.Encrypt(Goedel.Cryptography.CryptoData,Goedel.Cryptography.CryptoAlgorithmID,System.Boolean)" />
        </element>
        <element api="M:Goedel.Cryptography.CryptoProviderExchange.SetOptions(Goedel.Cryptography.CryptoAlgorithmID)">
          <apidata name="SetOptions" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="BaseAlgorithm">
              <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderExchange" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.CryptoProviderExchange.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
          <apidata name="MakeEncoder" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:Goedel.Cryptography.CryptoProvider.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="Bulk" optional="true">
              <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
            <parameter name="Algorithm" optional="true">
              <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
              <argument>
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <enumValue>
                  <field name="Default" />
                </enumValue>
              </argument>
            </parameter>
            <parameter name="OutputStream" optional="true">
              <type api="T:System.IO.Stream" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderExchange" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.CryptoProvider.Complete(Goedel.Cryptography.CryptoData)">
          <apidata name="Complete" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="CryptoData">
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.Encode">
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.String,Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.Decrypt(System.Byte[],Goedel.Cryptography.KeyPair,Goedel.Cryptography.CryptoAlgorithmID,Goedel.Cryptography.KeyAgreementResult)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.FindLocal(System.String)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.Generate(Goedel.Cryptography.KeySecurity,System.Int32)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.Register(Goedel.Cryptography.CryptoCatalog)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA">
      <topicdata name="CryptoProviderExchangeRSA" group="list" subgroup="Properties" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA" />
      <apidata name="CryptoProviderExchangeRSA" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Goedel.Cryptography.CryptoProviderExchange.AlgorithmClass">
          <apidata name="AlgorithmClass" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:Goedel.Cryptography.CryptoProvider.AlgorithmClass">
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_AlgorithmClass" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmClass" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderExchange" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProviderExchange.BulkAlgorithmDefault">
          <apidata name="BulkAlgorithmDefault" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:Goedel.Cryptography.CryptoProviderAsymmetric.BulkAlgorithmDefault">
              <type api="T:Goedel.Cryptography.CryptoProviderAsymmetric" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" set="true" />
          <getter name="get_BulkAlgorithmDefault" />
          <setter name="set_BulkAlgorithmDefault" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderExchange" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.CryptoAlgorithm" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.CryptoAlgorithmID" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.KeyPair" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.KeySize" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.Size" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.UDF" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA">
      <topicdata name="CryptoProviderExchangeRSA" group="list" subgroup="Fields" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA" />
      <apidata name="CryptoProviderExchangeRSA" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.OAEP" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.Encrypt">
      <topicdata name="Encrypt" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Encrypt" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Cryptography.CryptoProviderExchange.Encrypt(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
          <apidata name="Encrypt" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="Data">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="Algorithm" optional="true">
              <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
              <argument>
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <enumValue>
                  <field name="Default" />
                </enumValue>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderExchange" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.CryptoProviderExchange.Encrypt(System.String,Goedel.Cryptography.CryptoAlgorithmID)">
          <apidata name="Encrypt" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="Text">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="Algorithm" optional="true">
              <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
              <argument>
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <enumValue>
                  <field name="Default" />
                </enumValue>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderExchange" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.Encrypt(Goedel.Cryptography.CryptoData,Goedel.Cryptography.CryptoAlgorithmID,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.#ctor(System.Int32)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.#ctor(Goedel.Cryptography.Framework.RSAKeyPair)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.#ctor(Goedel.Cryptography.Framework.RSAKeyPair)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.#ctor" />
      <parameters>
        <parameter name="RSAKeyPair">
          <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.#ctor" />
      <parameters>
        <parameter name="KeySize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.CryptoAlgorithm">
      <topicdata group="api" />
      <apidata name="CryptoAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.CryptoProvider.CryptoAlgorithm">
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CryptoAlgorithm" />
      <returns>
        <type api="T:Goedel.Cryptography.CryptoAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.CryptoAlgorithmID">
      <topicdata group="api" />
      <apidata name="CryptoAlgorithmID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.CryptoProvider.CryptoAlgorithmID">
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CryptoAlgorithmID" />
      <returns>
        <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.Decrypt(System.Byte[],Goedel.Cryptography.KeyPair,Goedel.Cryptography.CryptoAlgorithmID,Goedel.Cryptography.KeyAgreementResult)">
      <topicdata group="api" />
      <apidata name="Decrypt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Cryptography.CryptoProviderExchange.Decrypt(System.Byte[],Goedel.Cryptography.KeyPair,Goedel.Cryptography.CryptoAlgorithmID,Goedel.Cryptography.KeyAgreementResult)">
          <type api="T:Goedel.Cryptography.CryptoProviderExchange" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="EncryptedKey">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="Ephemeral" optional="true">
          <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="AlgorithmID" optional="true">
          <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
          <argument>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
            <enumValue>
              <field name="Default" />
            </enumValue>
          </argument>
        </parameter>
        <parameter name="Partial" optional="true">
          <type api="T:Goedel.Cryptography.KeyAgreementResult" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.Encrypt(Goedel.Cryptography.CryptoData,Goedel.Cryptography.CryptoAlgorithmID,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Encrypt" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.Encrypt" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Cryptography.CryptoProviderExchange.Encrypt(Goedel.Cryptography.CryptoData,Goedel.Cryptography.CryptoAlgorithmID,System.Boolean)">
          <type api="T:Goedel.Cryptography.CryptoProviderExchange" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Data">
          <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
        </parameter>
        <parameter name="Algorithm" optional="true">
          <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
          <argument>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
            <enumValue>
              <field name="Default" />
            </enumValue>
          </argument>
        </parameter>
        <parameter name="Wrap" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.CryptoDataExchange" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.FindLocal(System.String)">
      <topicdata group="api" />
      <apidata name="FindLocal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Cryptography.CryptoProviderAsymmetric.FindLocal(System.String)">
          <type api="T:Goedel.Cryptography.CryptoProviderAsymmetric" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="UDF">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.Generate(Goedel.Cryptography.KeySecurity,System.Int32)">
      <topicdata group="api" />
      <apidata name="Generate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Cryptography.CryptoProviderAsymmetric.Generate(Goedel.Cryptography.KeySecurity,System.Int32)">
          <type api="T:Goedel.Cryptography.CryptoProviderAsymmetric" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="KeySecurity">
          <type api="T:Goedel.Cryptography.KeySecurity" ref="false" />
        </parameter>
        <parameter name="Size" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.KeyPair">
      <topicdata group="api" />
      <apidata name="KeyPair" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.CryptoProvider.KeyPair">
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_KeyPair" />
      <setter name="set_KeyPair" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.KeySize">
      <topicdata group="api" />
      <apidata name="KeySize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_KeySize" />
      <setter name="set_KeySize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.OAEP">
      <topicdata group="api" />
      <apidata name="OAEP" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.Register(Goedel.Cryptography.CryptoCatalog)">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Catalog" optional="true">
          <type api="T:Goedel.Cryptography.CryptoCatalog" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.CryptoAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.Size">
      <topicdata group="api" />
      <apidata name="Size" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.CryptoProvider.Size">
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Size" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.UDF">
      <topicdata group="api" />
      <apidata name="UDF" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.CryptoProvider.UDF">
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_UDF" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSAPKCS">
      <topicdata group="api" />
      <apidata name="CryptoProviderExchangeRSAPKCS" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProviderExchange" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProviderAsymmetric" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.CryptoAlgorithm" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.Decrypt(System.Byte[],Goedel.Cryptography.KeyPair,Goedel.Cryptography.CryptoAlgorithmID,Goedel.Cryptography.KeyAgreementResult)" />
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderExchangeRSAPKCS.Encrypt">
          <element api="M:Goedel.Cryptography.CryptoProviderExchange.Encrypt(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encrypt" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderExchange" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.CryptoProviderExchange.Encrypt(System.String,Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encrypt" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderExchange" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.Encrypt(Goedel.Cryptography.CryptoData,Goedel.Cryptography.CryptoAlgorithmID,System.Boolean)" />
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.FindLocal(System.String)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.Generate(Goedel.Cryptography.KeySecurity,System.Int32)" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.KeyPair" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.KeySize" />
        <element api="F:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.OAEP" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.Size" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.UDF" />
        <element api="M:Goedel.Cryptography.CryptoProviderExchange.SetOptions(Goedel.Cryptography.CryptoAlgorithmID)">
          <apidata name="SetOptions" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="BaseAlgorithm">
              <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderExchange" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.CryptoProviderExchange.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
          <apidata name="MakeEncoder" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:Goedel.Cryptography.CryptoProvider.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="Bulk" optional="true">
              <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
            <parameter name="Algorithm" optional="true">
              <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
              <argument>
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <enumValue>
                  <field name="Default" />
                </enumValue>
              </argument>
            </parameter>
            <parameter name="OutputStream" optional="true">
              <type api="T:System.IO.Stream" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderExchange" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProviderExchange.AlgorithmClass">
          <apidata name="AlgorithmClass" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:Goedel.Cryptography.CryptoProvider.AlgorithmClass">
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_AlgorithmClass" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmClass" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderExchange" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProviderExchange.BulkAlgorithmDefault">
          <apidata name="BulkAlgorithmDefault" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:Goedel.Cryptography.CryptoProviderAsymmetric.BulkAlgorithmDefault">
              <type api="T:Goedel.Cryptography.CryptoProviderAsymmetric" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" set="true" />
          <getter name="get_BulkAlgorithmDefault" />
          <setter name="set_BulkAlgorithmDefault" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderExchange" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.CryptoProvider.Complete(Goedel.Cryptography.CryptoData)">
          <apidata name="Complete" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="CryptoData">
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderExchangeRSAPKCS.Encode">
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.String,Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderExchangeRSAPKCS.#ctor(System.Int32)" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderExchangeRSAPKCS.CryptoAlgorithmID" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSAPKCS">
      <topicdata name="CryptoProviderExchangeRSAPKCS" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSAPKCS" />
      <apidata name="CryptoProviderExchangeRSAPKCS" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.Decrypt(System.Byte[],Goedel.Cryptography.KeyPair,Goedel.Cryptography.CryptoAlgorithmID,Goedel.Cryptography.KeyAgreementResult)" />
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderExchangeRSAPKCS.Encrypt">
          <element api="M:Goedel.Cryptography.CryptoProviderExchange.Encrypt(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encrypt" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderExchange" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.CryptoProviderExchange.Encrypt(System.String,Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encrypt" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderExchange" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.Encrypt(Goedel.Cryptography.CryptoData,Goedel.Cryptography.CryptoAlgorithmID,System.Boolean)" />
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.FindLocal(System.String)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.Generate(Goedel.Cryptography.KeySecurity,System.Int32)" />
        <element api="M:Goedel.Cryptography.CryptoProviderExchange.SetOptions(Goedel.Cryptography.CryptoAlgorithmID)">
          <apidata name="SetOptions" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="BaseAlgorithm">
              <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderExchange" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.CryptoProviderExchange.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
          <apidata name="MakeEncoder" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:Goedel.Cryptography.CryptoProvider.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="Bulk" optional="true">
              <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
            <parameter name="Algorithm" optional="true">
              <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
              <argument>
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <enumValue>
                  <field name="Default" />
                </enumValue>
              </argument>
            </parameter>
            <parameter name="OutputStream" optional="true">
              <type api="T:System.IO.Stream" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderExchange" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.CryptoProvider.Complete(Goedel.Cryptography.CryptoData)">
          <apidata name="Complete" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="CryptoData">
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderExchangeRSAPKCS.Encode">
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.String,Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSAPKCS" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSAPKCS">
      <topicdata name="CryptoProviderExchangeRSAPKCS" group="list" subgroup="Properties" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSAPKCS" />
      <apidata name="CryptoProviderExchangeRSAPKCS" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.CryptoAlgorithm" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.KeyPair" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.KeySize" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.Size" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.UDF" />
        <element api="P:Goedel.Cryptography.CryptoProviderExchange.AlgorithmClass">
          <apidata name="AlgorithmClass" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:Goedel.Cryptography.CryptoProvider.AlgorithmClass">
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_AlgorithmClass" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmClass" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderExchange" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProviderExchange.BulkAlgorithmDefault">
          <apidata name="BulkAlgorithmDefault" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:Goedel.Cryptography.CryptoProviderAsymmetric.BulkAlgorithmDefault">
              <type api="T:Goedel.Cryptography.CryptoProviderAsymmetric" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" set="true" />
          <getter name="get_BulkAlgorithmDefault" />
          <setter name="set_BulkAlgorithmDefault" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderExchange" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderExchangeRSAPKCS.CryptoAlgorithmID" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSAPKCS" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSAPKCS">
      <topicdata name="CryptoProviderExchangeRSAPKCS" group="list" subgroup="Fields" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSAPKCS" />
      <apidata name="CryptoProviderExchangeRSAPKCS" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.OAEP" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSAPKCS" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderExchangeRSAPKCS.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="KeySize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSAPKCS" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderExchangeRSAPKCS.CryptoAlgorithmID">
      <topicdata group="api" />
      <apidata name="CryptoAlgorithmID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA.CryptoAlgorithmID">
          <type api="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSA" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CryptoAlgorithmID" />
      <returns>
        <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderExchangeRSAPKCS" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256">
      <topicdata group="api" />
      <apidata name="CryptoProviderHMACSHA2_256" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Cryptography.Framework.CryptoProviderAuthentication" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProviderAuthentication" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderAuthentication.AlgorithmClass" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.BindEncoder(Goedel.Cryptography.CryptoDataEncoder)" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderAuthentication.Key" />
        <element api="F:Goedel.Cryptography.Framework.CryptoProviderAuthentication.KeyedHashAlgorithm" />
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256.MakeAuthenticator">
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.MakeAuthenticator(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
          <element api="M:Goedel.Cryptography.CryptoProviderAuthentication.MakeAuthenticator(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
            <apidata name="MakeAuthenticator" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata abstract="true" virtual="true" />
            <parameters>
              <parameter name="Key" optional="true">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
              <parameter name="OutputStream" optional="true">
                <type api="T:System.IO.Stream" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderAuthentication" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256.MakeEncoder">
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
          <element api="M:Goedel.Cryptography.CryptoProvider.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
            <apidata name="MakeEncoder" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata abstract="true" virtual="true" />
            <parameters>
              <parameter name="Bulk" optional="true">
                <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
              <parameter name="OutputStream" optional="true">
                <type api="T:System.IO.Stream" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256.ProcessData">
          <element api="M:Goedel.Cryptography.CryptoProviderDigest.ProcessData(System.Byte[],System.Byte[])">
            <apidata name="ProcessData" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Key" optional="true">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.ProcessData(System.Byte[],System.Int32,System.Int32,System.Byte[])" />
        </element>
        <element api="M:Goedel.Cryptography.CryptoProviderDigest.Process(System.Byte[],System.Byte[])">
          <apidata name="Process" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="Data">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="Key" optional="true">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.CryptoProvider.Complete(Goedel.Cryptography.CryptoData)">
          <apidata name="Complete" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="CryptoData">
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256.Encode">
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.String,Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.UDF">
          <apidata name="UDF" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_UDF" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.KeyPair">
          <apidata name="KeyPair" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_KeyPair" />
          <setter name="set_KeyPair" />
          <returns>
            <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256.#ctor" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256.CryptoAlgorithm" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256.CryptoAlgorithmID" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256.Register(Goedel.Cryptography.CryptoCatalog)" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256.Size" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256">
      <topicdata name="CryptoProviderHMACSHA2_256" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256" />
      <apidata name="CryptoProviderHMACSHA2_256" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.BindEncoder(Goedel.Cryptography.CryptoDataEncoder)" />
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256.MakeAuthenticator">
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.MakeAuthenticator(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
          <element api="M:Goedel.Cryptography.CryptoProviderAuthentication.MakeAuthenticator(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
            <apidata name="MakeAuthenticator" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata abstract="true" virtual="true" />
            <parameters>
              <parameter name="Key" optional="true">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
              <parameter name="OutputStream" optional="true">
                <type api="T:System.IO.Stream" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderAuthentication" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256.MakeEncoder">
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
          <element api="M:Goedel.Cryptography.CryptoProvider.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
            <apidata name="MakeEncoder" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata abstract="true" virtual="true" />
            <parameters>
              <parameter name="Bulk" optional="true">
                <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
              <parameter name="OutputStream" optional="true">
                <type api="T:System.IO.Stream" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256.ProcessData">
          <element api="M:Goedel.Cryptography.CryptoProviderDigest.ProcessData(System.Byte[],System.Byte[])">
            <apidata name="ProcessData" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Key" optional="true">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.ProcessData(System.Byte[],System.Int32,System.Int32,System.Byte[])" />
        </element>
        <element api="M:Goedel.Cryptography.CryptoProviderDigest.Process(System.Byte[],System.Byte[])">
          <apidata name="Process" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="Data">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="Key" optional="true">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.CryptoProvider.Complete(Goedel.Cryptography.CryptoData)">
          <apidata name="Complete" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="CryptoData">
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256.Encode">
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.String,Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256.Register(Goedel.Cryptography.CryptoCatalog)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256">
      <topicdata name="CryptoProviderHMACSHA2_256" group="list" subgroup="Properties" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256" />
      <apidata name="CryptoProviderHMACSHA2_256" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderAuthentication.AlgorithmClass" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderAuthentication.Key" />
        <element api="P:Goedel.Cryptography.CryptoProvider.UDF">
          <apidata name="UDF" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_UDF" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.KeyPair">
          <apidata name="KeyPair" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_KeyPair" />
          <setter name="set_KeyPair" />
          <returns>
            <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256.CryptoAlgorithm" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256.CryptoAlgorithmID" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256.Size" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256">
      <topicdata name="CryptoProviderHMACSHA2_256" group="list" subgroup="Fields" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256" />
      <apidata name="CryptoProviderHMACSHA2_256" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Cryptography.Framework.CryptoProviderAuthentication.KeyedHashAlgorithm" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256.CryptoAlgorithm">
      <topicdata group="api" />
      <apidata name="CryptoAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.CryptoProvider.CryptoAlgorithm">
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CryptoAlgorithm" />
      <returns>
        <type api="T:Goedel.Cryptography.CryptoAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256.CryptoAlgorithmID">
      <topicdata group="api" />
      <apidata name="CryptoAlgorithmID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.CryptoProvider.CryptoAlgorithmID">
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CryptoAlgorithmID" />
      <returns>
        <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256.Register(Goedel.Cryptography.CryptoCatalog)">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Catalog" optional="true">
          <type api="T:Goedel.Cryptography.CryptoCatalog" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.CryptoAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256.Size">
      <topicdata group="api" />
      <apidata name="Size" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.CryptoProvider.Size">
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Size" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_256" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512">
      <topicdata group="api" />
      <apidata name="CryptoProviderHMACSHA2_512" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Cryptography.Framework.CryptoProviderAuthentication" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProviderAuthentication" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderAuthentication.AlgorithmClass" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.BindEncoder(Goedel.Cryptography.CryptoDataEncoder)" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderAuthentication.Key" />
        <element api="F:Goedel.Cryptography.Framework.CryptoProviderAuthentication.KeyedHashAlgorithm" />
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512.MakeAuthenticator">
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.MakeAuthenticator(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
          <element api="M:Goedel.Cryptography.CryptoProviderAuthentication.MakeAuthenticator(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
            <apidata name="MakeAuthenticator" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata abstract="true" virtual="true" />
            <parameters>
              <parameter name="Key" optional="true">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
              <parameter name="OutputStream" optional="true">
                <type api="T:System.IO.Stream" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderAuthentication" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512.MakeEncoder">
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
          <element api="M:Goedel.Cryptography.CryptoProvider.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
            <apidata name="MakeEncoder" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata abstract="true" virtual="true" />
            <parameters>
              <parameter name="Bulk" optional="true">
                <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
              <parameter name="OutputStream" optional="true">
                <type api="T:System.IO.Stream" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512.ProcessData">
          <element api="M:Goedel.Cryptography.CryptoProviderDigest.ProcessData(System.Byte[],System.Byte[])">
            <apidata name="ProcessData" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Key" optional="true">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.ProcessData(System.Byte[],System.Int32,System.Int32,System.Byte[])" />
        </element>
        <element api="M:Goedel.Cryptography.CryptoProviderDigest.Process(System.Byte[],System.Byte[])">
          <apidata name="Process" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="Data">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="Key" optional="true">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.CryptoProvider.Complete(Goedel.Cryptography.CryptoData)">
          <apidata name="Complete" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="CryptoData">
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512.Encode">
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.String,Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.UDF">
          <apidata name="UDF" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_UDF" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.KeyPair">
          <apidata name="KeyPair" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_KeyPair" />
          <setter name="set_KeyPair" />
          <returns>
            <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512.#ctor" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512.CryptoAlgorithm" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512.CryptoAlgorithmID" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512.Register(Goedel.Cryptography.CryptoCatalog)" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512.Size" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512">
      <topicdata name="CryptoProviderHMACSHA2_512" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512" />
      <apidata name="CryptoProviderHMACSHA2_512" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.BindEncoder(Goedel.Cryptography.CryptoDataEncoder)" />
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512.MakeAuthenticator">
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.MakeAuthenticator(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
          <element api="M:Goedel.Cryptography.CryptoProviderAuthentication.MakeAuthenticator(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
            <apidata name="MakeAuthenticator" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata abstract="true" virtual="true" />
            <parameters>
              <parameter name="Key" optional="true">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
              <parameter name="OutputStream" optional="true">
                <type api="T:System.IO.Stream" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderAuthentication" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512.MakeEncoder">
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
          <element api="M:Goedel.Cryptography.CryptoProvider.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
            <apidata name="MakeEncoder" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata abstract="true" virtual="true" />
            <parameters>
              <parameter name="Bulk" optional="true">
                <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
              <parameter name="OutputStream" optional="true">
                <type api="T:System.IO.Stream" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512.ProcessData">
          <element api="M:Goedel.Cryptography.CryptoProviderDigest.ProcessData(System.Byte[],System.Byte[])">
            <apidata name="ProcessData" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Key" optional="true">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderAuthentication.ProcessData(System.Byte[],System.Int32,System.Int32,System.Byte[])" />
        </element>
        <element api="M:Goedel.Cryptography.CryptoProviderDigest.Process(System.Byte[],System.Byte[])">
          <apidata name="Process" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="Data">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="Key" optional="true">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.CryptoProvider.Complete(Goedel.Cryptography.CryptoData)">
          <apidata name="Complete" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="CryptoData">
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512.Encode">
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.String,Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512.Register(Goedel.Cryptography.CryptoCatalog)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512">
      <topicdata name="CryptoProviderHMACSHA2_512" group="list" subgroup="Properties" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512" />
      <apidata name="CryptoProviderHMACSHA2_512" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderAuthentication.AlgorithmClass" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderAuthentication.Key" />
        <element api="P:Goedel.Cryptography.CryptoProvider.UDF">
          <apidata name="UDF" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_UDF" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.KeyPair">
          <apidata name="KeyPair" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_KeyPair" />
          <setter name="set_KeyPair" />
          <returns>
            <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512.CryptoAlgorithm" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512.CryptoAlgorithmID" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512.Size" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512">
      <topicdata name="CryptoProviderHMACSHA2_512" group="list" subgroup="Fields" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512" />
      <apidata name="CryptoProviderHMACSHA2_512" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Cryptography.Framework.CryptoProviderAuthentication.KeyedHashAlgorithm" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512.CryptoAlgorithm">
      <topicdata group="api" />
      <apidata name="CryptoAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.CryptoProvider.CryptoAlgorithm">
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CryptoAlgorithm" />
      <returns>
        <type api="T:Goedel.Cryptography.CryptoAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512.CryptoAlgorithmID">
      <topicdata group="api" />
      <apidata name="CryptoAlgorithmID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.CryptoProvider.CryptoAlgorithmID">
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CryptoAlgorithmID" />
      <returns>
        <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512.Register(Goedel.Cryptography.CryptoCatalog)">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Catalog" optional="true">
          <type api="T:Goedel.Cryptography.CryptoCatalog" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.CryptoAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512.Size">
      <topicdata group="api" />
      <apidata name="Size" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.CryptoProvider.Size">
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Size" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderHMACSHA2_512" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.Framework.CryptoProviderSHA1">
      <topicdata group="api" />
      <apidata name="CryptoProviderSHA1" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Cryptography.Framework.CryptoProviderDigest" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.BindEncoder(Goedel.Cryptography.CryptoDataEncoder)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.Complete(Goedel.Cryptography.CryptoData)" />
        <element api="F:Goedel.Cryptography.Framework.CryptoProviderDigest.HashAlgorithm" />
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderSHA1.MakeEncoder">
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
          <element api="M:Goedel.Cryptography.CryptoProvider.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
            <apidata name="MakeEncoder" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata abstract="true" virtual="true" />
            <parameters>
              <parameter name="Bulk" optional="true">
                <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
              <parameter name="OutputStream" optional="true">
                <type api="T:System.IO.Stream" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderSHA1.ProcessData">
          <element api="M:Goedel.Cryptography.CryptoProviderDigest.ProcessData(System.Byte[],System.Byte[])">
            <apidata name="ProcessData" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Key" optional="true">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.ProcessData(System.Byte[],System.Int32,System.Int32,System.Byte[])" />
        </element>
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderDigest.Truncate" />
        <element api="M:Goedel.Cryptography.CryptoProviderDigest.Process(System.Byte[],System.Byte[])">
          <apidata name="Process" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="Data">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="Key" optional="true">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProviderDigest.AlgorithmClass">
          <apidata name="AlgorithmClass" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:Goedel.Cryptography.CryptoProvider.AlgorithmClass">
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_AlgorithmClass" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmClass" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderSHA1.Encode">
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.String,Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.UDF">
          <apidata name="UDF" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_UDF" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.KeyPair">
          <apidata name="KeyPair" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_KeyPair" />
          <setter name="set_KeyPair" />
          <returns>
            <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderSHA1.#ctor" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderSHA1.CryptoAlgorithm" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderSHA1.CryptoAlgorithmID" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderSHA1.Register(Goedel.Cryptography.CryptoCatalog)" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderSHA1.Size" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Cryptography.Framework.CryptoProviderSHA1">
      <topicdata name="CryptoProviderSHA1" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderSHA1" />
      <apidata name="CryptoProviderSHA1" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.BindEncoder(Goedel.Cryptography.CryptoDataEncoder)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.Complete(Goedel.Cryptography.CryptoData)" />
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderSHA1.MakeEncoder">
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
          <element api="M:Goedel.Cryptography.CryptoProvider.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
            <apidata name="MakeEncoder" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata abstract="true" virtual="true" />
            <parameters>
              <parameter name="Bulk" optional="true">
                <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
              <parameter name="OutputStream" optional="true">
                <type api="T:System.IO.Stream" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderSHA1.ProcessData">
          <element api="M:Goedel.Cryptography.CryptoProviderDigest.ProcessData(System.Byte[],System.Byte[])">
            <apidata name="ProcessData" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Key" optional="true">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.ProcessData(System.Byte[],System.Int32,System.Int32,System.Byte[])" />
        </element>
        <element api="M:Goedel.Cryptography.CryptoProviderDigest.Process(System.Byte[],System.Byte[])">
          <apidata name="Process" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="Data">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="Key" optional="true">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderSHA1.Encode">
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.String,Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderSHA1.Register(Goedel.Cryptography.CryptoCatalog)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSHA1" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Cryptography.Framework.CryptoProviderSHA1">
      <topicdata name="CryptoProviderSHA1" group="list" subgroup="Properties" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderSHA1" />
      <apidata name="CryptoProviderSHA1" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderDigest.Truncate" />
        <element api="P:Goedel.Cryptography.CryptoProviderDigest.AlgorithmClass">
          <apidata name="AlgorithmClass" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:Goedel.Cryptography.CryptoProvider.AlgorithmClass">
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_AlgorithmClass" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmClass" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.UDF">
          <apidata name="UDF" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_UDF" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.KeyPair">
          <apidata name="KeyPair" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_KeyPair" />
          <setter name="set_KeyPair" />
          <returns>
            <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderSHA1.CryptoAlgorithm" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderSHA1.CryptoAlgorithmID" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderSHA1.Size" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSHA1" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Cryptography.Framework.CryptoProviderSHA1">
      <topicdata name="CryptoProviderSHA1" group="list" subgroup="Fields" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderSHA1" />
      <apidata name="CryptoProviderSHA1" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Cryptography.Framework.CryptoProviderDigest.HashAlgorithm" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSHA1" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderSHA1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSHA1" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderSHA1.CryptoAlgorithm">
      <topicdata group="api" />
      <apidata name="CryptoAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.CryptoProvider.CryptoAlgorithm">
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CryptoAlgorithm" />
      <returns>
        <type api="T:Goedel.Cryptography.CryptoAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSHA1" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderSHA1.CryptoAlgorithmID">
      <topicdata group="api" />
      <apidata name="CryptoAlgorithmID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.CryptoProvider.CryptoAlgorithmID">
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CryptoAlgorithmID" />
      <returns>
        <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSHA1" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderSHA1.Register(Goedel.Cryptography.CryptoCatalog)">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Catalog" optional="true">
          <type api="T:Goedel.Cryptography.CryptoCatalog" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.CryptoAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSHA1" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderSHA1.Size">
      <topicdata group="api" />
      <apidata name="Size" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.CryptoProvider.Size">
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Size" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSHA1" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.Framework.CryptoProviderSHA2_256">
      <topicdata group="api" />
      <apidata name="CryptoProviderSHA2_256" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Cryptography.Framework.CryptoProviderDigest" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.BindEncoder(Goedel.Cryptography.CryptoDataEncoder)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.Complete(Goedel.Cryptography.CryptoData)" />
        <element api="F:Goedel.Cryptography.Framework.CryptoProviderDigest.HashAlgorithm" />
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderSHA2_256.MakeEncoder">
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
          <element api="M:Goedel.Cryptography.CryptoProvider.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
            <apidata name="MakeEncoder" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata abstract="true" virtual="true" />
            <parameters>
              <parameter name="Bulk" optional="true">
                <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
              <parameter name="OutputStream" optional="true">
                <type api="T:System.IO.Stream" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderSHA2_256.ProcessData">
          <element api="M:Goedel.Cryptography.CryptoProviderDigest.ProcessData(System.Byte[],System.Byte[])">
            <apidata name="ProcessData" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Key" optional="true">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.ProcessData(System.Byte[],System.Int32,System.Int32,System.Byte[])" />
        </element>
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderDigest.Truncate" />
        <element api="M:Goedel.Cryptography.CryptoProviderDigest.Process(System.Byte[],System.Byte[])">
          <apidata name="Process" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="Data">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="Key" optional="true">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProviderDigest.AlgorithmClass">
          <apidata name="AlgorithmClass" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:Goedel.Cryptography.CryptoProvider.AlgorithmClass">
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_AlgorithmClass" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmClass" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderSHA2_256.Encode">
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.String,Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.UDF">
          <apidata name="UDF" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_UDF" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.KeyPair">
          <apidata name="KeyPair" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_KeyPair" />
          <setter name="set_KeyPair" />
          <returns>
            <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderSHA2_256.#ctor" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderSHA2_256.CryptoAlgorithm" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderSHA2_256.CryptoAlgorithmID" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderSHA2_256.Register(Goedel.Cryptography.CryptoCatalog)" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderSHA2_256.Size" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Cryptography.Framework.CryptoProviderSHA2_256">
      <topicdata name="CryptoProviderSHA2_256" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderSHA2_256" />
      <apidata name="CryptoProviderSHA2_256" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.BindEncoder(Goedel.Cryptography.CryptoDataEncoder)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.Complete(Goedel.Cryptography.CryptoData)" />
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderSHA2_256.MakeEncoder">
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
          <element api="M:Goedel.Cryptography.CryptoProvider.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
            <apidata name="MakeEncoder" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata abstract="true" virtual="true" />
            <parameters>
              <parameter name="Bulk" optional="true">
                <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
              <parameter name="OutputStream" optional="true">
                <type api="T:System.IO.Stream" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderSHA2_256.ProcessData">
          <element api="M:Goedel.Cryptography.CryptoProviderDigest.ProcessData(System.Byte[],System.Byte[])">
            <apidata name="ProcessData" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Key" optional="true">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.ProcessData(System.Byte[],System.Int32,System.Int32,System.Byte[])" />
        </element>
        <element api="M:Goedel.Cryptography.CryptoProviderDigest.Process(System.Byte[],System.Byte[])">
          <apidata name="Process" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="Data">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="Key" optional="true">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderSHA2_256.Encode">
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.String,Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderSHA2_256.Register(Goedel.Cryptography.CryptoCatalog)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSHA2_256" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Cryptography.Framework.CryptoProviderSHA2_256">
      <topicdata name="CryptoProviderSHA2_256" group="list" subgroup="Properties" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderSHA2_256" />
      <apidata name="CryptoProviderSHA2_256" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderDigest.Truncate" />
        <element api="P:Goedel.Cryptography.CryptoProviderDigest.AlgorithmClass">
          <apidata name="AlgorithmClass" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:Goedel.Cryptography.CryptoProvider.AlgorithmClass">
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_AlgorithmClass" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmClass" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.UDF">
          <apidata name="UDF" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_UDF" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.KeyPair">
          <apidata name="KeyPair" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_KeyPair" />
          <setter name="set_KeyPair" />
          <returns>
            <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderSHA2_256.CryptoAlgorithm" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderSHA2_256.CryptoAlgorithmID" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderSHA2_256.Size" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSHA2_256" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Cryptography.Framework.CryptoProviderSHA2_256">
      <topicdata name="CryptoProviderSHA2_256" group="list" subgroup="Fields" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderSHA2_256" />
      <apidata name="CryptoProviderSHA2_256" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Cryptography.Framework.CryptoProviderDigest.HashAlgorithm" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSHA2_256" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderSHA2_256.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSHA2_256" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderSHA2_256.CryptoAlgorithm">
      <topicdata group="api" />
      <apidata name="CryptoAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.CryptoProvider.CryptoAlgorithm">
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CryptoAlgorithm" />
      <returns>
        <type api="T:Goedel.Cryptography.CryptoAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSHA2_256" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderSHA2_256.CryptoAlgorithmID">
      <topicdata group="api" />
      <apidata name="CryptoAlgorithmID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.CryptoProvider.CryptoAlgorithmID">
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CryptoAlgorithmID" />
      <returns>
        <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSHA2_256" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderSHA2_256.Register(Goedel.Cryptography.CryptoCatalog)">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Catalog" optional="true">
          <type api="T:Goedel.Cryptography.CryptoCatalog" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.CryptoAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSHA2_256" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderSHA2_256.Size">
      <topicdata group="api" />
      <apidata name="Size" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.CryptoProvider.Size">
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Size" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSHA2_256" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.Framework.CryptoProviderSHA2_512">
      <topicdata group="api" />
      <apidata name="CryptoProviderSHA2_512" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Cryptography.Framework.CryptoProviderDigest" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.BindEncoder(Goedel.Cryptography.CryptoDataEncoder)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.Complete(Goedel.Cryptography.CryptoData)" />
        <element api="F:Goedel.Cryptography.Framework.CryptoProviderDigest.HashAlgorithm" />
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderSHA2_512.MakeEncoder">
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
          <element api="M:Goedel.Cryptography.CryptoProvider.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
            <apidata name="MakeEncoder" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata abstract="true" virtual="true" />
            <parameters>
              <parameter name="Bulk" optional="true">
                <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
              <parameter name="OutputStream" optional="true">
                <type api="T:System.IO.Stream" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderSHA2_512.ProcessData">
          <element api="M:Goedel.Cryptography.CryptoProviderDigest.ProcessData(System.Byte[],System.Byte[])">
            <apidata name="ProcessData" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Key" optional="true">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.ProcessData(System.Byte[],System.Int32,System.Int32,System.Byte[])" />
        </element>
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderDigest.Truncate" />
        <element api="M:Goedel.Cryptography.CryptoProviderDigest.Process(System.Byte[],System.Byte[])">
          <apidata name="Process" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="Data">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="Key" optional="true">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProviderDigest.AlgorithmClass">
          <apidata name="AlgorithmClass" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:Goedel.Cryptography.CryptoProvider.AlgorithmClass">
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_AlgorithmClass" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmClass" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderSHA2_512.Encode">
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.String,Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.CryptoAlgorithm">
          <apidata name="CryptoAlgorithm" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_CryptoAlgorithm" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithm" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.UDF">
          <apidata name="UDF" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_UDF" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.KeyPair">
          <apidata name="KeyPair" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_KeyPair" />
          <setter name="set_KeyPair" />
          <returns>
            <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderSHA2_512.#ctor(System.Int32,Goedel.Cryptography.CryptoAlgorithmID)" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderSHA2_512.CryptoAlgorithmID" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderSHA2_512.Register(Goedel.Cryptography.CryptoCatalog)" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderSHA2_512.Size" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Cryptography.Framework.CryptoProviderSHA2_512">
      <topicdata name="CryptoProviderSHA2_512" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderSHA2_512" />
      <apidata name="CryptoProviderSHA2_512" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.BindEncoder(Goedel.Cryptography.CryptoDataEncoder)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.Complete(Goedel.Cryptography.CryptoData)" />
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderSHA2_512.MakeEncoder">
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)" />
          <element api="M:Goedel.Cryptography.CryptoProvider.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
            <apidata name="MakeEncoder" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata abstract="true" virtual="true" />
            <parameters>
              <parameter name="Bulk" optional="true">
                <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
              <parameter name="OutputStream" optional="true">
                <type api="T:System.IO.Stream" ref="true" />
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderSHA2_512.ProcessData">
          <element api="M:Goedel.Cryptography.CryptoProviderDigest.ProcessData(System.Byte[],System.Byte[])">
            <apidata name="ProcessData" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Key" optional="true">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
                <argument>
                  <type api="T:System.Object" ref="true" />
                  <nullValue />
                </argument>
              </parameter>
            </parameters>
            <returns>
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderDigest.ProcessData(System.Byte[],System.Int32,System.Int32,System.Byte[])" />
        </element>
        <element api="M:Goedel.Cryptography.CryptoProviderDigest.Process(System.Byte[],System.Byte[])">
          <apidata name="Process" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="Data">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="Key" optional="true">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderSHA2_512.Encode">
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.String,Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderSHA2_512.Register(Goedel.Cryptography.CryptoCatalog)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSHA2_512" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Cryptography.Framework.CryptoProviderSHA2_512">
      <topicdata name="CryptoProviderSHA2_512" group="list" subgroup="Properties" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderSHA2_512" />
      <apidata name="CryptoProviderSHA2_512" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderDigest.Truncate" />
        <element api="P:Goedel.Cryptography.CryptoProviderDigest.AlgorithmClass">
          <apidata name="AlgorithmClass" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:Goedel.Cryptography.CryptoProvider.AlgorithmClass">
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_AlgorithmClass" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmClass" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderDigest" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.CryptoAlgorithm">
          <apidata name="CryptoAlgorithm" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_CryptoAlgorithm" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithm" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.UDF">
          <apidata name="UDF" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_UDF" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProvider.KeyPair">
          <apidata name="KeyPair" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_KeyPair" />
          <setter name="set_KeyPair" />
          <returns>
            <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderSHA2_512.CryptoAlgorithmID" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderSHA2_512.Size" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSHA2_512" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Cryptography.Framework.CryptoProviderSHA2_512">
      <topicdata name="CryptoProviderSHA2_512" group="list" subgroup="Fields" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderSHA2_512" />
      <apidata name="CryptoProviderSHA2_512" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Cryptography.Framework.CryptoProviderDigest.HashAlgorithm" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSHA2_512" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderSHA2_512.#ctor(System.Int32,Goedel.Cryptography.CryptoAlgorithmID)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="KeySize" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>512</value>
          </argument>
        </parameter>
        <parameter name="ID" optional="true">
          <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
          <argument>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
            <enumValue>
              <field name="SHA_2_512" />
            </enumValue>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSHA2_512" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderSHA2_512.CryptoAlgorithmID">
      <topicdata group="api" />
      <apidata name="CryptoAlgorithmID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.CryptoProvider.CryptoAlgorithmID">
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CryptoAlgorithmID" />
      <returns>
        <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSHA2_512" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderSHA2_512.Register(Goedel.Cryptography.CryptoCatalog)">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Catalog" optional="true">
          <type api="T:Goedel.Cryptography.CryptoCatalog" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.CryptoAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSHA2_512" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderSHA2_512.Size">
      <topicdata group="api" />
      <apidata name="Size" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.CryptoProvider.Size">
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Size" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSHA2_512" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA">
      <topicdata group="api" />
      <apidata name="CryptoProviderSignatureRSA" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Cryptography.CryptoProviderSignature" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProviderAsymmetric" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.Sign">
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.Sign(Goedel.Cryptography.CryptoDataSignature)" />
          <element api="M:Goedel.Cryptography.CryptoProviderSignature.Sign(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Sign" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Digest" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataSignature" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderSignature" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.CryptoProviderSignature.Sign(System.String,Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Sign" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Digest" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataSignature" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderSignature" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.Verify">
          <element api="M:Goedel.Cryptography.CryptoProviderSignature.Verify(System.String,System.Byte[])">
            <apidata name="Verify" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Signature">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Boolean" ref="false" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderSignature" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.CryptoProviderSignature.Verify(System.Byte[],System.Byte[])">
            <apidata name="Verify" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Signature">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Boolean" ref="false" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderSignature" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.Verify(Goedel.Cryptography.CryptoData,System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)" />
        </element>
        <element api="M:Goedel.Cryptography.CryptoProviderSignature.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
          <apidata name="MakeEncoder" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:Goedel.Cryptography.CryptoProvider.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="Bulk" optional="true">
              <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
            <parameter name="Algorithm" optional="true">
              <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
              <argument>
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <enumValue>
                  <field name="Default" />
                </enumValue>
              </argument>
            </parameter>
            <parameter name="OutputStream" optional="true">
              <type api="T:System.IO.Stream" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderSignature" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.CryptoProviderSignature.MakeSigner(Goedel.Cryptography.CryptoAlgorithmID)">
          <apidata name="MakeSigner" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="Digest" optional="true">
              <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
              <argument>
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <enumValue>
                  <field name="Default" />
                </enumValue>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoDataSignature" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderSignature" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.CryptoProviderSignature.Complete(Goedel.Cryptography.CryptoData)">
          <apidata name="Complete" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:Goedel.Cryptography.CryptoProvider.Complete(Goedel.Cryptography.CryptoData)">
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="CryptoData">
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderSignature" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProviderSignature.AlgorithmClass">
          <apidata name="AlgorithmClass" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:Goedel.Cryptography.CryptoProvider.AlgorithmClass">
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_AlgorithmClass" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmClass" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderSignature" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProviderSignature.BulkAlgorithmDefault">
          <apidata name="BulkAlgorithmDefault" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:Goedel.Cryptography.CryptoProviderAsymmetric.BulkAlgorithmDefault">
              <type api="T:Goedel.Cryptography.CryptoProviderAsymmetric" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" set="true" />
          <getter name="get_BulkAlgorithmDefault" />
          <setter name="set_BulkAlgorithmDefault" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderSignature" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.Encode">
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.String,Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.#ctor">
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.#ctor(System.Int32)" />
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.#ctor(Goedel.Cryptography.Framework.RSAKeyPair)" />
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.#ctor(System.Int32,Goedel.Cryptography.CryptoAlgorithmID)" />
        </element>
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.CryptoAlgorithm" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.CryptoAlgorithmID" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.FindLocal(System.String)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.Generate(Goedel.Cryptography.KeySecurity,System.Int32)" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.KeyPair" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.KeySize" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.Register(Goedel.Cryptography.CryptoCatalog)" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.Size" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.UDF" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA">
      <topicdata name="CryptoProviderSignatureRSA" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA" />
      <apidata name="CryptoProviderSignatureRSA" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.Sign">
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.Sign(Goedel.Cryptography.CryptoDataSignature)" />
          <element api="M:Goedel.Cryptography.CryptoProviderSignature.Sign(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Sign" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Digest" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataSignature" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderSignature" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.CryptoProviderSignature.Sign(System.String,Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Sign" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Digest" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataSignature" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderSignature" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.Verify">
          <element api="M:Goedel.Cryptography.CryptoProviderSignature.Verify(System.String,System.Byte[])">
            <apidata name="Verify" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Signature">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Boolean" ref="false" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderSignature" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.CryptoProviderSignature.Verify(System.Byte[],System.Byte[])">
            <apidata name="Verify" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Signature">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Boolean" ref="false" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProviderSignature" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.Verify(Goedel.Cryptography.CryptoData,System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)" />
        </element>
        <element api="M:Goedel.Cryptography.CryptoProviderSignature.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
          <apidata name="MakeEncoder" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:Goedel.Cryptography.CryptoProvider.MakeEncoder(Goedel.Cryptography.CryptoProviderBulk,Goedel.Cryptography.CryptoAlgorithmID,System.IO.Stream)">
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="Bulk" optional="true">
              <type api="T:Goedel.Cryptography.CryptoProviderBulk" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
            <parameter name="Algorithm" optional="true">
              <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
              <argument>
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <enumValue>
                  <field name="Default" />
                </enumValue>
              </argument>
            </parameter>
            <parameter name="OutputStream" optional="true">
              <type api="T:System.IO.Stream" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoDataEncoder" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderSignature" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.CryptoProviderSignature.MakeSigner(Goedel.Cryptography.CryptoAlgorithmID)">
          <apidata name="MakeSigner" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="Digest" optional="true">
              <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
              <argument>
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <enumValue>
                  <field name="Default" />
                </enumValue>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoDataSignature" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderSignature" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.CryptoProviderSignature.Complete(Goedel.Cryptography.CryptoData)">
          <apidata name="Complete" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:Goedel.Cryptography.CryptoProvider.Complete(Goedel.Cryptography.CryptoData)">
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="CryptoData">
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderSignature" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.Encode">
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.CryptoProvider.Encode(System.String,Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Encode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Algorithm" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.FindLocal(System.String)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.Generate(Goedel.Cryptography.KeySecurity,System.Int32)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.Register(Goedel.Cryptography.CryptoCatalog)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA">
      <topicdata name="CryptoProviderSignatureRSA" group="list" subgroup="Properties" typeTopicId="T:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA" />
      <apidata name="CryptoProviderSignatureRSA" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Goedel.Cryptography.CryptoProviderSignature.AlgorithmClass">
          <apidata name="AlgorithmClass" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:Goedel.Cryptography.CryptoProvider.AlgorithmClass">
              <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_AlgorithmClass" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmClass" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderSignature" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoProviderSignature.BulkAlgorithmDefault">
          <apidata name="BulkAlgorithmDefault" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:Goedel.Cryptography.CryptoProviderAsymmetric.BulkAlgorithmDefault">
              <type api="T:Goedel.Cryptography.CryptoProviderAsymmetric" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" set="true" />
          <getter name="get_BulkAlgorithmDefault" />
          <setter name="set_BulkAlgorithmDefault" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderSignature" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.CryptoAlgorithm" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.CryptoAlgorithmID" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.KeyPair" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.KeySize" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.Size" />
        <element api="P:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.UDF" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.Sign">
      <topicdata name="Sign" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Sign" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.Sign(Goedel.Cryptography.CryptoDataSignature)" />
        <element api="M:Goedel.Cryptography.CryptoProviderSignature.Sign(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
          <apidata name="Sign" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="Data">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="Digest" optional="true">
              <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
              <argument>
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <enumValue>
                  <field name="Default" />
                </enumValue>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoDataSignature" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderSignature" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.CryptoProviderSignature.Sign(System.String,Goedel.Cryptography.CryptoAlgorithmID)">
          <apidata name="Sign" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="Text">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="Digest" optional="true">
              <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
              <argument>
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <enumValue>
                  <field name="Default" />
                </enumValue>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoDataSignature" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderSignature" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.Verify">
      <topicdata name="Verify" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Verify" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Cryptography.CryptoProviderSignature.Verify(System.String,System.Byte[])">
          <apidata name="Verify" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="Text">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="Signature">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderSignature" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.CryptoProviderSignature.Verify(System.Byte[],System.Byte[])">
          <apidata name="Verify" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="Data">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="Signature">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoProviderSignature" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.Verify(Goedel.Cryptography.CryptoData,System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.#ctor(System.Int32)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.#ctor(Goedel.Cryptography.Framework.RSAKeyPair)" />
        <element api="M:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.#ctor(System.Int32,Goedel.Cryptography.CryptoAlgorithmID)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.#ctor(Goedel.Cryptography.Framework.RSAKeyPair)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.#ctor" />
      <parameters>
        <parameter name="RSAKeyPair">
          <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.#ctor" />
      <parameters>
        <parameter name="KeySize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.#ctor(System.Int32,Goedel.Cryptography.CryptoAlgorithmID)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.#ctor" />
      <parameters>
        <parameter name="KeySize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="DigestAlgorithm" optional="true">
          <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
          <argument>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
            <enumValue>
              <field name="Default" />
            </enumValue>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.CryptoAlgorithm">
      <topicdata group="api" />
      <apidata name="CryptoAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.CryptoProvider.CryptoAlgorithm">
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CryptoAlgorithm" />
      <returns>
        <type api="T:Goedel.Cryptography.CryptoAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.CryptoAlgorithmID">
      <topicdata group="api" />
      <apidata name="CryptoAlgorithmID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.CryptoProvider.CryptoAlgorithmID">
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CryptoAlgorithmID" />
      <returns>
        <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.FindLocal(System.String)">
      <topicdata group="api" />
      <apidata name="FindLocal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Cryptography.CryptoProviderAsymmetric.FindLocal(System.String)">
          <type api="T:Goedel.Cryptography.CryptoProviderAsymmetric" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="UDF">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.Generate(Goedel.Cryptography.KeySecurity,System.Int32)">
      <topicdata group="api" />
      <apidata name="Generate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Cryptography.CryptoProviderAsymmetric.Generate(Goedel.Cryptography.KeySecurity,System.Int32)">
          <type api="T:Goedel.Cryptography.CryptoProviderAsymmetric" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="KeySecurity">
          <type api="T:Goedel.Cryptography.KeySecurity" ref="false" />
        </parameter>
        <parameter name="Size" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.KeyPair">
      <topicdata group="api" />
      <apidata name="KeyPair" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.CryptoProvider.KeyPair">
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_KeyPair" />
      <setter name="set_KeyPair" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.KeySize">
      <topicdata group="api" />
      <apidata name="KeySize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_KeySize" />
      <setter name="set_KeySize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.Register(Goedel.Cryptography.CryptoCatalog)">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Catalog" optional="true">
          <type api="T:Goedel.Cryptography.CryptoCatalog" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.CryptoAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.Sign(Goedel.Cryptography.CryptoDataSignature)">
      <topicdata group="api" />
      <apidata name="Sign" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.Sign" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Cryptography.CryptoProviderSignature.Sign(Goedel.Cryptography.CryptoDataSignature)">
          <type api="T:Goedel.Cryptography.CryptoProviderSignature" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Data">
          <type api="T:Goedel.Cryptography.CryptoDataSignature" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.Size">
      <topicdata group="api" />
      <apidata name="Size" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.CryptoProvider.Size">
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Size" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.UDF">
      <topicdata group="api" />
      <apidata name="UDF" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.CryptoProvider.UDF">
          <type api="T:Goedel.Cryptography.CryptoProvider" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_UDF" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.Verify(Goedel.Cryptography.CryptoData,System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
      <topicdata group="api" />
      <apidata name="Verify" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA.Verify" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Cryptography.CryptoProviderSignature.Verify(Goedel.Cryptography.CryptoData,System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
          <type api="T:Goedel.Cryptography.CryptoProviderSignature" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Bulk">
          <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
        </parameter>
        <parameter name="Signature">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="AlgorithmID" optional="true">
          <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
          <argument>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
            <enumValue>
              <field name="Default" />
            </enumValue>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.CryptoProviderSignatureRSA" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.Framework.ExtensionMethods">
      <topicdata group="api" />
      <apidata name="ExtensionMethods" group="type" subgroup="class" />
      <sourceContext file="Trojan3/Goedel.Trojan.GTK/ExtensionMethods.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Goedel.Cryptography.Framework.ExtensionMethods.AlgorithmIdentifier(System.Security.Cryptography.Oid)" />
        <element api="M:Goedel.Cryptography.Framework.ExtensionMethods.Certificate(System.Byte[])" />
        <element api="M:Goedel.Cryptography.Framework.ExtensionMethods.Extension(System.Security.Cryptography.X509Certificates.X509Extension)" />
        <element api="M:Goedel.Cryptography.Framework.ExtensionMethods.KeyPair(System.Security.Cryptography.AsymmetricAlgorithm)" />
        <element api="M:Goedel.Cryptography.Framework.ExtensionMethods.Names(System.Security.Cryptography.X509Certificates.X500DistinguishedName)" />
        <element api="Overload:Goedel.Cryptography.Framework.ExtensionMethods.RSAParameters">
          <element api="M:Goedel.Cryptography.Framework.ExtensionMethods.RSAParameters(Goedel.Cryptography.PKIX.PKIXPrivateKeyRSA)" />
          <element api="M:Goedel.Cryptography.Framework.ExtensionMethods.RSAParameters(Goedel.Cryptography.PKIX.PKIXPublicKeyRSA)" />
        </element>
        <element api="M:Goedel.Cryptography.Framework.ExtensionMethods.RSAPrivateKey(System.Security.Cryptography.RSAParameters)" />
        <element api="M:Goedel.Cryptography.Framework.ExtensionMethods.RSAPublicKey(System.Security.Cryptography.RSAParameters)" />
        <element api="M:Goedel.Cryptography.Framework.ExtensionMethods.TBSCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Goedel.Cryptography.Framework.ExtensionMethods">
      <topicdata name="ExtensionMethods" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.Framework.ExtensionMethods" />
      <apidata name="ExtensionMethods" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Goedel.Cryptography.Framework.ExtensionMethods.AlgorithmIdentifier(System.Security.Cryptography.Oid)" />
        <element api="M:Goedel.Cryptography.Framework.ExtensionMethods.Certificate(System.Byte[])" />
        <element api="M:Goedel.Cryptography.Framework.ExtensionMethods.Extension(System.Security.Cryptography.X509Certificates.X509Extension)" />
        <element api="M:Goedel.Cryptography.Framework.ExtensionMethods.KeyPair(System.Security.Cryptography.AsymmetricAlgorithm)" />
        <element api="M:Goedel.Cryptography.Framework.ExtensionMethods.Names(System.Security.Cryptography.X509Certificates.X500DistinguishedName)" />
        <element api="Overload:Goedel.Cryptography.Framework.ExtensionMethods.RSAParameters">
          <element api="M:Goedel.Cryptography.Framework.ExtensionMethods.RSAParameters(Goedel.Cryptography.PKIX.PKIXPrivateKeyRSA)" />
          <element api="M:Goedel.Cryptography.Framework.ExtensionMethods.RSAParameters(Goedel.Cryptography.PKIX.PKIXPublicKeyRSA)" />
        </element>
        <element api="M:Goedel.Cryptography.Framework.ExtensionMethods.RSAPrivateKey(System.Security.Cryptography.RSAParameters)" />
        <element api="M:Goedel.Cryptography.Framework.ExtensionMethods.RSAPublicKey(System.Security.Cryptography.RSAParameters)" />
        <element api="M:Goedel.Cryptography.Framework.ExtensionMethods.TBSCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.ExtensionMethods" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.Framework.ExtensionMethods.RSAParameters">
      <topicdata name="RSAParameters" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="RSAParameters" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Cryptography.Framework.ExtensionMethods.RSAParameters(Goedel.Cryptography.PKIX.PKIXPrivateKeyRSA)" />
        <element api="M:Goedel.Cryptography.Framework.ExtensionMethods.RSAParameters(Goedel.Cryptography.PKIX.PKIXPublicKeyRSA)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.ExtensionMethods" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.ExtensionMethods.AlgorithmIdentifier(System.Security.Cryptography.Oid)">
      <topicdata group="api" />
      <apidata name="AlgorithmIdentifier" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Trojan3/Goedel.Trojan.GTK/ExtensionMethods.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Oid">
          <type api="T:System.Security.Cryptography.Oid" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.PKIX.AlgorithmIdentifier" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.ExtensionMethods" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.Cryptography.Framework.ExtensionMethods.Certificate(System.Byte[])">
      <topicdata group="api" />
      <apidata name="Certificate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Trojan3/Goedel.Trojan.GTK/ExtensionMethods.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.PKIX.Certificate" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.ExtensionMethods" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.Cryptography.Framework.ExtensionMethods.Extension(System.Security.Cryptography.X509Certificates.X509Extension)">
      <topicdata group="api" />
      <apidata name="Extension" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Trojan3/Goedel.Trojan.GTK/ExtensionMethods.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="X509Extension">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Extension" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.PKIX.Extension" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.ExtensionMethods" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.Cryptography.Framework.ExtensionMethods.KeyPair(System.Security.Cryptography.AsymmetricAlgorithm)">
      <topicdata group="api" />
      <apidata name="KeyPair" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Trojan3/Goedel.Trojan.GTK/ExtensionMethods.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="AsymmetricAlgorithm">
          <type api="T:System.Security.Cryptography.AsymmetricAlgorithm" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.ExtensionMethods" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.Cryptography.Framework.ExtensionMethods.Names(System.Security.Cryptography.X509Certificates.X500DistinguishedName)">
      <topicdata group="api" />
      <apidata name="Names" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Trojan3/Goedel.Trojan.GTK/ExtensionMethods.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="DN">
          <type api="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Goedel.Cryptography.PKIX.Name" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.ExtensionMethods" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.Cryptography.Framework.ExtensionMethods.RSAParameters(Goedel.Cryptography.PKIX.PKIXPrivateKeyRSA)">
      <topicdata group="api" />
      <apidata name="RSAParameters" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Goedel.Cryptography.Framework.ExtensionMethods.RSAParameters" />
      <sourceContext file="Trojan3/Goedel.Trojan.GTK/ExtensionMethods.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="RSAPrivateKey">
          <type api="T:Goedel.Cryptography.PKIX.PKIXPrivateKeyRSA" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.RSAParameters" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.ExtensionMethods" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.Cryptography.Framework.ExtensionMethods.RSAParameters(Goedel.Cryptography.PKIX.PKIXPublicKeyRSA)">
      <topicdata group="api" />
      <apidata name="RSAParameters" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Goedel.Cryptography.Framework.ExtensionMethods.RSAParameters" />
      <sourceContext file="Trojan3/Goedel.Trojan.GTK/ExtensionMethods.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="RSAPublicKey">
          <type api="T:Goedel.Cryptography.PKIX.PKIXPublicKeyRSA" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.RSAParameters" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.ExtensionMethods" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.Cryptography.Framework.ExtensionMethods.RSAPrivateKey(System.Security.Cryptography.RSAParameters)">
      <topicdata group="api" />
      <apidata name="RSAPrivateKey" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Trojan3/Goedel.Trojan.GTK/ExtensionMethods.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="RSAParameters">
          <type api="T:System.Security.Cryptography.RSAParameters" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.PKIX.PKIXPrivateKeyRSA" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.ExtensionMethods" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.Cryptography.Framework.ExtensionMethods.RSAPublicKey(System.Security.Cryptography.RSAParameters)">
      <topicdata group="api" />
      <apidata name="RSAPublicKey" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Trojan3/Goedel.Trojan.GTK/ExtensionMethods.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="RSAParameters">
          <type api="T:System.Security.Cryptography.RSAParameters" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.PKIX.PKIXPublicKeyRSA" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.ExtensionMethods" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.Cryptography.Framework.ExtensionMethods.TBSCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <topicdata group="api" />
      <apidata name="TBSCertificate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Trojan3/Goedel.Trojan.GTK/ExtensionMethods.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="X509Cert">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.PKIX.TBSCertificate" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.ExtensionMethods" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Goedel.Cryptography.Framework.Factory">
      <topicdata group="api" />
      <apidata name="Factory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.Factory.#ctor" />
        <element api="M:Goedel.Cryptography.Framework.Factory.RSAPublicKey(System.Security.Cryptography.RSAParameters)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Cryptography.Framework.Factory">
      <topicdata name="Factory" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.Framework.Factory" />
      <apidata name="Factory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.Factory.RSAPublicKey(System.Security.Cryptography.RSAParameters)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.Factory" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.Factory.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.Factory" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.Factory.RSAPublicKey(System.Security.Cryptography.RSAParameters)">
      <topicdata group="api" />
      <apidata name="RSAPublicKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="RSAParameters">
          <type api="T:System.Security.Cryptography.RSAParameters" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.PKIX.PKIXPublicKeyRSA" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.Factory" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.Framework.RSAKeyPair">
      <topicdata group="api" />
      <apidata name="RSAKeyPair" group="type" subgroup="class" />
      <sourceContext file="Libraries/Goedel.Cryptography.Framework/RSAKeyPair.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Cryptography.RSAKeyPairBase" ref="true" />
          <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
          <type api="T:Goedel.Cryptography.CryptoKey" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Goedel.Cryptography.KeyPair.EncryptKey(Goedel.Cryptography.CryptoData,Goedel.Cryptography.CryptoAlgorithmID)">
          <apidata name="EncryptKey" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="Bulk">
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </parameter>
            <parameter name="AlgorithmID" optional="true">
              <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
              <argument>
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <enumValue>
                  <field name="Default" />
                </enumValue>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoDataExchange" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.RSAKeyPair.Sign">
          <element api="M:Goedel.Cryptography.KeyPair.Sign(Goedel.Cryptography.CryptoData,Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Sign" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Bulk">
                <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
              </parameter>
              <parameter name="AlgorithmID" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.KeyPair.Sign(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Sign" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="AlgorithmID" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataSignature" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:Goedel.Cryptography.KeyPair.Decrypt(System.Byte[],Goedel.Cryptography.KeyPair,Goedel.Cryptography.CryptoAlgorithmID,Goedel.Cryptography.KeyAgreementResult)">
          <apidata name="Decrypt" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="EncryptedKey">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="Ephemeral" optional="true">
              <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
            <parameter name="AlgorithmID" optional="true">
              <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
              <argument>
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <enumValue>
                  <field name="Default" />
                </enumValue>
              </argument>
            </parameter>
            <parameter name="Partial" optional="true">
              <type api="T:Goedel.Cryptography.KeyAgreementResult" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.KeyPair.Verify(Goedel.Cryptography.CryptoData,System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
          <apidata name="Verify" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="Bulk">
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </parameter>
            <parameter name="Signature">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="AlgorithmID" optional="true">
              <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
              <argument>
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <enumValue>
                  <field name="Default" />
                </enumValue>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.KeyPair.Agreement(Goedel.Cryptography.KeyPair)">
          <apidata name="Agreement" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="KeyPair">
              <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.KeyAgreementResult" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.KeyPair.UDF">
          <apidata name="UDF" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:Goedel.Cryptography.CryptoKey.UDF">
              <type api="T:Goedel.Cryptography.CryptoKey" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_UDF" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoKey.CryptoAlgorithmID">
          <apidata name="CryptoAlgorithmID" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_CryptoAlgorithmID" />
          <setter name="set_CryptoAlgorithmID" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoKey" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.Extension.ToPuTTY(Goedel.Cryptography.Framework.RSAKeyPair)" source="extension">
          <apidata name="ToPuTTY" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography.KeyFile" />
            <type api="T:Goedel.Cryptography.KeyFile.Extension" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.Extension.ToOpenSSH(Goedel.Cryptography.Framework.RSAKeyPair,System.String)" source="extension">
          <apidata name="ToOpenSSH" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="Tag" optional="true">
              <type api="T:System.String" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography.KeyFile" />
            <type api="T:Goedel.Cryptography.KeyFile.Extension" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.Extension.ToPEMPublic(Goedel.Cryptography.Framework.RSAKeyPair)" source="extension">
          <apidata name="ToPEMPublic" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography.KeyFile" />
            <type api="T:Goedel.Cryptography.KeyFile.Extension" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.RSAKeyPair.#ctor">
          <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.#ctor(Goedel.Cryptography.PKIX.PKIXPrivateKeyRSA)" />
          <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.#ctor(Goedel.Cryptography.PKIX.PKIXPublicKeyRSA)" />
          <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.#ctor(System.Int32)" />
          <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.#ctor(System.Security.Cryptography.RSACryptoServiceProvider)" />
          <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.#ctor(System.Security.Cryptography.RSAParameters)" />
          <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.#ctor(System.String)" />
          <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.#ctor(Goedel.Cryptography.KeySecurity,System.Int32)" />
          <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.#ctor(System.Int32,System.Boolean)" />
        </element>
        <element api="P:Goedel.Cryptography.Framework.RSAKeyPair.AsymmetricAlgorithm" />
        <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.EraseFromDevice" />
        <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.ExchangeProvider(Goedel.Cryptography.CryptoAlgorithmID)" />
        <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.FindLocal(System.String)" />
        <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.GetPrivate" />
        <element api="P:Goedel.Cryptography.Framework.RSAKeyPair.KeyInfoData" />
        <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.KeyPairPrivateFactory(Goedel.Cryptography.PKIX.PKIXPrivateKeyRSA)" />
        <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.KeyPairPublicFactory(Goedel.Cryptography.PKIX.PKIXPublicKeyRSA)" />
        <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.Persist(Goedel.Cryptography.KeySecurity)" />
        <element api="P:Goedel.Cryptography.Framework.RSAKeyPair.PKIXPrivateKey" />
        <element api="P:Goedel.Cryptography.Framework.RSAKeyPair.PKIXPrivateKeyRSA" />
        <element api="P:Goedel.Cryptography.Framework.RSAKeyPair.PKIXPublicKey" />
        <element api="P:Goedel.Cryptography.Framework.RSAKeyPair.PKIXPublicKeyRSA" />
        <element api="P:Goedel.Cryptography.Framework.RSAKeyPair.PrivateKeyInfoData" />
        <element api="P:Goedel.Cryptography.Framework.RSAKeyPair.Provider" />
        <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.SignatureAlgorithmID(Goedel.Cryptography.CryptoAlgorithmID)" />
        <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.SignatureProvider(Goedel.Cryptography.CryptoAlgorithmID)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Cryptography.Framework.RSAKeyPair">
      <topicdata name="RSAKeyPair" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.Framework.RSAKeyPair" />
      <apidata name="RSAKeyPair" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Goedel.Cryptography.KeyPair.EncryptKey(Goedel.Cryptography.CryptoData,Goedel.Cryptography.CryptoAlgorithmID)">
          <apidata name="EncryptKey" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="Bulk">
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </parameter>
            <parameter name="AlgorithmID" optional="true">
              <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
              <argument>
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <enumValue>
                  <field name="Default" />
                </enumValue>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.CryptoDataExchange" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.Framework.RSAKeyPair.Sign">
          <element api="M:Goedel.Cryptography.KeyPair.Sign(Goedel.Cryptography.CryptoData,Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Sign" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Bulk">
                <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
              </parameter>
              <parameter name="AlgorithmID" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.KeyPair.Sign(System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
            <apidata name="Sign" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Data">
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
              </parameter>
              <parameter name="AlgorithmID" optional="true">
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <argument>
                  <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                  <enumValue>
                    <field name="Default" />
                  </enumValue>
                </argument>
              </parameter>
            </parameters>
            <returns>
              <type api="T:Goedel.Cryptography.CryptoDataSignature" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Cryptography" />
              <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:Goedel.Cryptography.KeyPair.Decrypt(System.Byte[],Goedel.Cryptography.KeyPair,Goedel.Cryptography.CryptoAlgorithmID,Goedel.Cryptography.KeyAgreementResult)">
          <apidata name="Decrypt" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="EncryptedKey">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="Ephemeral" optional="true">
              <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
            <parameter name="AlgorithmID" optional="true">
              <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
              <argument>
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <enumValue>
                  <field name="Default" />
                </enumValue>
              </argument>
            </parameter>
            <parameter name="Partial" optional="true">
              <type api="T:Goedel.Cryptography.KeyAgreementResult" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.KeyPair.Verify(Goedel.Cryptography.CryptoData,System.Byte[],Goedel.Cryptography.CryptoAlgorithmID)">
          <apidata name="Verify" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="Bulk">
              <type api="T:Goedel.Cryptography.CryptoData" ref="true" />
            </parameter>
            <parameter name="Signature">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="AlgorithmID" optional="true">
              <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
              <argument>
                <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
                <enumValue>
                  <field name="Default" />
                </enumValue>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.KeyPair.Agreement(Goedel.Cryptography.KeyPair)">
          <apidata name="Agreement" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="KeyPair">
              <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Goedel.Cryptography.KeyAgreementResult" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.Extension.ToPuTTY(Goedel.Cryptography.Framework.RSAKeyPair)" source="extension">
          <apidata name="ToPuTTY" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography.KeyFile" />
            <type api="T:Goedel.Cryptography.KeyFile.Extension" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.Extension.ToOpenSSH(Goedel.Cryptography.Framework.RSAKeyPair,System.String)" source="extension">
          <apidata name="ToOpenSSH" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="Tag" optional="true">
              <type api="T:System.String" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography.KeyFile" />
            <type api="T:Goedel.Cryptography.KeyFile.Extension" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.Extension.ToPEMPublic(Goedel.Cryptography.Framework.RSAKeyPair)" source="extension">
          <apidata name="ToPEMPublic" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography.KeyFile" />
            <type api="T:Goedel.Cryptography.KeyFile.Extension" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.EraseFromDevice" />
        <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.ExchangeProvider(Goedel.Cryptography.CryptoAlgorithmID)" />
        <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.FindLocal(System.String)" />
        <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.GetPrivate" />
        <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.KeyPairPrivateFactory(Goedel.Cryptography.PKIX.PKIXPrivateKeyRSA)" />
        <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.KeyPairPublicFactory(Goedel.Cryptography.PKIX.PKIXPublicKeyRSA)" />
        <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.Persist(Goedel.Cryptography.KeySecurity)" />
        <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.SignatureAlgorithmID(Goedel.Cryptography.CryptoAlgorithmID)" />
        <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.SignatureProvider(Goedel.Cryptography.CryptoAlgorithmID)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Cryptography.Framework.RSAKeyPair">
      <topicdata name="RSAKeyPair" group="list" subgroup="Properties" typeTopicId="T:Goedel.Cryptography.Framework.RSAKeyPair" />
      <apidata name="RSAKeyPair" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Goedel.Cryptography.KeyPair.UDF">
          <apidata name="UDF" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:Goedel.Cryptography.CryptoKey.UDF">
              <type api="T:Goedel.Cryptography.CryptoKey" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_UDF" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.CryptoKey.CryptoAlgorithmID">
          <apidata name="CryptoAlgorithmID" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_CryptoAlgorithmID" />
          <setter name="set_CryptoAlgorithmID" />
          <returns>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Cryptography" module="Goedel.Cryptography" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Cryptography" />
            <type api="T:Goedel.Cryptography.CryptoKey" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Cryptography.Framework.RSAKeyPair.AsymmetricAlgorithm" />
        <element api="P:Goedel.Cryptography.Framework.RSAKeyPair.KeyInfoData" />
        <element api="P:Goedel.Cryptography.Framework.RSAKeyPair.PKIXPrivateKey" />
        <element api="P:Goedel.Cryptography.Framework.RSAKeyPair.PKIXPrivateKeyRSA" />
        <element api="P:Goedel.Cryptography.Framework.RSAKeyPair.PKIXPublicKey" />
        <element api="P:Goedel.Cryptography.Framework.RSAKeyPair.PKIXPublicKeyRSA" />
        <element api="P:Goedel.Cryptography.Framework.RSAKeyPair.PrivateKeyInfoData" />
        <element api="P:Goedel.Cryptography.Framework.RSAKeyPair.Provider" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.Framework.RSAKeyPair.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.#ctor(Goedel.Cryptography.PKIX.PKIXPrivateKeyRSA)" />
        <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.#ctor(Goedel.Cryptography.PKIX.PKIXPublicKeyRSA)" />
        <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.#ctor(System.Int32)" />
        <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.#ctor(System.Security.Cryptography.RSACryptoServiceProvider)" />
        <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.#ctor(System.Security.Cryptography.RSAParameters)" />
        <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.#ctor(System.String)" />
        <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.#ctor(Goedel.Cryptography.KeySecurity,System.Int32)" />
        <element api="M:Goedel.Cryptography.Framework.RSAKeyPair.#ctor(System.Int32,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.RSAKeyPair.#ctor(Goedel.Cryptography.KeySecurity,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.Framework.RSAKeyPair.#ctor" />
      <sourceContext file="Libraries/Goedel.Cryptography.Framework/RSAKeyPair.cs" />
      <parameters>
        <parameter name="KeySecurity">
          <type api="T:Goedel.Cryptography.KeySecurity" ref="false" />
        </parameter>
        <parameter name="KeySize" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>2048</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.RSAKeyPair.#ctor(Goedel.Cryptography.PKIX.PKIXPrivateKeyRSA)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.Framework.RSAKeyPair.#ctor" />
      <sourceContext file="Libraries/Goedel.Cryptography.Framework/RSAKeyPair.cs" />
      <parameters>
        <parameter name="PKIXParameters">
          <type api="T:Goedel.Cryptography.PKIX.PKIXPrivateKeyRSA" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.RSAKeyPair.#ctor(Goedel.Cryptography.PKIX.PKIXPublicKeyRSA)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.Framework.RSAKeyPair.#ctor" />
      <sourceContext file="Libraries/Goedel.Cryptography.Framework/RSAKeyPair.cs" />
      <parameters>
        <parameter name="PKIXParameters">
          <type api="T:Goedel.Cryptography.PKIX.PKIXPublicKeyRSA" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.RSAKeyPair.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.Framework.RSAKeyPair.#ctor" />
      <sourceContext file="Libraries/Goedel.Cryptography.Framework/RSAKeyPair.cs" />
      <parameters>
        <parameter name="KeySize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.RSAKeyPair.#ctor(System.Int32,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.Framework.RSAKeyPair.#ctor" />
      <sourceContext file="Libraries/Goedel.Cryptography.Framework/RSAKeyPair.cs" />
      <parameters>
        <parameter name="KeySize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="Exportable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.RSAKeyPair.#ctor(System.Security.Cryptography.RSACryptoServiceProvider)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.Framework.RSAKeyPair.#ctor" />
      <sourceContext file="Libraries/Goedel.Cryptography.Framework/RSAKeyPair.cs" />
      <parameters>
        <parameter name="RSACryptoServiceProvider">
          <type api="T:System.Security.Cryptography.RSACryptoServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.RSAKeyPair.#ctor(System.Security.Cryptography.RSAParameters)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.Framework.RSAKeyPair.#ctor" />
      <sourceContext file="Libraries/Goedel.Cryptography.Framework/RSAKeyPair.cs" />
      <parameters>
        <parameter name="RSAParameters">
          <type api="T:System.Security.Cryptography.RSAParameters" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.RSAKeyPair.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.Framework.RSAKeyPair.#ctor" />
      <sourceContext file="Libraries/Goedel.Cryptography.Framework/RSAKeyPair.cs" />
      <parameters>
        <parameter name="UDF">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.RSAKeyPair.AsymmetricAlgorithm">
      <topicdata group="api" />
      <apidata name="AsymmetricAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Cryptography.Framework/RSAKeyPair.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AsymmetricAlgorithm" />
      <returns>
        <type api="T:System.Security.Cryptography.AsymmetricAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.RSAKeyPair.EraseFromDevice">
      <topicdata group="api" />
      <apidata name="EraseFromDevice" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Cryptography.Framework/RSAKeyPair.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Cryptography.KeyPair.EraseFromDevice">
          <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.RSAKeyPair.ExchangeProvider(Goedel.Cryptography.CryptoAlgorithmID)">
      <topicdata group="api" />
      <apidata name="ExchangeProvider" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Cryptography.Framework/RSAKeyPair.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Cryptography.KeyPair.ExchangeProvider(Goedel.Cryptography.CryptoAlgorithmID)">
          <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ID" optional="true">
          <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
          <argument>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
            <enumValue>
              <field name="Default" />
            </enumValue>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.CryptoProviderExchange" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.RSAKeyPair.FindLocal(System.String)">
      <topicdata group="api" />
      <apidata name="FindLocal" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Cryptography.Framework/RSAKeyPair.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="UDF">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.RSAKeyPair.GetPrivate">
      <topicdata group="api" />
      <apidata name="GetPrivate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Cryptography.Framework/RSAKeyPair.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Cryptography.KeyPair.GetPrivate">
          <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.RSAKeyPair.KeyInfoData">
      <topicdata group="api" />
      <apidata name="KeyInfoData" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Cryptography.Framework/RSAKeyPair.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.KeyPair.KeyInfoData">
          <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_KeyInfoData" />
      <returns>
        <type api="T:Goedel.Cryptography.PKIX.SubjectPublicKeyInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.RSAKeyPair.KeyPairPrivateFactory(Goedel.Cryptography.PKIX.PKIXPrivateKeyRSA)">
      <topicdata group="api" />
      <apidata name="KeyPairPrivateFactory" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Cryptography.Framework/RSAKeyPair.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="PKIXParameters">
          <type api="T:Goedel.Cryptography.PKIX.PKIXPrivateKeyRSA" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.RSAKeyPair.KeyPairPublicFactory(Goedel.Cryptography.PKIX.PKIXPublicKeyRSA)">
      <topicdata group="api" />
      <apidata name="KeyPairPublicFactory" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Cryptography.Framework/RSAKeyPair.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="PKIXParameters">
          <type api="T:Goedel.Cryptography.PKIX.PKIXPublicKeyRSA" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.RSAKeyPair.Persist(Goedel.Cryptography.KeySecurity)">
      <topicdata group="api" />
      <apidata name="Persist" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Cryptography.Framework/RSAKeyPair.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="KeySecurity">
          <type api="T:Goedel.Cryptography.KeySecurity" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.RSAKeyPair.PKIXPrivateKey">
      <topicdata group="api" />
      <apidata name="PKIXPrivateKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Cryptography.Framework/RSAKeyPair.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.KeyPair.PKIXPrivateKey">
          <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_PKIXPrivateKey" />
      <returns>
        <type api="T:Goedel.Cryptography.PKIX.IPKIXPrivateKey" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.RSAKeyPair.PKIXPrivateKeyRSA">
      <topicdata group="api" />
      <apidata name="PKIXPrivateKeyRSA" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Cryptography.Framework/RSAKeyPair.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.RSAKeyPairBase.PKIXPrivateKeyRSA">
          <type api="T:Goedel.Cryptography.RSAKeyPairBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_PKIXPrivateKeyRSA" />
      <returns>
        <type api="T:Goedel.Cryptography.PKIX.PKIXPrivateKeyRSA" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.RSAKeyPair.PKIXPublicKey">
      <topicdata group="api" />
      <apidata name="PKIXPublicKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Cryptography.Framework/RSAKeyPair.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.KeyPair.PKIXPublicKey">
          <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_PKIXPublicKey" />
      <returns>
        <type api="T:Goedel.Cryptography.PKIX.IPKIXPublicKey" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.RSAKeyPair.PKIXPublicKeyRSA">
      <topicdata group="api" />
      <apidata name="PKIXPublicKeyRSA" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Cryptography.Framework/RSAKeyPair.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.RSAKeyPairBase.PKIXPublicKeyRSA">
          <type api="T:Goedel.Cryptography.RSAKeyPairBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_PKIXPublicKeyRSA" />
      <returns>
        <type api="T:Goedel.Cryptography.PKIX.PKIXPublicKeyRSA" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.RSAKeyPair.PrivateKeyInfoData">
      <topicdata group="api" />
      <apidata name="PrivateKeyInfoData" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Cryptography.Framework/RSAKeyPair.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.KeyPair.PrivateKeyInfoData">
          <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_PrivateKeyInfoData" />
      <returns>
        <type api="T:Goedel.Cryptography.PKIX.SubjectPublicKeyInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.Framework.RSAKeyPair.Provider">
      <topicdata group="api" />
      <apidata name="Provider" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Cryptography.Framework/RSAKeyPair.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Provider" />
      <returns>
        <type api="T:System.Security.Cryptography.RSACryptoServiceProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.RSAKeyPair.SignatureAlgorithmID(Goedel.Cryptography.CryptoAlgorithmID)">
      <topicdata group="api" />
      <apidata name="SignatureAlgorithmID" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Cryptography.Framework/RSAKeyPair.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Cryptography.KeyPair.SignatureAlgorithmID(Goedel.Cryptography.CryptoAlgorithmID)">
          <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Base">
          <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.Framework.RSAKeyPair.SignatureProvider(Goedel.Cryptography.CryptoAlgorithmID)">
      <topicdata group="api" />
      <apidata name="SignatureProvider" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Cryptography.Framework/RSAKeyPair.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Cryptography.KeyPair.SignatureProvider(Goedel.Cryptography.CryptoAlgorithmID)">
          <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ID" optional="true">
          <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
          <argument>
            <type api="T:Goedel.Cryptography.CryptoAlgorithmID" ref="false" />
            <enumValue>
              <field name="Default" />
            </enumValue>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.CryptoProviderSignature" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.Framework" module="Goedel.Cryptography.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40473" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.Framework" />
        <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
      </containers>
    </api>
    <api id="N:Goedel.Cryptography.KeyFile">
      <topicdata group="api" />
      <apidata name="Goedel.Cryptography.KeyFile" group="namespace" />
      <elements>
        <element api="T:Goedel.Cryptography.KeyFile.KeyFileException" />
        <element api="T:Goedel.Cryptography.KeyFile.NoProviderSpecified" />
        <element api="T:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable" />
        <element api="T:Goedel.Cryptography.KeyFile.UnexpectedEnd" />
        <element api="T:Goedel.Cryptography.KeyFile.ParseError" />
        <element api="T:Goedel.Cryptography.KeyFile.KeyFileLex" />
        <element api="T:Goedel.Cryptography.KeyFile.KeyFileLex.State" />
        <element api="T:Goedel.Cryptography.KeyFile.KeyFileLex.Token" />
        <element api="T:Goedel.Cryptography.KeyFile.DataBuffer" />
        <element api="T:Goedel.Cryptography.KeyFile.SSHData" />
        <element api="T:Goedel.Cryptography.KeyFile.SSH_RSA" />
        <element api="T:Goedel.Cryptography.KeyFile.SSH_DSS" />
        <element api="T:Goedel.Cryptography.KeyFile.KeyFileFormat" />
        <element api="T:Goedel.Cryptography.KeyFile.Extension" />
        <element api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" />
        <element api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex.State" />
        <element api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex.Token" />
        <element api="T:Goedel.Cryptography.KeyFile.AuthorizedKey" />
        <element api="T:Goedel.Cryptography.KeyFile.TaggedData" />
        <element api="T:Goedel.Cryptography.KeyFile.Header" />
        <element api="T:Goedel.Cryptography.KeyFile.KeyFileDecode" />
      </elements>
    </api>
    <api id="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex">
      <topicdata group="api" />
      <apidata name="AuthKeysFileLex" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.FSR.Lexer" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Goedel.FSR.Lexer.Actions">
          <apidata name="Actions" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <arrayOf rank="1">
              <type api="T:Goedel.FSR.Lexer.ActionDelegate" ref="true">
                <type api="T:Goedel.FSR.Lexer" ref="true" />
              </type>
            </arrayOf>
          </returns>
          <containers>
            <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.FSR" />
            <type api="T:Goedel.FSR.Lexer" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.FSR.Lexer.StateInt">
          <apidata name="StateInt" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.FSR" />
            <type api="T:Goedel.FSR.Lexer" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.FSR.Lexer.NextState">
          <apidata name="NextState" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.FSR" />
            <type api="T:Goedel.FSR.Lexer" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.FSR.Lexer.Reader">
          <apidata name="Reader" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:Goedel.FSR.LexReader" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.FSR" />
            <type api="T:Goedel.FSR.Lexer" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.FSR.Lexer.GetTokenInt(System.Int32)">
          <apidata name="GetTokenInt" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="StartState">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.FSR" />
            <type api="T:Goedel.FSR.Lexer" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.KeyFile.AuthKeysFileLex.Push">
          <element api="M:Goedel.FSR.Lexer.Push(System.Int32)">
            <apidata name="Push" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="c">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Boolean" ref="false" />
            </returns>
            <containers>
              <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.FSR" />
              <type api="T:Goedel.FSR.Lexer" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.FSR.Lexer.Push(System.String)">
            <apidata name="Push" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.FSR" />
              <type api="T:Goedel.FSR.Lexer" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:Goedel.FSR.Lexer.PushStart">
          <apidata name="PushStart" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.FSR" />
            <type api="T:Goedel.FSR.Lexer" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.FSR.Lexer.PushEnd(System.String)">
          <apidata name="PushEnd" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="Text" optional="true">
              <type api="T:System.String" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.FSR" />
            <type api="T:Goedel.FSR.Lexer" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.FSR.Lexer.Reset">
          <apidata name="Reset" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.FSR" />
            <type api="T:Goedel.FSR.Lexer" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.KeyFile.AuthKeysFileLex.#ctor">
          <element api="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.#ctor(Goedel.FSR.LexReader)" />
          <element api="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.#ctor(System.IO.Stream)" />
          <element api="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.#ctor(System.IO.TextReader)" />
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.AddAlgorithm(System.Int32)" />
        <element api="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.AddComment(System.Int32)" />
        <element api="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.AddData(System.Int32)" />
        <element api="P:Goedel.Cryptography.KeyFile.AuthKeysFileLex.CharacterMappings" />
        <element api="P:Goedel.Cryptography.KeyFile.AuthKeysFileLex.CompressedTransitions" />
        <element api="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.GetTaggedData" />
        <element api="Overload:Goedel.Cryptography.KeyFile.AuthKeysFileLex.GetToken">
          <element api="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.GetToken" />
          <element api="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.GetToken(Goedel.Cryptography.KeyFile.AuthKeysFileLex.State)" />
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.Ignore(System.Int32)" />
        <element api="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.Init" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Cryptography.KeyFile.AuthKeysFileLex">
      <topicdata name="AuthKeysFileLex" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" />
      <apidata name="AuthKeysFileLex" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Goedel.FSR.Lexer.GetTokenInt(System.Int32)">
          <apidata name="GetTokenInt" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="StartState">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.FSR" />
            <type api="T:Goedel.FSR.Lexer" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.KeyFile.AuthKeysFileLex.Push">
          <element api="M:Goedel.FSR.Lexer.Push(System.Int32)">
            <apidata name="Push" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="c">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Boolean" ref="false" />
            </returns>
            <containers>
              <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.FSR" />
              <type api="T:Goedel.FSR.Lexer" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.FSR.Lexer.Push(System.String)">
            <apidata name="Push" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.FSR" />
              <type api="T:Goedel.FSR.Lexer" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:Goedel.FSR.Lexer.PushStart">
          <apidata name="PushStart" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.FSR" />
            <type api="T:Goedel.FSR.Lexer" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.FSR.Lexer.PushEnd(System.String)">
          <apidata name="PushEnd" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="Text" optional="true">
              <type api="T:System.String" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.FSR" />
            <type api="T:Goedel.FSR.Lexer" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.FSR.Lexer.Reset">
          <apidata name="Reset" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.FSR" />
            <type api="T:Goedel.FSR.Lexer" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.AddAlgorithm(System.Int32)" />
        <element api="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.AddComment(System.Int32)" />
        <element api="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.AddData(System.Int32)" />
        <element api="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.GetTaggedData" />
        <element api="Overload:Goedel.Cryptography.KeyFile.AuthKeysFileLex.GetToken">
          <element api="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.GetToken" />
          <element api="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.GetToken(Goedel.Cryptography.KeyFile.AuthKeysFileLex.State)" />
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.Ignore(System.Int32)" />
        <element api="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.Init" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Cryptography.KeyFile.AuthKeysFileLex">
      <topicdata name="AuthKeysFileLex" group="list" subgroup="Properties" typeTopicId="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" />
      <apidata name="AuthKeysFileLex" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Goedel.Cryptography.KeyFile.AuthKeysFileLex.CharacterMappings" />
        <element api="P:Goedel.Cryptography.KeyFile.AuthKeysFileLex.CompressedTransitions" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Cryptography.KeyFile.AuthKeysFileLex">
      <topicdata name="AuthKeysFileLex" group="list" subgroup="Fields" typeTopicId="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" />
      <apidata name="AuthKeysFileLex" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.FSR.Lexer.Actions">
          <apidata name="Actions" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <arrayOf rank="1">
              <type api="T:Goedel.FSR.Lexer.ActionDelegate" ref="true">
                <type api="T:Goedel.FSR.Lexer" ref="true" />
              </type>
            </arrayOf>
          </returns>
          <containers>
            <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.FSR" />
            <type api="T:Goedel.FSR.Lexer" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.FSR.Lexer.StateInt">
          <apidata name="StateInt" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.FSR" />
            <type api="T:Goedel.FSR.Lexer" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.FSR.Lexer.NextState">
          <apidata name="NextState" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.FSR" />
            <type api="T:Goedel.FSR.Lexer" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.FSR.Lexer.Reader">
          <apidata name="Reader" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:Goedel.FSR.LexReader" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.FSR" />
            <type api="T:Goedel.FSR.Lexer" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.KeyFile.AuthKeysFileLex.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.#ctor(Goedel.FSR.LexReader)" />
        <element api="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.#ctor(System.IO.Stream)" />
        <element api="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.#ctor(System.IO.TextReader)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.KeyFile.AuthKeysFileLex.GetToken">
      <topicdata name="GetToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="GetToken" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.GetToken" />
        <element api="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.GetToken(Goedel.Cryptography.KeyFile.AuthKeysFileLex.State)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.#ctor(Goedel.FSR.LexReader)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.KeyFile.AuthKeysFileLex.#ctor" />
      <parameters>
        <parameter name="Reader">
          <type api="T:Goedel.FSR.LexReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.#ctor(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.KeyFile.AuthKeysFileLex.#ctor" />
      <parameters>
        <parameter name="Stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.#ctor(System.IO.TextReader)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.KeyFile.AuthKeysFileLex.#ctor" />
      <parameters>
        <parameter name="TextReader">
          <type api="T:System.IO.TextReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.AddAlgorithm(System.Int32)">
      <topicdata group="api" />
      <apidata name="AddAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="c">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.AddComment(System.Int32)">
      <topicdata group="api" />
      <apidata name="AddComment" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="c">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.AddData(System.Int32)">
      <topicdata group="api" />
      <apidata name="AddData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="c">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.KeyFile.AuthKeysFileLex.CharacterMappings">
      <topicdata group="api" />
      <apidata name="CharacterMappings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.FSR.Lexer.CharacterMappings">
          <type api="T:Goedel.FSR.Lexer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CharacterMappings" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.KeyFile.AuthKeysFileLex.CompressedTransitions">
      <topicdata group="api" />
      <apidata name="CompressedTransitions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.FSR.Lexer.CompressedTransitions">
          <type api="T:Goedel.FSR.Lexer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CompressedTransitions" />
      <returns>
        <arrayOf rank="2">
          <type api="T:System.Int16" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.GetTaggedData">
      <topicdata group="api" />
      <apidata name="GetTaggedData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.AuthorizedKey" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.GetToken">
      <topicdata group="api" />
      <apidata name="GetToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Cryptography.KeyFile.AuthKeysFileLex.GetToken" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex.Token" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.GetToken(Goedel.Cryptography.KeyFile.AuthKeysFileLex.State)">
      <topicdata group="api" />
      <apidata name="GetToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Cryptography.KeyFile.AuthKeysFileLex.GetToken" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="StartState">
          <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex.State" ref="false">
            <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex.Token" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.Ignore(System.Int32)">
      <topicdata group="api" />
      <apidata name="Ignore" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="c">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.AuthKeysFileLex.Init">
      <topicdata group="api" />
      <apidata name="Init" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.FSR.Lexer.Init">
          <type api="T:Goedel.FSR.Lexer" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex.State">
      <topicdata group="api" />
      <apidata name="State" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Goedel.Cryptography.KeyFile.AuthKeysFileLex.State.LineStart" />
        <element api="F:Goedel.Cryptography.KeyFile.AuthKeysFileLex.State.AlgRead" />
        <element api="F:Goedel.Cryptography.KeyFile.AuthKeysFileLex.State.AlgSpace" />
        <element api="F:Goedel.Cryptography.KeyFile.AuthKeysFileLex.State.DataRead" />
        <element api="F:Goedel.Cryptography.KeyFile.AuthKeysFileLex.State.CommentSpace" />
        <element api="F:Goedel.Cryptography.KeyFile.AuthKeysFileLex.State.Comment" />
        <element api="F:Goedel.Cryptography.KeyFile.AuthKeysFileLex.State.Finished" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.AuthKeysFileLex.State.AlgRead">
      <topicdata group="api" notopic="" />
      <apidata name="AlgRead" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
        </type>
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.AuthKeysFileLex.State.AlgSpace">
      <topicdata group="api" notopic="" />
      <apidata name="AlgSpace" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
        </type>
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.AuthKeysFileLex.State.Comment">
      <topicdata group="api" notopic="" />
      <apidata name="Comment" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
        </type>
      </returns>
      <value>5</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.AuthKeysFileLex.State.CommentSpace">
      <topicdata group="api" notopic="" />
      <apidata name="CommentSpace" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
        </type>
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.AuthKeysFileLex.State.DataRead">
      <topicdata group="api" notopic="" />
      <apidata name="DataRead" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
        </type>
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.AuthKeysFileLex.State.Finished">
      <topicdata group="api" notopic="" />
      <apidata name="Finished" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
        </type>
      </returns>
      <value>6</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.AuthKeysFileLex.State.LineStart">
      <topicdata group="api" notopic="" />
      <apidata name="LineStart" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
        </type>
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex.Token">
      <topicdata group="api" />
      <apidata name="Token" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Goedel.Cryptography.KeyFile.AuthKeysFileLex.Token.INVALID" />
        <element api="F:Goedel.Cryptography.KeyFile.AuthKeysFileLex.Token.Empty" />
        <element api="F:Goedel.Cryptography.KeyFile.AuthKeysFileLex.Token.Data" />
        <element api="F:Goedel.Cryptography.KeyFile.AuthKeysFileLex.Token.Algorithm" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.AuthKeysFileLex.Token.Algorithm">
      <topicdata group="api" notopic="" />
      <apidata name="Algorithm" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex.Token" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
        </type>
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex.Token" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.AuthKeysFileLex.Token.Data">
      <topicdata group="api" notopic="" />
      <apidata name="Data" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex.Token" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
        </type>
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex.Token" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.AuthKeysFileLex.Token.Empty">
      <topicdata group="api" notopic="" />
      <apidata name="Empty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex.Token" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
        </type>
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex.Token" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.AuthKeysFileLex.Token.INVALID">
      <topicdata group="api" notopic="" />
      <apidata name="INVALID" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex.Token" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
        </type>
      </returns>
      <value>-1</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex.Token" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.AuthKeysFileLex" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.KeyFile.AuthorizedKey">
      <topicdata group="api" />
      <apidata name="AuthorizedKey" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.ValueType.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.ValueType.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.ValueType.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.Cryptography.KeyFile.AuthorizedKey.Algorithm" />
        <element api="F:Goedel.Cryptography.KeyFile.AuthorizedKey.Comment" />
        <element api="F:Goedel.Cryptography.KeyFile.AuthorizedKey.Data" />
        <element api="F:Goedel.Cryptography.KeyFile.AuthorizedKey.SSHData" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Cryptography.KeyFile.AuthorizedKey">
      <topicdata name="AuthorizedKey" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.KeyFile.AuthorizedKey" />
      <apidata name="AuthorizedKey" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.ValueType.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.ValueType.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.ValueType.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthorizedKey" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Cryptography.KeyFile.AuthorizedKey">
      <topicdata name="AuthorizedKey" group="list" subgroup="Fields" typeTopicId="T:Goedel.Cryptography.KeyFile.AuthorizedKey" />
      <apidata name="AuthorizedKey" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Goedel.Cryptography.KeyFile.AuthorizedKey.Algorithm" />
        <element api="F:Goedel.Cryptography.KeyFile.AuthorizedKey.Comment" />
        <element api="F:Goedel.Cryptography.KeyFile.AuthorizedKey.Data" />
        <element api="F:Goedel.Cryptography.KeyFile.AuthorizedKey.SSHData" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthorizedKey" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.AuthorizedKey.Algorithm">
      <topicdata group="api" />
      <apidata name="Algorithm" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthorizedKey" ref="false" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.AuthorizedKey.Comment">
      <topicdata group="api" />
      <apidata name="Comment" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthorizedKey" ref="false" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.AuthorizedKey.Data">
      <topicdata group="api" />
      <apidata name="Data" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthorizedKey" ref="false" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.AuthorizedKey.SSHData">
      <topicdata group="api" />
      <apidata name="SSHData" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.SSHData" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.AuthorizedKey" ref="false" />
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.KeyFile.DataBuffer">
      <topicdata group="api" />
      <apidata name="DataBuffer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.KeyFile.DataBuffer.#ctor">
          <element api="M:Goedel.Cryptography.KeyFile.DataBuffer.#ctor" />
          <element api="M:Goedel.Cryptography.KeyFile.DataBuffer.#ctor(System.Byte[])" />
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.DataBuffer.Allocate" />
        <element api="F:Goedel.Cryptography.KeyFile.DataBuffer.Data" />
        <element api="Overload:Goedel.Cryptography.KeyFile.DataBuffer.Decode">
          <element api="M:Goedel.Cryptography.KeyFile.DataBuffer.Decode(System.Byte[]@)" />
          <element api="M:Goedel.Cryptography.KeyFile.DataBuffer.Decode(System.String@)" />
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.DataBuffer.DecodeLength" />
        <element api="Overload:Goedel.Cryptography.KeyFile.DataBuffer.Encode">
          <element api="M:Goedel.Cryptography.KeyFile.DataBuffer.Encode(System.Byte[])" />
          <element api="M:Goedel.Cryptography.KeyFile.DataBuffer.Encode(System.String)" />
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.DataBuffer.EncodeLength(System.UInt32)" />
        <element api="Overload:Goedel.Cryptography.KeyFile.DataBuffer.Size">
          <element api="M:Goedel.Cryptography.KeyFile.DataBuffer.Size(System.Byte[])" />
          <element api="M:Goedel.Cryptography.KeyFile.DataBuffer.Size(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Cryptography.KeyFile.DataBuffer">
      <topicdata name="DataBuffer" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.KeyFile.DataBuffer" />
      <apidata name="DataBuffer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.DataBuffer.Allocate" />
        <element api="Overload:Goedel.Cryptography.KeyFile.DataBuffer.Decode">
          <element api="M:Goedel.Cryptography.KeyFile.DataBuffer.Decode(System.Byte[]@)" />
          <element api="M:Goedel.Cryptography.KeyFile.DataBuffer.Decode(System.String@)" />
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.DataBuffer.DecodeLength" />
        <element api="Overload:Goedel.Cryptography.KeyFile.DataBuffer.Encode">
          <element api="M:Goedel.Cryptography.KeyFile.DataBuffer.Encode(System.Byte[])" />
          <element api="M:Goedel.Cryptography.KeyFile.DataBuffer.Encode(System.String)" />
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.DataBuffer.EncodeLength(System.UInt32)" />
        <element api="Overload:Goedel.Cryptography.KeyFile.DataBuffer.Size">
          <element api="M:Goedel.Cryptography.KeyFile.DataBuffer.Size(System.Byte[])" />
          <element api="M:Goedel.Cryptography.KeyFile.DataBuffer.Size(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.DataBuffer" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Cryptography.KeyFile.DataBuffer">
      <topicdata name="DataBuffer" group="list" subgroup="Fields" typeTopicId="T:Goedel.Cryptography.KeyFile.DataBuffer" />
      <apidata name="DataBuffer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Cryptography.KeyFile.DataBuffer.Data" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.DataBuffer" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.KeyFile.DataBuffer.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Cryptography.KeyFile.DataBuffer.#ctor" />
        <element api="M:Goedel.Cryptography.KeyFile.DataBuffer.#ctor(System.Byte[])" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.DataBuffer" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.KeyFile.DataBuffer.Decode">
      <topicdata name="Decode" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Decode" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Cryptography.KeyFile.DataBuffer.Decode(System.Byte[]@)" />
        <element api="M:Goedel.Cryptography.KeyFile.DataBuffer.Decode(System.String@)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.DataBuffer" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.KeyFile.DataBuffer.Encode">
      <topicdata name="Encode" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Encode" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Cryptography.KeyFile.DataBuffer.Encode(System.Byte[])" />
        <element api="M:Goedel.Cryptography.KeyFile.DataBuffer.Encode(System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.DataBuffer" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.KeyFile.DataBuffer.Size">
      <topicdata name="Size" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Size" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Cryptography.KeyFile.DataBuffer.Size(System.Byte[])" />
        <element api="M:Goedel.Cryptography.KeyFile.DataBuffer.Size(System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.DataBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.DataBuffer.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.KeyFile.DataBuffer.#ctor" />
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.DataBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.DataBuffer.#ctor(System.Byte[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.KeyFile.DataBuffer.#ctor" />
      <parameters>
        <parameter name="Data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.DataBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.DataBuffer.Allocate">
      <topicdata group="api" />
      <apidata name="Allocate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.DataBuffer" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.DataBuffer.Data">
      <topicdata group="api" />
      <apidata name="Data" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.DataBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.DataBuffer.Decode(System.Byte[]@)">
      <topicdata group="api" />
      <apidata name="Decode" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Cryptography.KeyFile.DataBuffer.Decode" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Result" out="true">
          <referenceTo>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.DataBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.DataBuffer.Decode(System.String@)">
      <topicdata group="api" />
      <apidata name="Decode" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Cryptography.KeyFile.DataBuffer.Decode" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Result" out="true">
          <referenceTo>
            <type api="T:System.String" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.DataBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.DataBuffer.DecodeLength">
      <topicdata group="api" />
      <apidata name="DecodeLength" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.DataBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.DataBuffer.Encode(System.Byte[])">
      <topicdata group="api" />
      <apidata name="Encode" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Cryptography.KeyFile.DataBuffer.Encode" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Input">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.DataBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.DataBuffer.Encode(System.String)">
      <topicdata group="api" />
      <apidata name="Encode" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Cryptography.KeyFile.DataBuffer.Encode" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.DataBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.DataBuffer.EncodeLength(System.UInt32)">
      <topicdata group="api" />
      <apidata name="EncodeLength" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Length">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.DataBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.DataBuffer.Size(System.Byte[])">
      <topicdata group="api" />
      <apidata name="Size" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Cryptography.KeyFile.DataBuffer.Size" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.DataBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.DataBuffer.Size(System.String)">
      <topicdata group="api" />
      <apidata name="Size" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Cryptography.KeyFile.DataBuffer.Size" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Data">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.DataBuffer" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.KeyFile.Extension">
      <topicdata group="api" />
      <apidata name="Extension" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Goedel.Cryptography.KeyFile.Extension.Dump">
          <element api="M:Goedel.Cryptography.KeyFile.Extension.Dump(System.Security.Cryptography.RSAParameters)" />
          <element api="M:Goedel.Cryptography.KeyFile.Extension.Dump(System.Byte[],System.String)" />
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.Extension.ToKeyFile(Goedel.Cryptography.KeyPair,Goedel.Cryptography.KeyFile.KeyFileFormat)" />
        <element api="Overload:Goedel.Cryptography.KeyFile.Extension.ToOpenSSH">
          <element api="M:Goedel.Cryptography.KeyFile.Extension.ToOpenSSH(Goedel.Cryptography.KeyPair)" />
          <element api="M:Goedel.Cryptography.KeyFile.Extension.ToOpenSSH(Goedel.Cryptography.Framework.RSAKeyPair,System.String)" />
        </element>
        <element api="Overload:Goedel.Cryptography.KeyFile.Extension.ToPEMPrivate">
          <element api="M:Goedel.Cryptography.KeyFile.Extension.ToPEMPrivate(Goedel.Cryptography.KeyPair)" />
          <element api="M:Goedel.Cryptography.KeyFile.Extension.ToPEMPrivate(Goedel.Cryptography.Framework.RSAKeyPair)" />
        </element>
        <element api="Overload:Goedel.Cryptography.KeyFile.Extension.ToPEMPublic">
          <element api="M:Goedel.Cryptography.KeyFile.Extension.ToPEMPublic(Goedel.Cryptography.KeyPair)" />
          <element api="M:Goedel.Cryptography.KeyFile.Extension.ToPEMPublic(Goedel.Cryptography.Framework.RSAKeyPair)" />
        </element>
        <element api="Overload:Goedel.Cryptography.KeyFile.Extension.ToPuTTY">
          <element api="M:Goedel.Cryptography.KeyFile.Extension.ToPuTTY(Goedel.Cryptography.KeyPair)" />
          <element api="M:Goedel.Cryptography.KeyFile.Extension.ToPuTTY(Goedel.Cryptography.Framework.RSAKeyPair)" />
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Goedel.Cryptography.KeyFile.Extension">
      <topicdata name="Extension" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.KeyFile.Extension" />
      <apidata name="Extension" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:Goedel.Cryptography.KeyFile.Extension.Dump">
          <element api="M:Goedel.Cryptography.KeyFile.Extension.Dump(System.Security.Cryptography.RSAParameters)" />
          <element api="M:Goedel.Cryptography.KeyFile.Extension.Dump(System.Byte[],System.String)" />
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.Extension.ToKeyFile(Goedel.Cryptography.KeyPair,Goedel.Cryptography.KeyFile.KeyFileFormat)" />
        <element api="Overload:Goedel.Cryptography.KeyFile.Extension.ToOpenSSH">
          <element api="M:Goedel.Cryptography.KeyFile.Extension.ToOpenSSH(Goedel.Cryptography.KeyPair)" />
          <element api="M:Goedel.Cryptography.KeyFile.Extension.ToOpenSSH(Goedel.Cryptography.Framework.RSAKeyPair,System.String)" />
        </element>
        <element api="Overload:Goedel.Cryptography.KeyFile.Extension.ToPEMPrivate">
          <element api="M:Goedel.Cryptography.KeyFile.Extension.ToPEMPrivate(Goedel.Cryptography.KeyPair)" />
          <element api="M:Goedel.Cryptography.KeyFile.Extension.ToPEMPrivate(Goedel.Cryptography.Framework.RSAKeyPair)" />
        </element>
        <element api="Overload:Goedel.Cryptography.KeyFile.Extension.ToPEMPublic">
          <element api="M:Goedel.Cryptography.KeyFile.Extension.ToPEMPublic(Goedel.Cryptography.KeyPair)" />
          <element api="M:Goedel.Cryptography.KeyFile.Extension.ToPEMPublic(Goedel.Cryptography.Framework.RSAKeyPair)" />
        </element>
        <element api="Overload:Goedel.Cryptography.KeyFile.Extension.ToPuTTY">
          <element api="M:Goedel.Cryptography.KeyFile.Extension.ToPuTTY(Goedel.Cryptography.KeyPair)" />
          <element api="M:Goedel.Cryptography.KeyFile.Extension.ToPuTTY(Goedel.Cryptography.Framework.RSAKeyPair)" />
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.Extension" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.KeyFile.Extension.Dump">
      <topicdata name="Dump" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Dump" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Cryptography.KeyFile.Extension.Dump(System.Security.Cryptography.RSAParameters)" />
        <element api="M:Goedel.Cryptography.KeyFile.Extension.Dump(System.Byte[],System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.Extension" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.KeyFile.Extension.ToOpenSSH">
      <topicdata name="ToOpenSSH" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ToOpenSSH" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Cryptography.KeyFile.Extension.ToOpenSSH(Goedel.Cryptography.KeyPair)" />
        <element api="M:Goedel.Cryptography.KeyFile.Extension.ToOpenSSH(Goedel.Cryptography.Framework.RSAKeyPair,System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.Extension" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.KeyFile.Extension.ToPEMPrivate">
      <topicdata name="ToPEMPrivate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ToPEMPrivate" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Cryptography.KeyFile.Extension.ToPEMPrivate(Goedel.Cryptography.KeyPair)" />
        <element api="M:Goedel.Cryptography.KeyFile.Extension.ToPEMPrivate(Goedel.Cryptography.Framework.RSAKeyPair)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.Extension" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.KeyFile.Extension.ToPEMPublic">
      <topicdata name="ToPEMPublic" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ToPEMPublic" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Cryptography.KeyFile.Extension.ToPEMPublic(Goedel.Cryptography.KeyPair)" />
        <element api="M:Goedel.Cryptography.KeyFile.Extension.ToPEMPublic(Goedel.Cryptography.Framework.RSAKeyPair)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.Extension" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.KeyFile.Extension.ToPuTTY">
      <topicdata name="ToPuTTY" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ToPuTTY" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Cryptography.KeyFile.Extension.ToPuTTY(Goedel.Cryptography.KeyPair)" />
        <element api="M:Goedel.Cryptography.KeyFile.Extension.ToPuTTY(Goedel.Cryptography.Framework.RSAKeyPair)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.Extension" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.Extension.Dump(System.Byte[],System.String)">
      <topicdata group="api" />
      <apidata name="Dump" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Goedel.Cryptography.KeyFile.Extension.Dump" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.Extension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.Extension.Dump(System.Security.Cryptography.RSAParameters)">
      <topicdata group="api" />
      <apidata name="Dump" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Goedel.Cryptography.KeyFile.Extension.Dump" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="RSAParameters">
          <type api="T:System.Security.Cryptography.RSAParameters" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.Extension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.Extension.ToKeyFile(Goedel.Cryptography.KeyPair,Goedel.Cryptography.KeyFile.KeyFileFormat)">
      <topicdata group="api" />
      <apidata name="ToKeyFile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="KeyPair">
          <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
        </parameter>
        <parameter name="KeyFileFormat">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileFormat" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.Extension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.Extension.ToOpenSSH(Goedel.Cryptography.Framework.RSAKeyPair,System.String)">
      <topicdata group="api" />
      <apidata name="ToOpenSSH" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Goedel.Cryptography.KeyFile.Extension.ToOpenSSH" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="RSAKeyPair">
          <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
        </parameter>
        <parameter name="Tag" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.Extension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.Extension.ToOpenSSH(Goedel.Cryptography.KeyPair)">
      <topicdata group="api" />
      <apidata name="ToOpenSSH" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Goedel.Cryptography.KeyFile.Extension.ToOpenSSH" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="KeyPair">
          <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.Extension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.Extension.ToPEMPrivate(Goedel.Cryptography.Framework.RSAKeyPair)">
      <topicdata group="api" />
      <apidata name="ToPEMPrivate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Goedel.Cryptography.KeyFile.Extension.ToPEMPrivate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="RSAKeyPair">
          <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.Extension" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.Extension.ToPEMPrivate(Goedel.Cryptography.KeyPair)">
      <topicdata group="api" />
      <apidata name="ToPEMPrivate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Goedel.Cryptography.KeyFile.Extension.ToPEMPrivate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="KeyPair">
          <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.Extension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.Extension.ToPEMPublic(Goedel.Cryptography.Framework.RSAKeyPair)">
      <topicdata group="api" />
      <apidata name="ToPEMPublic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Goedel.Cryptography.KeyFile.Extension.ToPEMPublic" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="RSAKeyPair">
          <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.Extension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.Extension.ToPEMPublic(Goedel.Cryptography.KeyPair)">
      <topicdata group="api" />
      <apidata name="ToPEMPublic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Goedel.Cryptography.KeyFile.Extension.ToPEMPublic" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="KeyPair">
          <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.Extension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.Extension.ToPuTTY(Goedel.Cryptography.Framework.RSAKeyPair)">
      <topicdata group="api" />
      <apidata name="ToPuTTY" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Goedel.Cryptography.KeyFile.Extension.ToPuTTY" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="RSAKeyPair">
          <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.Extension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.Extension.ToPuTTY(Goedel.Cryptography.KeyPair)">
      <topicdata group="api" />
      <apidata name="ToPuTTY" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Goedel.Cryptography.KeyFile.Extension.ToPuTTY" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="KeyPair">
          <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.Extension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Goedel.Cryptography.KeyFile.Header">
      <topicdata group="api" />
      <apidata name="Header" group="type" subgroup="class" />
      <sourceContext file="Libraries/Goedel.Cryptography.Jose/Header.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.Header.#ctor" />
        <element api="F:Goedel.Cryptography.KeyFile.Header.Tag" />
        <element api="F:Goedel.Cryptography.KeyFile.Header.Value" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Cryptography.KeyFile.Header">
      <topicdata name="Header" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.KeyFile.Header" />
      <apidata name="Header" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.Header" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Cryptography.KeyFile.Header">
      <topicdata name="Header" group="list" subgroup="Fields" typeTopicId="T:Goedel.Cryptography.KeyFile.Header" />
      <apidata name="Header" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Cryptography.KeyFile.Header.Tag" />
        <element api="F:Goedel.Cryptography.KeyFile.Header.Value" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.Header" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.Header.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Libraries/Goedel.Cryptography.Jose/Header.cs" />
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.Header" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.Header.Tag">
      <topicdata group="api" />
      <apidata name="Tag" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Cryptography.Jose/Header.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.Header" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.Header.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Cryptography.Jose/Header.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.Header" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.KeyFile.KeyFileDecode">
      <topicdata group="api" />
      <apidata name="KeyFileDecode" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Goedel.Cryptography.KeyFile.KeyFileDecode.DecodeAuthHost">
          <element api="M:Goedel.Cryptography.KeyFile.KeyFileDecode.DecodeAuthHost(Goedel.FSR.LexReader)" />
          <element api="M:Goedel.Cryptography.KeyFile.KeyFileDecode.DecodeAuthHost(System.String)" />
        </element>
        <element api="Overload:Goedel.Cryptography.KeyFile.KeyFileDecode.DecodePEM">
          <element api="M:Goedel.Cryptography.KeyFile.KeyFileDecode.DecodePEM(Goedel.FSR.LexReader)" />
          <element api="M:Goedel.Cryptography.KeyFile.KeyFileDecode.DecodePEM(System.String)" />
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileDecode.DecodePEMText(System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Cryptography.KeyFile.KeyFileDecode">
      <topicdata name="KeyFileDecode" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.KeyFile.KeyFileDecode" />
      <apidata name="KeyFileDecode" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:Goedel.Cryptography.KeyFile.KeyFileDecode.DecodeAuthHost">
          <element api="M:Goedel.Cryptography.KeyFile.KeyFileDecode.DecodeAuthHost(Goedel.FSR.LexReader)" />
          <element api="M:Goedel.Cryptography.KeyFile.KeyFileDecode.DecodeAuthHost(System.String)" />
        </element>
        <element api="Overload:Goedel.Cryptography.KeyFile.KeyFileDecode.DecodePEM">
          <element api="M:Goedel.Cryptography.KeyFile.KeyFileDecode.DecodePEM(Goedel.FSR.LexReader)" />
          <element api="M:Goedel.Cryptography.KeyFile.KeyFileDecode.DecodePEM(System.String)" />
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileDecode.DecodePEMText(System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileDecode" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.KeyFile.KeyFileDecode.DecodeAuthHost">
      <topicdata name="DecodeAuthHost" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="DecodeAuthHost" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileDecode.DecodeAuthHost(Goedel.FSR.LexReader)" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileDecode.DecodeAuthHost(System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileDecode" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.KeyFile.KeyFileDecode.DecodePEM">
      <topicdata name="DecodePEM" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="DecodePEM" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileDecode.DecodePEM(Goedel.FSR.LexReader)" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileDecode.DecodePEM(System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileDecode" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.KeyFileDecode.DecodeAuthHost(Goedel.FSR.LexReader)">
      <topicdata group="api" />
      <apidata name="DecodeAuthHost" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Goedel.Cryptography.KeyFile.KeyFileDecode.DecodeAuthHost" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="LexReader">
          <type api="T:Goedel.FSR.LexReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Goedel.Cryptography.KeyFile.AuthorizedKey" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileDecode" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.KeyFileDecode.DecodeAuthHost(System.String)">
      <topicdata group="api" />
      <apidata name="DecodeAuthHost" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Goedel.Cryptography.KeyFile.KeyFileDecode.DecodeAuthHost" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="FileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Goedel.Cryptography.KeyFile.AuthorizedKey" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileDecode" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.KeyFileDecode.DecodePEM(Goedel.FSR.LexReader)">
      <topicdata group="api" />
      <apidata name="DecodePEM" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Goedel.Cryptography.KeyFile.KeyFileDecode.DecodePEM" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="LexReader">
          <type api="T:Goedel.FSR.LexReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileDecode" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.KeyFileDecode.DecodePEM(System.String)">
      <topicdata group="api" />
      <apidata name="DecodePEM" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Goedel.Cryptography.KeyFile.KeyFileDecode.DecodePEM" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="FileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileDecode" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.KeyFileDecode.DecodePEMText(System.String)">
      <topicdata group="api" />
      <apidata name="DecodePEMText" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileDecode" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.KeyFile.KeyFileException">
      <topicdata group="api" />
      <apidata name="KeyFileException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Goedel.Cryptography.KeyFile.NoProviderSpecified" ref="true" />
          <type api="T:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable" ref="true" />
          <type api="T:Goedel.Cryptography.KeyFile.UnexpectedEnd" ref="true" />
          <type api="T:Goedel.Cryptography.KeyFile.ParseError" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.KeyFile.KeyFileException.#ctor">
          <element api="M:Goedel.Cryptography.KeyFile.KeyFileException.#ctor" />
          <element api="M:Goedel.Cryptography.KeyFile.KeyFileException.#ctor(System.String)" />
          <element api="M:Goedel.Cryptography.KeyFile.KeyFileException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileException.Throw" />
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileException.UserData" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Cryptography.KeyFile.KeyFileException">
      <topicdata name="KeyFileException" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.KeyFile.KeyFileException" />
      <apidata name="KeyFileException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileException" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Cryptography.KeyFile.KeyFileException">
      <topicdata name="KeyFileException" group="list" subgroup="Properties" typeTopicId="T:Goedel.Cryptography.KeyFile.KeyFileException" />
      <apidata name="KeyFileException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileException" />
      </containers>
    </api>
    <api id="Events.T:Goedel.Cryptography.KeyFile.KeyFileException">
      <topicdata name="KeyFileException" group="list" subgroup="Events" typeTopicId="T:Goedel.Cryptography.KeyFile.KeyFileException" />
      <apidata name="KeyFileException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileException" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Cryptography.KeyFile.KeyFileException">
      <topicdata name="KeyFileException" group="list" subgroup="Fields" typeTopicId="T:Goedel.Cryptography.KeyFile.KeyFileException" />
      <apidata name="KeyFileException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileException.Throw" />
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileException.UserData" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileException" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.KeyFile.KeyFileException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileException.#ctor" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileException.#ctor(System.String)" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileException" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.KeyFileException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.KeyFile.KeyFileException.#ctor" />
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileException" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.KeyFileException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.KeyFile.KeyFileException.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileException" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.KeyFileException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.KeyFile.KeyFileException.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileException" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.KeyFileException.Throw">
      <topicdata group="api" />
      <apidata name="Throw" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Utilities.ThrowDelegate" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileException" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.KeyFileException.UserData">
      <topicdata group="api" />
      <apidata name="UserData" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileException" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.KeyFile.KeyFileFormat">
      <topicdata group="api" />
      <apidata name="KeyFileFormat" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileFormat.PEMPrivate" />
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileFormat.PEMPublic" />
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileFormat.PuTTY" />
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileFormat.OpenSSH" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.KeyFileFormat.OpenSSH">
      <topicdata group="api" notopic="" />
      <apidata name="OpenSSH" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileFormat" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileFormat" ref="false" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.KeyFileFormat.PEMPrivate">
      <topicdata group="api" notopic="" />
      <apidata name="PEMPrivate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileFormat" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileFormat" ref="false" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.KeyFileFormat.PEMPublic">
      <topicdata group="api" notopic="" />
      <apidata name="PEMPublic" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileFormat" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileFormat" ref="false" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.KeyFileFormat.PuTTY">
      <topicdata group="api" notopic="" />
      <apidata name="PuTTY" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileFormat" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileFormat" ref="false" />
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.KeyFile.KeyFileLex">
      <topicdata group="api" />
      <apidata name="KeyFileLex" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.FSR.Lexer" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Goedel.Cryptography.KeyFile.KeyFileLex.Reset">
          <element api="M:Goedel.FSR.Lexer.Reset">
            <apidata name="Reset" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <containers>
              <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.FSR" />
              <type api="T:Goedel.FSR.Lexer" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.Reset(System.Int32)" />
        </element>
        <element api="F:Goedel.FSR.Lexer.Actions">
          <apidata name="Actions" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <arrayOf rank="1">
              <type api="T:Goedel.FSR.Lexer.ActionDelegate" ref="true">
                <type api="T:Goedel.FSR.Lexer" ref="true" />
              </type>
            </arrayOf>
          </returns>
          <containers>
            <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.FSR" />
            <type api="T:Goedel.FSR.Lexer" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.FSR.Lexer.StateInt">
          <apidata name="StateInt" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.FSR" />
            <type api="T:Goedel.FSR.Lexer" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.FSR.Lexer.NextState">
          <apidata name="NextState" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.FSR" />
            <type api="T:Goedel.FSR.Lexer" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.FSR.Lexer.Reader">
          <apidata name="Reader" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:Goedel.FSR.LexReader" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.FSR" />
            <type api="T:Goedel.FSR.Lexer" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.FSR.Lexer.GetTokenInt(System.Int32)">
          <apidata name="GetTokenInt" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="StartState">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.FSR" />
            <type api="T:Goedel.FSR.Lexer" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.KeyFile.KeyFileLex.Push">
          <element api="M:Goedel.FSR.Lexer.Push(System.Int32)">
            <apidata name="Push" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="c">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Boolean" ref="false" />
            </returns>
            <containers>
              <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.FSR" />
              <type api="T:Goedel.FSR.Lexer" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.FSR.Lexer.Push(System.String)">
            <apidata name="Push" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.FSR" />
              <type api="T:Goedel.FSR.Lexer" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:Goedel.FSR.Lexer.PushStart">
          <apidata name="PushStart" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.FSR" />
            <type api="T:Goedel.FSR.Lexer" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.FSR.Lexer.PushEnd(System.String)">
          <apidata name="PushEnd" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="Text" optional="true">
              <type api="T:System.String" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.FSR" />
            <type api="T:Goedel.FSR.Lexer" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.KeyFile.KeyFileLex.#ctor">
          <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.#ctor(Goedel.FSR.LexReader)" />
          <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.#ctor(System.IO.Stream)" />
          <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.#ctor(System.IO.TextReader)" />
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.Abort(System.Int32)" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.AddTag(System.Int32)" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.Base64(System.Int32)" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.Begin(System.Int32)" />
        <element api="P:Goedel.Cryptography.KeyFile.KeyFileLex.CharacterMappings" />
        <element api="P:Goedel.Cryptography.KeyFile.KeyFileLex.CompressedTransitions" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.CopyHeader(System.Int32)" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.Count1(System.Int32)" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.Count2(System.Int32)" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.Count3(System.Int32)" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.Count4(System.Int32)" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.End(System.Int32)" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.GetTaggedData" />
        <element api="Overload:Goedel.Cryptography.KeyFile.KeyFileLex.GetToken">
          <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.GetToken" />
          <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.GetToken(Goedel.Cryptography.KeyFile.KeyFileLex.State)" />
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.HeaderAdd(System.Int32)" />
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileLex.Headers" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.Init" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.StartHeader(System.Int32)" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.Tag1(System.Int32)" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.Tag2(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Cryptography.KeyFile.KeyFileLex">
      <topicdata name="KeyFileLex" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.KeyFile.KeyFileLex" />
      <apidata name="KeyFileLex" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:Goedel.Cryptography.KeyFile.KeyFileLex.Reset">
          <element api="M:Goedel.FSR.Lexer.Reset">
            <apidata name="Reset" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <containers>
              <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.FSR" />
              <type api="T:Goedel.FSR.Lexer" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.Reset(System.Int32)" />
        </element>
        <element api="M:Goedel.FSR.Lexer.GetTokenInt(System.Int32)">
          <apidata name="GetTokenInt" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="StartState">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.FSR" />
            <type api="T:Goedel.FSR.Lexer" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.KeyFile.KeyFileLex.Push">
          <element api="M:Goedel.FSR.Lexer.Push(System.Int32)">
            <apidata name="Push" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="c">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Boolean" ref="false" />
            </returns>
            <containers>
              <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.FSR" />
              <type api="T:Goedel.FSR.Lexer" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.FSR.Lexer.Push(System.String)">
            <apidata name="Push" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Text">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.FSR" />
              <type api="T:Goedel.FSR.Lexer" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:Goedel.FSR.Lexer.PushStart">
          <apidata name="PushStart" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.FSR" />
            <type api="T:Goedel.FSR.Lexer" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.FSR.Lexer.PushEnd(System.String)">
          <apidata name="PushEnd" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="Text" optional="true">
              <type api="T:System.String" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.FSR" />
            <type api="T:Goedel.FSR.Lexer" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.Abort(System.Int32)" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.AddTag(System.Int32)" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.Base64(System.Int32)" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.Begin(System.Int32)" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.CopyHeader(System.Int32)" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.Count1(System.Int32)" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.Count2(System.Int32)" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.Count3(System.Int32)" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.Count4(System.Int32)" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.End(System.Int32)" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.GetTaggedData" />
        <element api="Overload:Goedel.Cryptography.KeyFile.KeyFileLex.GetToken">
          <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.GetToken" />
          <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.GetToken(Goedel.Cryptography.KeyFile.KeyFileLex.State)" />
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.HeaderAdd(System.Int32)" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.Init" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.StartHeader(System.Int32)" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.Tag1(System.Int32)" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.Tag2(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Cryptography.KeyFile.KeyFileLex">
      <topicdata name="KeyFileLex" group="list" subgroup="Properties" typeTopicId="T:Goedel.Cryptography.KeyFile.KeyFileLex" />
      <apidata name="KeyFileLex" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Goedel.Cryptography.KeyFile.KeyFileLex.CharacterMappings" />
        <element api="P:Goedel.Cryptography.KeyFile.KeyFileLex.CompressedTransitions" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Cryptography.KeyFile.KeyFileLex">
      <topicdata name="KeyFileLex" group="list" subgroup="Fields" typeTopicId="T:Goedel.Cryptography.KeyFile.KeyFileLex" />
      <apidata name="KeyFileLex" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.FSR.Lexer.Actions">
          <apidata name="Actions" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <arrayOf rank="1">
              <type api="T:Goedel.FSR.Lexer.ActionDelegate" ref="true">
                <type api="T:Goedel.FSR.Lexer" ref="true" />
              </type>
            </arrayOf>
          </returns>
          <containers>
            <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.FSR" />
            <type api="T:Goedel.FSR.Lexer" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.FSR.Lexer.StateInt">
          <apidata name="StateInt" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.FSR" />
            <type api="T:Goedel.FSR.Lexer" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.FSR.Lexer.NextState">
          <apidata name="NextState" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.FSR" />
            <type api="T:Goedel.FSR.Lexer" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.FSR.Lexer.Reader">
          <apidata name="Reader" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:Goedel.FSR.LexReader" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.FSR" />
            <type api="T:Goedel.FSR.Lexer" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileLex.Headers" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.KeyFile.KeyFileLex.Reset">
      <topicdata name="Reset" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Reset" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.FSR.Lexer.Reset">
          <apidata name="Reset" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="Goedel.FSR" module="Goedel.FSR" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.FSR" />
            <type api="T:Goedel.FSR.Lexer" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.Reset(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.KeyFile.KeyFileLex.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.#ctor(Goedel.FSR.LexReader)" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.#ctor(System.IO.Stream)" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.#ctor(System.IO.TextReader)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.KeyFile.KeyFileLex.GetToken">
      <topicdata name="GetToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="GetToken" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.GetToken" />
        <element api="M:Goedel.Cryptography.KeyFile.KeyFileLex.GetToken(Goedel.Cryptography.KeyFile.KeyFileLex.State)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.KeyFileLex.#ctor(Goedel.FSR.LexReader)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.KeyFile.KeyFileLex.#ctor" />
      <parameters>
        <parameter name="Reader">
          <type api="T:Goedel.FSR.LexReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.KeyFileLex.#ctor(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.KeyFile.KeyFileLex.#ctor" />
      <parameters>
        <parameter name="Stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.KeyFileLex.#ctor(System.IO.TextReader)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.KeyFile.KeyFileLex.#ctor" />
      <parameters>
        <parameter name="TextReader">
          <type api="T:System.IO.TextReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.KeyFileLex.Abort(System.Int32)">
      <topicdata group="api" />
      <apidata name="Abort" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="c">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.KeyFileLex.AddTag(System.Int32)">
      <topicdata group="api" />
      <apidata name="AddTag" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="c">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.KeyFileLex.Base64(System.Int32)">
      <topicdata group="api" />
      <apidata name="Base64" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="c">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.KeyFileLex.Begin(System.Int32)">
      <topicdata group="api" />
      <apidata name="Begin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="c">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.KeyFile.KeyFileLex.CharacterMappings">
      <topicdata group="api" />
      <apidata name="CharacterMappings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.FSR.Lexer.CharacterMappings">
          <type api="T:Goedel.FSR.Lexer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CharacterMappings" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.KeyFile.KeyFileLex.CompressedTransitions">
      <topicdata group="api" />
      <apidata name="CompressedTransitions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.FSR.Lexer.CompressedTransitions">
          <type api="T:Goedel.FSR.Lexer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CompressedTransitions" />
      <returns>
        <arrayOf rank="2">
          <type api="T:System.Int16" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.KeyFileLex.CopyHeader(System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyHeader" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="c">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.KeyFileLex.Count1(System.Int32)">
      <topicdata group="api" />
      <apidata name="Count1" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="c">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.KeyFileLex.Count2(System.Int32)">
      <topicdata group="api" />
      <apidata name="Count2" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="c">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.KeyFileLex.Count3(System.Int32)">
      <topicdata group="api" />
      <apidata name="Count3" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="c">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.KeyFileLex.Count4(System.Int32)">
      <topicdata group="api" />
      <apidata name="Count4" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="c">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.KeyFileLex.End(System.Int32)">
      <topicdata group="api" />
      <apidata name="End" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="c">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.KeyFileLex.GetTaggedData">
      <topicdata group="api" />
      <apidata name="GetTaggedData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.TaggedData" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.KeyFileLex.GetToken">
      <topicdata group="api" />
      <apidata name="GetToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Cryptography.KeyFile.KeyFileLex.GetToken" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.Token" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.KeyFileLex.GetToken(Goedel.Cryptography.KeyFile.KeyFileLex.State)">
      <topicdata group="api" />
      <apidata name="GetToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Cryptography.KeyFile.KeyFileLex.GetToken" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="StartState">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.State" ref="false">
            <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.Token" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.KeyFileLex.HeaderAdd(System.Int32)">
      <topicdata group="api" />
      <apidata name="HeaderAdd" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="c">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.KeyFileLex.Headers">
      <topicdata group="api" />
      <apidata name="Headers" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Goedel.Cryptography.KeyFile.Header" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.KeyFileLex.Init">
      <topicdata group="api" />
      <apidata name="Init" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.FSR.Lexer.Init">
          <type api="T:Goedel.FSR.Lexer" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.KeyFileLex.Reset(System.Int32)">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Cryptography.KeyFile.KeyFileLex.Reset" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="c">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.KeyFileLex.StartHeader(System.Int32)">
      <topicdata group="api" />
      <apidata name="StartHeader" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="c">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.KeyFileLex.Tag1(System.Int32)">
      <topicdata group="api" />
      <apidata name="Tag1" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="c">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.KeyFileLex.Tag2(System.Int32)">
      <topicdata group="api" />
      <apidata name="Tag2" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="c">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.KeyFile.KeyFileLex.State">
      <topicdata group="api" />
      <apidata name="State" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileLex.State.FileStart" />
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileLex.State.ArmorStart1" />
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileLex.State.TagStartBegin" />
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileLex.State.TagStart" />
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileLex.State.ArmorStart2" />
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileLex.State.Base64Data" />
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileLex.State.IsHeader" />
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileLex.State.HeaderData" />
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileLex.State.HeaderEnd" />
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileLex.State.ArmorEnd1" />
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileLex.State.TagEndEnd" />
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileLex.State.TagEnd" />
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileLex.State.ArmorEnd2" />
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileLex.State.StartTag" />
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileLex.State.Fail" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.KeyFileLex.State.ArmorEnd1">
      <topicdata group="api" notopic="" />
      <apidata name="ArmorEnd1" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </returns>
      <value>9</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.KeyFileLex.State.ArmorEnd2">
      <topicdata group="api" notopic="" />
      <apidata name="ArmorEnd2" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </returns>
      <value>12</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.KeyFileLex.State.ArmorStart1">
      <topicdata group="api" notopic="" />
      <apidata name="ArmorStart1" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.KeyFileLex.State.ArmorStart2">
      <topicdata group="api" notopic="" />
      <apidata name="ArmorStart2" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.KeyFileLex.State.Base64Data">
      <topicdata group="api" notopic="" />
      <apidata name="Base64Data" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </returns>
      <value>5</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.KeyFileLex.State.Fail">
      <topicdata group="api" notopic="" />
      <apidata name="Fail" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </returns>
      <value>14</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.KeyFileLex.State.FileStart">
      <topicdata group="api" notopic="" />
      <apidata name="FileStart" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.KeyFileLex.State.HeaderData">
      <topicdata group="api" notopic="" />
      <apidata name="HeaderData" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </returns>
      <value>7</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.KeyFileLex.State.HeaderEnd">
      <topicdata group="api" notopic="" />
      <apidata name="HeaderEnd" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </returns>
      <value>8</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.KeyFileLex.State.IsHeader">
      <topicdata group="api" notopic="" />
      <apidata name="IsHeader" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </returns>
      <value>6</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.KeyFileLex.State.StartTag">
      <topicdata group="api" notopic="" />
      <apidata name="StartTag" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </returns>
      <value>13</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.KeyFileLex.State.TagEnd">
      <topicdata group="api" notopic="" />
      <apidata name="TagEnd" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </returns>
      <value>11</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.KeyFileLex.State.TagEndEnd">
      <topicdata group="api" notopic="" />
      <apidata name="TagEndEnd" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </returns>
      <value>10</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.KeyFileLex.State.TagStart">
      <topicdata group="api" notopic="" />
      <apidata name="TagStart" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.KeyFileLex.State.TagStartBegin">
      <topicdata group="api" notopic="" />
      <apidata name="TagStartBegin" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.State" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.KeyFile.KeyFileLex.Token">
      <topicdata group="api" />
      <apidata name="Token" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileLex.Token.INVALID" />
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileLex.Token.Empty" />
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileLex.Token.Tag" />
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileLex.Token.Armor" />
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileLex.Token.Data" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.KeyFileLex.Token.Armor">
      <topicdata group="api" notopic="" />
      <apidata name="Armor" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.Token" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.Token" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.KeyFileLex.Token.Data">
      <topicdata group="api" notopic="" />
      <apidata name="Data" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.Token" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.Token" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.KeyFileLex.Token.Empty">
      <topicdata group="api" notopic="" />
      <apidata name="Empty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.Token" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.Token" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.KeyFileLex.Token.INVALID">
      <topicdata group="api" notopic="" />
      <apidata name="INVALID" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.Token" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </returns>
      <value>-1</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.Token" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.KeyFileLex.Token.Tag">
      <topicdata group="api" notopic="" />
      <apidata name="Tag" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.Token" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex.Token" ref="false">
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileLex" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.KeyFile.NoProviderSpecified">
      <topicdata group="api" />
      <apidata name="NoProviderSpecified" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileException.UserData" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.KeyFile.NoProviderSpecified.#ctor">
          <element api="M:Goedel.Cryptography.KeyFile.NoProviderSpecified.#ctor" />
          <element api="M:Goedel.Cryptography.KeyFile.NoProviderSpecified.#ctor(System.String)" />
          <element api="M:Goedel.Cryptography.KeyFile.NoProviderSpecified.#ctor(System.String,System.Exception)" />
        </element>
        <element api="F:Goedel.Cryptography.KeyFile.NoProviderSpecified.Throw" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Cryptography.KeyFile.NoProviderSpecified">
      <topicdata name="NoProviderSpecified" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.KeyFile.NoProviderSpecified" />
      <apidata name="NoProviderSpecified" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.NoProviderSpecified" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Cryptography.KeyFile.NoProviderSpecified">
      <topicdata name="NoProviderSpecified" group="list" subgroup="Properties" typeTopicId="T:Goedel.Cryptography.KeyFile.NoProviderSpecified" />
      <apidata name="NoProviderSpecified" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.NoProviderSpecified" />
      </containers>
    </api>
    <api id="Events.T:Goedel.Cryptography.KeyFile.NoProviderSpecified">
      <topicdata name="NoProviderSpecified" group="list" subgroup="Events" typeTopicId="T:Goedel.Cryptography.KeyFile.NoProviderSpecified" />
      <apidata name="NoProviderSpecified" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.NoProviderSpecified" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Cryptography.KeyFile.NoProviderSpecified">
      <topicdata name="NoProviderSpecified" group="list" subgroup="Fields" typeTopicId="T:Goedel.Cryptography.KeyFile.NoProviderSpecified" />
      <apidata name="NoProviderSpecified" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileException.UserData" />
        <element api="F:Goedel.Cryptography.KeyFile.NoProviderSpecified.Throw" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.NoProviderSpecified" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.KeyFile.NoProviderSpecified.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Cryptography.KeyFile.NoProviderSpecified.#ctor" />
        <element api="M:Goedel.Cryptography.KeyFile.NoProviderSpecified.#ctor(System.String)" />
        <element api="M:Goedel.Cryptography.KeyFile.NoProviderSpecified.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.NoProviderSpecified" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.NoProviderSpecified.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.KeyFile.NoProviderSpecified.#ctor" />
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.NoProviderSpecified" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.NoProviderSpecified.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.KeyFile.NoProviderSpecified.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.NoProviderSpecified" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.NoProviderSpecified.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.KeyFile.NoProviderSpecified.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.NoProviderSpecified" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.NoProviderSpecified.Throw">
      <topicdata group="api" />
      <apidata name="Throw" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Utilities.ThrowDelegate" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.NoProviderSpecified" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.KeyFile.ParseError">
      <topicdata group="api" />
      <apidata name="ParseError" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileException.UserData" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.KeyFile.ParseError.#ctor">
          <element api="M:Goedel.Cryptography.KeyFile.ParseError.#ctor" />
          <element api="M:Goedel.Cryptography.KeyFile.ParseError.#ctor(Goedel.FSR.LexReader)" />
          <element api="M:Goedel.Cryptography.KeyFile.ParseError.#ctor(System.String)" />
          <element api="M:Goedel.Cryptography.KeyFile.ParseError.#ctor(Goedel.FSR.LexReader,System.Exception)" />
          <element api="M:Goedel.Cryptography.KeyFile.ParseError.#ctor(System.String,System.Exception)" />
        </element>
        <element api="F:Goedel.Cryptography.KeyFile.ParseError.Throw" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Cryptography.KeyFile.ParseError">
      <topicdata name="ParseError" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.KeyFile.ParseError" />
      <apidata name="ParseError" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.ParseError" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Cryptography.KeyFile.ParseError">
      <topicdata name="ParseError" group="list" subgroup="Properties" typeTopicId="T:Goedel.Cryptography.KeyFile.ParseError" />
      <apidata name="ParseError" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.ParseError" />
      </containers>
    </api>
    <api id="Events.T:Goedel.Cryptography.KeyFile.ParseError">
      <topicdata name="ParseError" group="list" subgroup="Events" typeTopicId="T:Goedel.Cryptography.KeyFile.ParseError" />
      <apidata name="ParseError" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.ParseError" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Cryptography.KeyFile.ParseError">
      <topicdata name="ParseError" group="list" subgroup="Fields" typeTopicId="T:Goedel.Cryptography.KeyFile.ParseError" />
      <apidata name="ParseError" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileException.UserData" />
        <element api="F:Goedel.Cryptography.KeyFile.ParseError.Throw" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.ParseError" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.KeyFile.ParseError.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Cryptography.KeyFile.ParseError.#ctor" />
        <element api="M:Goedel.Cryptography.KeyFile.ParseError.#ctor(Goedel.FSR.LexReader)" />
        <element api="M:Goedel.Cryptography.KeyFile.ParseError.#ctor(System.String)" />
        <element api="M:Goedel.Cryptography.KeyFile.ParseError.#ctor(Goedel.FSR.LexReader,System.Exception)" />
        <element api="M:Goedel.Cryptography.KeyFile.ParseError.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.ParseError" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.ParseError.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.KeyFile.ParseError.#ctor" />
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.ParseError" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.ParseError.#ctor(Goedel.FSR.LexReader)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.KeyFile.ParseError.#ctor" />
      <parameters>
        <parameter name="Object">
          <type api="T:Goedel.FSR.LexReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.ParseError" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.ParseError.#ctor(Goedel.FSR.LexReader,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.KeyFile.ParseError.#ctor" />
      <parameters>
        <parameter name="Object">
          <type api="T:Goedel.FSR.LexReader" ref="true" />
        </parameter>
        <parameter name="Inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.ParseError" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.ParseError.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.KeyFile.ParseError.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.ParseError" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.ParseError.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.KeyFile.ParseError.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.ParseError" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.ParseError.Throw">
      <topicdata group="api" />
      <apidata name="Throw" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Utilities.ThrowDelegate" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.ParseError" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable">
      <topicdata group="api" />
      <apidata name="PrivateKeyNotAvailable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileException.UserData" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable.#ctor">
          <element api="M:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable.#ctor" />
          <element api="M:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable.#ctor(System.String)" />
          <element api="M:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable.#ctor(System.String,System.Exception)" />
        </element>
        <element api="F:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable.Throw" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable">
      <topicdata name="PrivateKeyNotAvailable" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable" />
      <apidata name="PrivateKeyNotAvailable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable">
      <topicdata name="PrivateKeyNotAvailable" group="list" subgroup="Properties" typeTopicId="T:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable" />
      <apidata name="PrivateKeyNotAvailable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable" />
      </containers>
    </api>
    <api id="Events.T:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable">
      <topicdata name="PrivateKeyNotAvailable" group="list" subgroup="Events" typeTopicId="T:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable" />
      <apidata name="PrivateKeyNotAvailable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable">
      <topicdata name="PrivateKeyNotAvailable" group="list" subgroup="Fields" typeTopicId="T:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable" />
      <apidata name="PrivateKeyNotAvailable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileException.UserData" />
        <element api="F:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable.Throw" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable.#ctor" />
        <element api="M:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable.#ctor(System.String)" />
        <element api="M:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable.#ctor" />
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable.Throw">
      <topicdata group="api" />
      <apidata name="Throw" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Utilities.ThrowDelegate" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.PrivateKeyNotAvailable" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.KeyFile.SSH_DSS">
      <topicdata group="api" />
      <apidata name="SSH_DSS" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Cryptography.KeyFile.SSHData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.SSH_DSS.#ctor(Goedel.Cryptography.KeyFile.DataBuffer)" />
        <element api="M:Goedel.Cryptography.KeyFile.SSH_DSS.Encode" />
        <element api="F:Goedel.Cryptography.KeyFile.SSH_DSS.G" />
        <element api="F:Goedel.Cryptography.KeyFile.SSH_DSS.P" />
        <element api="F:Goedel.Cryptography.KeyFile.SSH_DSS.Q" />
        <element api="P:Goedel.Cryptography.KeyFile.SSH_DSS.Tag" />
        <element api="P:Goedel.Cryptography.KeyFile.SSH_DSS.TagID" />
        <element api="F:Goedel.Cryptography.KeyFile.SSH_DSS.Y" />
        <element api="P:Goedel.Cryptography.KeyFile.SSHData.KeyPair" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Cryptography.KeyFile.SSH_DSS">
      <topicdata name="SSH_DSS" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.KeyFile.SSH_DSS" />
      <apidata name="SSH_DSS" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.SSH_DSS.Encode" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.SSH_DSS" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Cryptography.KeyFile.SSH_DSS">
      <topicdata name="SSH_DSS" group="list" subgroup="Properties" typeTopicId="T:Goedel.Cryptography.KeyFile.SSH_DSS" />
      <apidata name="SSH_DSS" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Goedel.Cryptography.KeyFile.SSH_DSS.Tag" />
        <element api="P:Goedel.Cryptography.KeyFile.SSH_DSS.TagID" />
        <element api="P:Goedel.Cryptography.KeyFile.SSHData.KeyPair" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.SSH_DSS" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Cryptography.KeyFile.SSH_DSS">
      <topicdata name="SSH_DSS" group="list" subgroup="Fields" typeTopicId="T:Goedel.Cryptography.KeyFile.SSH_DSS" />
      <apidata name="SSH_DSS" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Cryptography.KeyFile.SSH_DSS.G" />
        <element api="F:Goedel.Cryptography.KeyFile.SSH_DSS.P" />
        <element api="F:Goedel.Cryptography.KeyFile.SSH_DSS.Q" />
        <element api="F:Goedel.Cryptography.KeyFile.SSH_DSS.Y" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.SSH_DSS" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.SSH_DSS.#ctor(Goedel.Cryptography.KeyFile.DataBuffer)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="DataBuffer">
          <type api="T:Goedel.Cryptography.KeyFile.DataBuffer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.SSH_DSS" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.SSH_DSS.Encode">
      <topicdata group="api" />
      <apidata name="Encode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Cryptography.KeyFile.SSHData.Encode">
          <type api="T:Goedel.Cryptography.KeyFile.SSHData" ref="true" />
        </member>
      </overrides>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.SSH_DSS" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.SSH_DSS.G">
      <topicdata group="api" />
      <apidata name="G" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.SSH_DSS" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.SSH_DSS.P">
      <topicdata group="api" />
      <apidata name="P" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.SSH_DSS" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.SSH_DSS.Q">
      <topicdata group="api" />
      <apidata name="Q" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.SSH_DSS" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.KeyFile.SSH_DSS.Tag">
      <topicdata group="api" />
      <apidata name="Tag" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.KeyFile.SSHData.Tag">
          <type api="T:Goedel.Cryptography.KeyFile.SSHData" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Tag" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.SSH_DSS" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.KeyFile.SSH_DSS.TagID">
      <topicdata group="api" />
      <apidata name="TagID" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TagID" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.SSH_DSS" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.SSH_DSS.Y">
      <topicdata group="api" />
      <apidata name="Y" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.SSH_DSS" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.KeyFile.SSH_RSA">
      <topicdata group="api" />
      <apidata name="SSH_RSA" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Cryptography.KeyFile.SSHData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.KeyFile.SSH_RSA.#ctor">
          <element api="M:Goedel.Cryptography.KeyFile.SSH_RSA.#ctor(System.Byte[])" />
          <element api="M:Goedel.Cryptography.KeyFile.SSH_RSA.#ctor(Goedel.Cryptography.KeyFile.DataBuffer)" />
          <element api="M:Goedel.Cryptography.KeyFile.SSH_RSA.#ctor(Goedel.Cryptography.Framework.RSAKeyPair)" />
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.SSH_RSA.Encode" />
        <element api="F:Goedel.Cryptography.KeyFile.SSH_RSA.Exponent" />
        <element api="P:Goedel.Cryptography.KeyFile.SSH_RSA.KeyPair" />
        <element api="F:Goedel.Cryptography.KeyFile.SSH_RSA.Modulus" />
        <element api="P:Goedel.Cryptography.KeyFile.SSH_RSA.RSAPublicKey" />
        <element api="P:Goedel.Cryptography.KeyFile.SSH_RSA.Tag" />
        <element api="P:Goedel.Cryptography.KeyFile.SSH_RSA.TagID" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Cryptography.KeyFile.SSH_RSA">
      <topicdata name="SSH_RSA" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.KeyFile.SSH_RSA" />
      <apidata name="SSH_RSA" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.SSH_RSA.Encode" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.SSH_RSA" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Cryptography.KeyFile.SSH_RSA">
      <topicdata name="SSH_RSA" group="list" subgroup="Properties" typeTopicId="T:Goedel.Cryptography.KeyFile.SSH_RSA" />
      <apidata name="SSH_RSA" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Goedel.Cryptography.KeyFile.SSH_RSA.KeyPair" />
        <element api="P:Goedel.Cryptography.KeyFile.SSH_RSA.RSAPublicKey" />
        <element api="P:Goedel.Cryptography.KeyFile.SSH_RSA.Tag" />
        <element api="P:Goedel.Cryptography.KeyFile.SSH_RSA.TagID" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.SSH_RSA" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Cryptography.KeyFile.SSH_RSA">
      <topicdata name="SSH_RSA" group="list" subgroup="Fields" typeTopicId="T:Goedel.Cryptography.KeyFile.SSH_RSA" />
      <apidata name="SSH_RSA" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Cryptography.KeyFile.SSH_RSA.Exponent" />
        <element api="F:Goedel.Cryptography.KeyFile.SSH_RSA.Modulus" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.SSH_RSA" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.KeyFile.SSH_RSA.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Cryptography.KeyFile.SSH_RSA.#ctor(System.Byte[])" />
        <element api="M:Goedel.Cryptography.KeyFile.SSH_RSA.#ctor(Goedel.Cryptography.KeyFile.DataBuffer)" />
        <element api="M:Goedel.Cryptography.KeyFile.SSH_RSA.#ctor(Goedel.Cryptography.Framework.RSAKeyPair)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.SSH_RSA" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.SSH_RSA.#ctor(Goedel.Cryptography.Framework.RSAKeyPair)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.KeyFile.SSH_RSA.#ctor" />
      <parameters>
        <parameter name="RSAKeyPair">
          <type api="T:Goedel.Cryptography.Framework.RSAKeyPair" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.SSH_RSA" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.SSH_RSA.#ctor(Goedel.Cryptography.KeyFile.DataBuffer)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.KeyFile.SSH_RSA.#ctor" />
      <parameters>
        <parameter name="DataBuffer">
          <type api="T:Goedel.Cryptography.KeyFile.DataBuffer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.SSH_RSA" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.SSH_RSA.#ctor(System.Byte[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.KeyFile.SSH_RSA.#ctor" />
      <parameters>
        <parameter name="Data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.SSH_RSA" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.SSH_RSA.Encode">
      <topicdata group="api" />
      <apidata name="Encode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Cryptography.KeyFile.SSHData.Encode">
          <type api="T:Goedel.Cryptography.KeyFile.SSHData" ref="true" />
        </member>
      </overrides>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.SSH_RSA" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.SSH_RSA.Exponent">
      <topicdata group="api" />
      <apidata name="Exponent" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.SSH_RSA" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.KeyFile.SSH_RSA.KeyPair">
      <topicdata group="api" />
      <apidata name="KeyPair" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.KeyFile.SSHData.KeyPair">
          <type api="T:Goedel.Cryptography.KeyFile.SSHData" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_KeyPair" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.SSH_RSA" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.SSH_RSA.Modulus">
      <topicdata group="api" />
      <apidata name="Modulus" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.SSH_RSA" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.KeyFile.SSH_RSA.RSAPublicKey">
      <topicdata group="api" />
      <apidata name="RSAPublicKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RSAPublicKey" />
      <returns>
        <type api="T:Goedel.Cryptography.PKIX.PKIXPublicKeyRSA" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.SSH_RSA" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.KeyFile.SSH_RSA.Tag">
      <topicdata group="api" />
      <apidata name="Tag" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Goedel.Cryptography.KeyFile.SSHData.Tag">
          <type api="T:Goedel.Cryptography.KeyFile.SSHData" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Tag" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.SSH_RSA" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.KeyFile.SSH_RSA.TagID">
      <topicdata group="api" />
      <apidata name="TagID" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TagID" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.SSH_RSA" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.KeyFile.SSHData">
      <topicdata group="api" />
      <apidata name="SSHData" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Goedel.Cryptography.KeyFile.SSH_RSA" ref="true" />
          <type api="T:Goedel.Cryptography.KeyFile.SSH_DSS" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.SSHData.#ctor" />
        <element api="M:Goedel.Cryptography.KeyFile.SSHData.Decode(System.Byte[])" />
        <element api="M:Goedel.Cryptography.KeyFile.SSHData.Encode" />
        <element api="P:Goedel.Cryptography.KeyFile.SSHData.KeyPair" />
        <element api="P:Goedel.Cryptography.KeyFile.SSHData.Tag" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Cryptography.KeyFile.SSHData">
      <topicdata name="SSHData" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.KeyFile.SSHData" />
      <apidata name="SSHData" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.SSHData.Decode(System.Byte[])" />
        <element api="M:Goedel.Cryptography.KeyFile.SSHData.Encode" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.SSHData" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Cryptography.KeyFile.SSHData">
      <topicdata name="SSHData" group="list" subgroup="Properties" typeTopicId="T:Goedel.Cryptography.KeyFile.SSHData" />
      <apidata name="SSHData" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Goedel.Cryptography.KeyFile.SSHData.KeyPair" />
        <element api="P:Goedel.Cryptography.KeyFile.SSHData.Tag" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.SSHData" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.SSHData.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.SSHData" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.SSHData.Decode(System.Byte[])">
      <topicdata group="api" />
      <apidata name="Decode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Cryptography.KeyFile.SSHData" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.SSHData" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.SSHData.Encode">
      <topicdata group="api" />
      <apidata name="Encode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.SSHData" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.KeyFile.SSHData.KeyPair">
      <topicdata group="api" />
      <apidata name="KeyPair" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_KeyPair" />
      <returns>
        <type api="T:Goedel.Cryptography.KeyPair" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.SSHData" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Cryptography.KeyFile.SSHData.Tag">
      <topicdata group="api" />
      <apidata name="Tag" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Tag" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.SSHData" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.KeyFile.TaggedData">
      <topicdata group="api" />
      <apidata name="TaggedData" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Cryptography.KeyFile.TaggedData.#ctor" />
        <element api="F:Goedel.Cryptography.KeyFile.TaggedData.Count" />
        <element api="F:Goedel.Cryptography.KeyFile.TaggedData.Data" />
        <element api="F:Goedel.Cryptography.KeyFile.TaggedData.Headers" />
        <element api="F:Goedel.Cryptography.KeyFile.TaggedData.Strict" />
        <element api="F:Goedel.Cryptography.KeyFile.TaggedData.Tag" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Cryptography.KeyFile.TaggedData">
      <topicdata name="TaggedData" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.KeyFile.TaggedData" />
      <apidata name="TaggedData" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.TaggedData" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Cryptography.KeyFile.TaggedData">
      <topicdata name="TaggedData" group="list" subgroup="Fields" typeTopicId="T:Goedel.Cryptography.KeyFile.TaggedData" />
      <apidata name="TaggedData" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Cryptography.KeyFile.TaggedData.Count" />
        <element api="F:Goedel.Cryptography.KeyFile.TaggedData.Data" />
        <element api="F:Goedel.Cryptography.KeyFile.TaggedData.Headers" />
        <element api="F:Goedel.Cryptography.KeyFile.TaggedData.Strict" />
        <element api="F:Goedel.Cryptography.KeyFile.TaggedData.Tag" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.TaggedData" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.TaggedData.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.TaggedData" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.TaggedData.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.TaggedData" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.TaggedData.Data">
      <topicdata group="api" />
      <apidata name="Data" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.TaggedData" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.TaggedData.Headers">
      <topicdata group="api" />
      <apidata name="Headers" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Goedel.Cryptography.KeyFile.Header" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.TaggedData" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.TaggedData.Strict">
      <topicdata group="api" />
      <apidata name="Strict" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.TaggedData" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.TaggedData.Tag">
      <topicdata group="api" />
      <apidata name="Tag" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.TaggedData" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Cryptography.KeyFile.UnexpectedEnd">
      <topicdata group="api" />
      <apidata name="UnexpectedEnd" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Cryptography.KeyFile.KeyFileException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileException.UserData" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Cryptography.KeyFile.UnexpectedEnd.#ctor">
          <element api="M:Goedel.Cryptography.KeyFile.UnexpectedEnd.#ctor" />
          <element api="M:Goedel.Cryptography.KeyFile.UnexpectedEnd.#ctor(System.String)" />
          <element api="M:Goedel.Cryptography.KeyFile.UnexpectedEnd.#ctor(System.String,System.Exception)" />
        </element>
        <element api="F:Goedel.Cryptography.KeyFile.UnexpectedEnd.Throw" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Cryptography.KeyFile.UnexpectedEnd">
      <topicdata name="UnexpectedEnd" group="list" subgroup="Methods" typeTopicId="T:Goedel.Cryptography.KeyFile.UnexpectedEnd" />
      <apidata name="UnexpectedEnd" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.UnexpectedEnd" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Cryptography.KeyFile.UnexpectedEnd">
      <topicdata name="UnexpectedEnd" group="list" subgroup="Properties" typeTopicId="T:Goedel.Cryptography.KeyFile.UnexpectedEnd" />
      <apidata name="UnexpectedEnd" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.UnexpectedEnd" />
      </containers>
    </api>
    <api id="Events.T:Goedel.Cryptography.KeyFile.UnexpectedEnd">
      <topicdata name="UnexpectedEnd" group="list" subgroup="Events" typeTopicId="T:Goedel.Cryptography.KeyFile.UnexpectedEnd" />
      <apidata name="UnexpectedEnd" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.UnexpectedEnd" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Cryptography.KeyFile.UnexpectedEnd">
      <topicdata name="UnexpectedEnd" group="list" subgroup="Fields" typeTopicId="T:Goedel.Cryptography.KeyFile.UnexpectedEnd" />
      <apidata name="UnexpectedEnd" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Cryptography.KeyFile.KeyFileException.UserData" />
        <element api="F:Goedel.Cryptography.KeyFile.UnexpectedEnd.Throw" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.UnexpectedEnd" />
      </containers>
    </api>
    <api id="Overload:Goedel.Cryptography.KeyFile.UnexpectedEnd.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Cryptography.KeyFile.UnexpectedEnd.#ctor" />
        <element api="M:Goedel.Cryptography.KeyFile.UnexpectedEnd.#ctor(System.String)" />
        <element api="M:Goedel.Cryptography.KeyFile.UnexpectedEnd.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.UnexpectedEnd" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.UnexpectedEnd.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.KeyFile.UnexpectedEnd.#ctor" />
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.UnexpectedEnd" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.UnexpectedEnd.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.KeyFile.UnexpectedEnd.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.UnexpectedEnd" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Cryptography.KeyFile.UnexpectedEnd.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Cryptography.KeyFile.UnexpectedEnd.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.UnexpectedEnd" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Cryptography.KeyFile.UnexpectedEnd.Throw">
      <topicdata group="api" />
      <apidata name="Throw" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Utilities.ThrowDelegate" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Cryptography.KeyFile" module="Goedel.Cryptography.KeyFile" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Cryptography.KeyFile" />
        <type api="T:Goedel.Cryptography.KeyFile.UnexpectedEnd" ref="true" />
      </containers>
    </api>
    <api id="N:Goedel.IO">
      <topicdata group="api" />
      <apidata name="Goedel.IO" group="namespace" />
      <elements>
        <element api="T:Goedel.IO.Debug" />
        <element api="T:Goedel.IO.DirectoryTools" />
        <element api="T:Goedel.IO.Extension" />
      </elements>
    </api>
    <api id="T:Goedel.IO.Debug">
      <topicdata group="api" />
      <apidata name="Debug" group="type" subgroup="class" />
      <sourceContext file="Libraries/Goedel.IO/Debug.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.IO.Debug.#ctor" />
        <element api="M:Goedel.IO.Debug.Initialize" />
        <element api="M:Goedel.IO.Debug.Write(System.String,System.Object[])" />
        <element api="M:Goedel.IO.Debug.WriteLine(System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
        </library>
        <namespace api="N:Goedel.IO" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.IO.Debug">
      <topicdata name="Debug" group="list" subgroup="Methods" typeTopicId="T:Goedel.IO.Debug" />
      <apidata name="Debug" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.IO.Debug.Initialize" />
        <element api="M:Goedel.IO.Debug.Write(System.String,System.Object[])" />
        <element api="M:Goedel.IO.Debug.WriteLine(System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
        </library>
        <namespace api="N:Goedel.IO" />
        <type api="T:Goedel.IO.Debug" />
      </containers>
    </api>
    <api id="M:Goedel.IO.Debug.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Libraries/Goedel.IO/Debug.cs" />
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.IO" />
        <type api="T:Goedel.IO.Debug" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.IO.Debug.Initialize">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.IO/Debug.cs" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.IO" />
        <type api="T:Goedel.IO.Debug" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.IO.Debug.Write(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.IO/Debug.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Arg" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.IO" />
        <type api="T:Goedel.IO.Debug" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.IO.Debug.WriteLine(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.IO/Debug.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Arg" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.IO" />
        <type api="T:Goedel.IO.Debug" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.IO.DirectoryTools">
      <topicdata group="api" />
      <apidata name="DirectoryTools" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.IO.DirectoryTools.#ctor" />
        <element api="M:Goedel.IO.DirectoryTools.DirectoryDelete(System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
        </library>
        <namespace api="N:Goedel.IO" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.IO.DirectoryTools">
      <topicdata name="DirectoryTools" group="list" subgroup="Methods" typeTopicId="T:Goedel.IO.DirectoryTools" />
      <apidata name="DirectoryTools" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.IO.DirectoryTools.DirectoryDelete(System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
        </library>
        <namespace api="N:Goedel.IO" />
        <type api="T:Goedel.IO.DirectoryTools" />
      </containers>
    </api>
    <api id="M:Goedel.IO.DirectoryTools.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.IO" />
        <type api="T:Goedel.IO.DirectoryTools" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.IO.DirectoryTools.DirectoryDelete(System.String)">
      <topicdata group="api" />
      <apidata name="DirectoryDelete" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.IO" />
        <type api="T:Goedel.IO.DirectoryTools" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.IO.Extension">
      <topicdata group="api" />
      <apidata name="Extension" group="type" subgroup="class" />
      <sourceContext file="Libraries/Goedel.IO/Extension.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Goedel.IO.Extension.OpenFileAppend(System.String)" />
        <element api="M:Goedel.IO.Extension.OpenFileAppendShare(System.String)" />
        <element api="M:Goedel.IO.Extension.OpenFileNew(System.String)" />
        <element api="M:Goedel.IO.Extension.OpenFileRead(System.String)" />
        <element api="M:Goedel.IO.Extension.OpenFileReadShared(System.String)" />
        <element api="M:Goedel.IO.Extension.OpenFileWrite(System.String)" />
        <element api="M:Goedel.IO.Extension.OpenFileWriteShare(System.String)" />
        <element api="Overload:Goedel.IO.Extension.OpenReadToEnd">
          <element api="M:Goedel.IO.Extension.OpenReadToEnd(System.String)" />
          <element api="M:Goedel.IO.Extension.OpenReadToEnd(System.String,System.Byte[]@)" />
        </element>
        <element api="Overload:Goedel.IO.Extension.OpenTextReader">
          <element api="M:Goedel.IO.Extension.OpenTextReader(System.IO.FileStream)" />
          <element api="M:Goedel.IO.Extension.OpenTextReader(System.String)" />
        </element>
        <element api="Overload:Goedel.IO.Extension.OpenTextWriter">
          <element api="M:Goedel.IO.Extension.OpenTextWriter(System.IO.FileStream)" />
          <element api="M:Goedel.IO.Extension.OpenTextWriter(System.String)" />
        </element>
        <element api="M:Goedel.IO.Extension.OpenTextWriterNew(System.String)" />
        <element api="M:Goedel.IO.Extension.Write(System.IO.FileStream,System.Byte[])" />
        <element api="Overload:Goedel.IO.Extension.WriteFileNew">
          <element api="M:Goedel.IO.Extension.WriteFileNew(System.String,System.Byte[])" />
          <element api="M:Goedel.IO.Extension.WriteFileNew(System.String,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
        </library>
        <namespace api="N:Goedel.IO" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Goedel.IO.Extension">
      <topicdata name="Extension" group="list" subgroup="Methods" typeTopicId="T:Goedel.IO.Extension" />
      <apidata name="Extension" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Goedel.IO.Extension.OpenFileAppend(System.String)" />
        <element api="M:Goedel.IO.Extension.OpenFileAppendShare(System.String)" />
        <element api="M:Goedel.IO.Extension.OpenFileNew(System.String)" />
        <element api="M:Goedel.IO.Extension.OpenFileRead(System.String)" />
        <element api="M:Goedel.IO.Extension.OpenFileReadShared(System.String)" />
        <element api="M:Goedel.IO.Extension.OpenFileWrite(System.String)" />
        <element api="M:Goedel.IO.Extension.OpenFileWriteShare(System.String)" />
        <element api="Overload:Goedel.IO.Extension.OpenReadToEnd">
          <element api="M:Goedel.IO.Extension.OpenReadToEnd(System.String)" />
          <element api="M:Goedel.IO.Extension.OpenReadToEnd(System.String,System.Byte[]@)" />
        </element>
        <element api="Overload:Goedel.IO.Extension.OpenTextReader">
          <element api="M:Goedel.IO.Extension.OpenTextReader(System.IO.FileStream)" />
          <element api="M:Goedel.IO.Extension.OpenTextReader(System.String)" />
        </element>
        <element api="Overload:Goedel.IO.Extension.OpenTextWriter">
          <element api="M:Goedel.IO.Extension.OpenTextWriter(System.IO.FileStream)" />
          <element api="M:Goedel.IO.Extension.OpenTextWriter(System.String)" />
        </element>
        <element api="M:Goedel.IO.Extension.OpenTextWriterNew(System.String)" />
        <element api="M:Goedel.IO.Extension.Write(System.IO.FileStream,System.Byte[])" />
        <element api="Overload:Goedel.IO.Extension.WriteFileNew">
          <element api="M:Goedel.IO.Extension.WriteFileNew(System.String,System.Byte[])" />
          <element api="M:Goedel.IO.Extension.WriteFileNew(System.String,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
        </library>
        <namespace api="N:Goedel.IO" />
        <type api="T:Goedel.IO.Extension" />
      </containers>
    </api>
    <api id="Overload:Goedel.IO.Extension.OpenReadToEnd">
      <topicdata name="OpenReadToEnd" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="OpenReadToEnd" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.IO.Extension.OpenReadToEnd(System.String)" />
        <element api="M:Goedel.IO.Extension.OpenReadToEnd(System.String,System.Byte[]@)" />
      </elements>
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
        </library>
        <namespace api="N:Goedel.IO" />
        <type api="T:Goedel.IO.Extension" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.IO.Extension.OpenTextReader">
      <topicdata name="OpenTextReader" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="OpenTextReader" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.IO.Extension.OpenTextReader(System.IO.FileStream)" />
        <element api="M:Goedel.IO.Extension.OpenTextReader(System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
        </library>
        <namespace api="N:Goedel.IO" />
        <type api="T:Goedel.IO.Extension" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.IO.Extension.OpenTextWriter">
      <topicdata name="OpenTextWriter" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="OpenTextWriter" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.IO.Extension.OpenTextWriter(System.IO.FileStream)" />
        <element api="M:Goedel.IO.Extension.OpenTextWriter(System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
        </library>
        <namespace api="N:Goedel.IO" />
        <type api="T:Goedel.IO.Extension" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.IO.Extension.WriteFileNew">
      <topicdata name="WriteFileNew" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="WriteFileNew" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.IO.Extension.WriteFileNew(System.String,System.Byte[])" />
        <element api="M:Goedel.IO.Extension.WriteFileNew(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
        </library>
        <namespace api="N:Goedel.IO" />
        <type api="T:Goedel.IO.Extension" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.IO.Extension.OpenFileAppend(System.String)">
      <topicdata group="api" />
      <apidata name="OpenFileAppend" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.IO/Extension.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Filename">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.FileStream" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.IO" />
        <type api="T:Goedel.IO.Extension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.IO.Extension.OpenFileAppendShare(System.String)">
      <topicdata group="api" />
      <apidata name="OpenFileAppendShare" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.IO/Extension.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Filename">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.FileStream" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.IO" />
        <type api="T:Goedel.IO.Extension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.IO.Extension.OpenFileNew(System.String)">
      <topicdata group="api" />
      <apidata name="OpenFileNew" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.IO/Extension.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Filename">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.FileStream" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.IO" />
        <type api="T:Goedel.IO.Extension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.IO.Extension.OpenFileRead(System.String)">
      <topicdata group="api" />
      <apidata name="OpenFileRead" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.IO/Extension.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Filename">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.FileStream" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.IO" />
        <type api="T:Goedel.IO.Extension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.IO.Extension.OpenFileReadShared(System.String)">
      <topicdata group="api" />
      <apidata name="OpenFileReadShared" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.IO/Extension.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Filename">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.FileStream" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.IO" />
        <type api="T:Goedel.IO.Extension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.IO.Extension.OpenFileWrite(System.String)">
      <topicdata group="api" />
      <apidata name="OpenFileWrite" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.IO/Extension.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Filename">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.FileStream" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.IO" />
        <type api="T:Goedel.IO.Extension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.IO.Extension.OpenFileWriteShare(System.String)">
      <topicdata group="api" />
      <apidata name="OpenFileWriteShare" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.IO/Extension.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Filename">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.FileStream" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.IO" />
        <type api="T:Goedel.IO.Extension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.IO.Extension.OpenReadToEnd(System.String)">
      <topicdata group="api" />
      <apidata name="OpenReadToEnd" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Goedel.IO.Extension.OpenReadToEnd" />
      <sourceContext file="Libraries/Goedel.IO/Extension.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Filename">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.IO" />
        <type api="T:Goedel.IO.Extension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.IO.Extension.OpenReadToEnd(System.String,System.Byte[]@)">
      <topicdata group="api" />
      <apidata name="OpenReadToEnd" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Goedel.IO.Extension.OpenReadToEnd" />
      <sourceContext file="Libraries/Goedel.IO/Extension.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Filename">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Data" out="true">
          <referenceTo>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.IO" />
        <type api="T:Goedel.IO.Extension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.IO.Extension.OpenTextReader(System.IO.FileStream)">
      <topicdata group="api" />
      <apidata name="OpenTextReader" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Goedel.IO.Extension.OpenTextReader" />
      <sourceContext file="Libraries/Goedel.IO/Extension.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="FileStream">
          <type api="T:System.IO.FileStream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.TextReader" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.IO" />
        <type api="T:Goedel.IO.Extension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.IO.Extension.OpenTextReader(System.String)">
      <topicdata group="api" />
      <apidata name="OpenTextReader" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Goedel.IO.Extension.OpenTextReader" />
      <sourceContext file="Libraries/Goedel.IO/Extension.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Filename">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.TextReader" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.IO" />
        <type api="T:Goedel.IO.Extension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.IO.Extension.OpenTextWriter(System.IO.FileStream)">
      <topicdata group="api" />
      <apidata name="OpenTextWriter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Goedel.IO.Extension.OpenTextWriter" />
      <sourceContext file="Libraries/Goedel.IO/Extension.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="FileStream">
          <type api="T:System.IO.FileStream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.TextWriter" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.IO" />
        <type api="T:Goedel.IO.Extension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.IO.Extension.OpenTextWriter(System.String)">
      <topicdata group="api" />
      <apidata name="OpenTextWriter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Goedel.IO.Extension.OpenTextWriter" />
      <sourceContext file="Libraries/Goedel.IO/Extension.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Filename">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.TextWriter" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.IO" />
        <type api="T:Goedel.IO.Extension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.IO.Extension.OpenTextWriterNew(System.String)">
      <topicdata group="api" />
      <apidata name="OpenTextWriterNew" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.IO/Extension.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Filename">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.TextWriter" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.IO" />
        <type api="T:Goedel.IO.Extension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.IO.Extension.Write(System.IO.FileStream,System.Byte[])">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.IO/Extension.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="FileStream">
          <type api="T:System.IO.FileStream" ref="true" />
        </parameter>
        <parameter name="Data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.IO" />
        <type api="T:Goedel.IO.Extension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.IO.Extension.WriteFileNew(System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="WriteFileNew" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Goedel.IO.Extension.WriteFileNew" />
      <sourceContext file="Libraries/Goedel.IO/Extension.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Filename">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.IO" />
        <type api="T:Goedel.IO.Extension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.IO.Extension.WriteFileNew(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteFileNew" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Goedel.IO.Extension.WriteFileNew" />
      <sourceContext file="Libraries/Goedel.IO/Extension.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Filename">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.IO" module="Goedel.IO" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40469" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.IO" />
        <type api="T:Goedel.IO.Extension" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="N:Goedel.Platform">
      <topicdata group="api" />
      <apidata name="Goedel.Platform" group="namespace" />
      <elements>
        <element api="T:Goedel.Platform.PlatformFramework" />
      </elements>
    </api>
    <api id="T:Goedel.Platform.PlatformFramework">
      <topicdata group="api" />
      <apidata name="PlatformFramework" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Goedel.Platform.PlatformFramework.GetRandomBytes(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Goedel.Platform.PlatformFramework.Initialize(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Platform" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Platform.PlatformFramework">
      <topicdata name="PlatformFramework" group="list" subgroup="Methods" typeTopicId="T:Goedel.Platform.PlatformFramework" />
      <apidata name="PlatformFramework" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Goedel.Platform.PlatformFramework.GetRandomBytes(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Goedel.Platform.PlatformFramework.Initialize(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Platform" />
        <type api="T:Goedel.Platform.PlatformFramework" />
      </containers>
    </api>
    <api id="M:Goedel.Platform.PlatformFramework.GetRandomBytes(System.Byte[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="GetRandomBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="Offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="Count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Platform" />
        <type api="T:Goedel.Platform.PlatformFramework" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Platform.PlatformFramework.Initialize(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="TestMode" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Platform" />
        <type api="T:Goedel.Platform.PlatformFramework" ref="true" />
      </containers>
    </api>
    <api id="N:Goedel.Platform.Framework">
      <topicdata group="api" />
      <apidata name="Goedel.Platform.Framework" group="namespace" />
      <elements>
        <element api="T:Goedel.Platform.Framework.ClientUDP" />
        <element api="T:Goedel.Platform.Framework.DNSClientUDP" />
        <element api="T:Goedel.Platform.Framework.DNSContextUDP" />
      </elements>
    </api>
    <api id="T:Goedel.Platform.Framework.ClientUDP">
      <topicdata group="api" />
      <apidata name="ClientUDP" group="type" subgroup="class" />
      <sourceContext file="Libraries/Goedel.Platform.Framework/ClientUDP.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Platform.Framework.ClientUDP.#ctor(System.Net.IPAddress,System.Int32,System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Platform.Framework" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Platform.Framework.ClientUDP">
      <topicdata name="ClientUDP" group="list" subgroup="Methods" typeTopicId="T:Goedel.Platform.Framework.ClientUDP" />
      <apidata name="ClientUDP" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Platform.Framework" />
        <type api="T:Goedel.Platform.Framework.ClientUDP" />
      </containers>
    </api>
    <api id="M:Goedel.Platform.Framework.ClientUDP.#ctor(System.Net.IPAddress,System.Int32,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Libraries/Goedel.Platform.Framework/ClientUDP.cs" />
      <parameters>
        <parameter name="Address">
          <type api="T:System.Net.IPAddress" ref="true" />
        </parameter>
        <parameter name="Port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="TimeOut" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
        <parameter name="MaxRead" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Platform.Framework" />
        <type api="T:Goedel.Platform.Framework.ClientUDP" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Platform.Framework.DNSClientUDP">
      <topicdata group="api" />
      <apidata name="DNSClientUDP" group="type" subgroup="class" />
      <sourceContext file="Libraries/Goedel.Platform.Framework/DNSClientUDP.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Platform.DNSClient" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Platform.Framework.DNSClientUDP.#ctor">
          <element api="M:Goedel.Platform.Framework.DNSClientUDP.#ctor" />
          <element api="M:Goedel.Platform.Framework.DNSClientUDP.#ctor(System.Collections.Generic.List{System.Net.IPAddress})" />
          <element api="M:Goedel.Platform.Framework.DNSClientUDP.#ctor(System.Net.IPAddress)" />
          <element api="M:Goedel.Platform.Framework.DNSClientUDP.#ctor(System.String)" />
          <element api="M:Goedel.Platform.Framework.DNSClientUDP.#ctor(System.Net.IPAddress,System.UInt16)" />
        </element>
        <element api="M:Goedel.Platform.Framework.DNSClientUDP.GetContext" />
        <element api="M:Goedel.Platform.Framework.DNSClientUDP.GetHostDNS" />
        <element api="F:Goedel.Platform.Framework.DNSClientUDP.ListIPAddress" />
        <element api="F:Goedel.Platform.Framework.DNSClientUDP.Port" />
      </elements>
      <containers>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Platform.Framework" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Platform.Framework.DNSClientUDP">
      <topicdata name="DNSClientUDP" group="list" subgroup="Methods" typeTopicId="T:Goedel.Platform.Framework.DNSClientUDP" />
      <apidata name="DNSClientUDP" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Platform.Framework.DNSClientUDP.GetContext" />
        <element api="M:Goedel.Platform.Framework.DNSClientUDP.GetHostDNS" />
      </elements>
      <containers>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Platform.Framework" />
        <type api="T:Goedel.Platform.Framework.DNSClientUDP" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Platform.Framework.DNSClientUDP">
      <topicdata name="DNSClientUDP" group="list" subgroup="Fields" typeTopicId="T:Goedel.Platform.Framework.DNSClientUDP" />
      <apidata name="DNSClientUDP" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Platform.Framework.DNSClientUDP.ListIPAddress" />
        <element api="F:Goedel.Platform.Framework.DNSClientUDP.Port" />
      </elements>
      <containers>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Platform.Framework" />
        <type api="T:Goedel.Platform.Framework.DNSClientUDP" />
      </containers>
    </api>
    <api id="Overload:Goedel.Platform.Framework.DNSClientUDP.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Platform.Framework.DNSClientUDP.#ctor" />
        <element api="M:Goedel.Platform.Framework.DNSClientUDP.#ctor(System.Collections.Generic.List{System.Net.IPAddress})" />
        <element api="M:Goedel.Platform.Framework.DNSClientUDP.#ctor(System.Net.IPAddress)" />
        <element api="M:Goedel.Platform.Framework.DNSClientUDP.#ctor(System.String)" />
        <element api="M:Goedel.Platform.Framework.DNSClientUDP.#ctor(System.Net.IPAddress,System.UInt16)" />
      </elements>
      <containers>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Platform.Framework" />
        <type api="T:Goedel.Platform.Framework.DNSClientUDP" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Platform.Framework.DNSClientUDP.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Platform.Framework.DNSClientUDP.#ctor" />
      <sourceContext file="Libraries/Goedel.Platform.Framework/DNSClientUDP.cs" />
      <containers>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Platform.Framework" />
        <type api="T:Goedel.Platform.Framework.DNSClientUDP" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Platform.Framework.DNSClientUDP.#ctor(System.Collections.Generic.List{System.Net.IPAddress})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Platform.Framework.DNSClientUDP.#ctor" />
      <sourceContext file="Libraries/Goedel.Platform.Framework/DNSClientUDP.cs" />
      <parameters>
        <parameter name="ListIPAddress">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Net.IPAddress" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Platform.Framework" />
        <type api="T:Goedel.Platform.Framework.DNSClientUDP" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Platform.Framework.DNSClientUDP.#ctor(System.Net.IPAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Platform.Framework.DNSClientUDP.#ctor" />
      <sourceContext file="Libraries/Goedel.Platform.Framework/DNSClientUDP.cs" />
      <parameters>
        <parameter name="IPAddress">
          <type api="T:System.Net.IPAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Platform.Framework" />
        <type api="T:Goedel.Platform.Framework.DNSClientUDP" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Platform.Framework.DNSClientUDP.#ctor(System.Net.IPAddress,System.UInt16)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Platform.Framework.DNSClientUDP.#ctor" />
      <sourceContext file="Libraries/Goedel.Platform.Framework/DNSClientUDP.cs" />
      <parameters>
        <parameter name="IPAddress">
          <type api="T:System.Net.IPAddress" ref="true" />
        </parameter>
        <parameter name="Port">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Platform.Framework" />
        <type api="T:Goedel.Platform.Framework.DNSClientUDP" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Platform.Framework.DNSClientUDP.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Platform.Framework.DNSClientUDP.#ctor" />
      <sourceContext file="Libraries/Goedel.Platform.Framework/DNSClientUDP.cs" />
      <parameters>
        <parameter name="Server">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Platform.Framework" />
        <type api="T:Goedel.Platform.Framework.DNSClientUDP" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Platform.Framework.DNSClientUDP.GetContext">
      <topicdata group="api" />
      <apidata name="GetContext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Platform.Framework/DNSClientUDP.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Platform.DNSClient.GetContext">
          <type api="T:Goedel.Platform.DNSClient" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:Goedel.Platform.DNSContext" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Platform.Framework" />
        <type api="T:Goedel.Platform.Framework.DNSClientUDP" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Platform.Framework.DNSClientUDP.GetHostDNS">
      <topicdata group="api" />
      <apidata name="GetHostDNS" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Platform.Framework/DNSClientUDP.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Net.IPAddress" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Platform.Framework" />
        <type api="T:Goedel.Platform.Framework.DNSClientUDP" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Platform.Framework.DNSClientUDP.ListIPAddress">
      <topicdata group="api" />
      <apidata name="ListIPAddress" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Platform.Framework/DNSClientUDP.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Net.IPAddress" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Platform.Framework" />
        <type api="T:Goedel.Platform.Framework.DNSClientUDP" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Platform.Framework.DNSClientUDP.Port">
      <topicdata group="api" />
      <apidata name="Port" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Platform.Framework/DNSClientUDP.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Platform.Framework" />
        <type api="T:Goedel.Platform.Framework.DNSClientUDP" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Platform.Framework.DNSContextUDP">
      <topicdata group="api" />
      <apidata name="DNSContextUDP" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Platform.DNSContext" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Goedel.Platform.DNSContext.DNSClient">
          <apidata name="DNSClient" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:Goedel.Platform.DNSClient" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Platform" module="Goedel.Platform" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Platform" />
            <type api="T:Goedel.Platform.DNSContext" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.Platform.DNSContext.TaskListen">
          <apidata name="TaskListen" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Platform" module="Goedel.Platform" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Platform" />
            <type api="T:Goedel.Platform.DNSContext" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.Platform.DNSContext.Active">
          <apidata name="Active" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Platform" module="Goedel.Platform" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Platform" />
            <type api="T:Goedel.Platform.DNSContext" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Platform.Framework.DNSContextUDP.Dispose">
          <element api="M:Goedel.Platform.DNSContext.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="Goedel.Platform" module="Goedel.Platform" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Platform" />
              <type api="T:Goedel.Platform.DNSContext" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Platform.DNSContext.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="Goedel.Platform" module="Goedel.Platform" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Platform" />
              <type api="T:Goedel.Platform.DNSContext" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:Goedel.Platform.DNSContext.NextAsync">
          <apidata name="NextAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Platform" module="Goedel.Platform" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Platform" />
            <type api="T:Goedel.Platform.DNSContext" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Platform.Framework.DNSContextUDP.QueueRequest">
          <element api="M:Goedel.Platform.DNSContext.QueueRequest(Goedel.Platform.DNSRequest)">
            <apidata name="QueueRequest" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="Request">
                <type api="T:Goedel.Platform.DNSRequest" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="Goedel.Platform" module="Goedel.Platform" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Platform" />
              <type api="T:Goedel.Platform.DNSContext" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Platform.DNSContext.QueueRequest(System.String,Goedel.Platform.DNSTypeCode)">
            <apidata name="QueueRequest" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="Address">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="DNSTypeCode">
                <type api="T:Goedel.Platform.DNSTypeCode" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="Goedel.Platform" module="Goedel.Platform" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Platform" />
              <type api="T:Goedel.Platform.DNSContext" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:Goedel.Platform.DNSContext.QueryServiceAsync(System.Void,Goedel.Platform.ServiceDescription,System.String,System.String)">
          <apidata name="QueryServiceAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="Address">
              <type api="T:System.Void" ref="false" />
            </parameter>
            <parameter name="Service" optional="true">
              <type api="T:Goedel.Platform.ServiceDescription" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
            <parameter name="Port" optional="true">
              <type api="T:System.String" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
            <parameter name="Fallback" optional="true">
              <type api="T:System.String" ref="true" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>2</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Platform" module="Goedel.Platform" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Platform" />
            <type api="T:Goedel.Platform.DNSContext" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Platform.DNSContext.Pending">
          <apidata name="Pending" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Pending" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Platform" module="Goedel.Platform" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Platform" />
            <type api="T:Goedel.Platform.DNSContext" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Platform.Framework.DNSContextUDP.#ctor(System.Collections.Generic.List{System.Net.IPAddress},System.UInt16)" />
        <element api="M:Goedel.Platform.Framework.DNSContextUDP.Close" />
        <element api="M:Goedel.Platform.Framework.DNSContextUDP.GetResponseAsync" />
        <element api="M:Goedel.Platform.Framework.DNSContextUDP.GetResponseRawAsync" />
        <element api="M:Goedel.Platform.Framework.DNSContextUDP.SendRequest(Goedel.Platform.DNSRequest)" />
      </elements>
      <containers>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Platform.Framework" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Platform.Framework.DNSContextUDP">
      <topicdata name="DNSContextUDP" group="list" subgroup="Methods" typeTopicId="T:Goedel.Platform.Framework.DNSContextUDP" />
      <apidata name="DNSContextUDP" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:Goedel.Platform.Framework.DNSContextUDP.Dispose">
          <element api="M:Goedel.Platform.DNSContext.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="Goedel.Platform" module="Goedel.Platform" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Platform" />
              <type api="T:Goedel.Platform.DNSContext" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Platform.DNSContext.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="Goedel.Platform" module="Goedel.Platform" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Platform" />
              <type api="T:Goedel.Platform.DNSContext" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:Goedel.Platform.DNSContext.NextAsync">
          <apidata name="NextAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Platform" module="Goedel.Platform" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Platform" />
            <type api="T:Goedel.Platform.DNSContext" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Platform.Framework.DNSContextUDP.QueueRequest">
          <element api="M:Goedel.Platform.DNSContext.QueueRequest(Goedel.Platform.DNSRequest)">
            <apidata name="QueueRequest" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="Request">
                <type api="T:Goedel.Platform.DNSRequest" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="Goedel.Platform" module="Goedel.Platform" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Platform" />
              <type api="T:Goedel.Platform.DNSContext" ref="true" />
            </containers>
          </element>
          <element api="M:Goedel.Platform.DNSContext.QueueRequest(System.String,Goedel.Platform.DNSTypeCode)">
            <apidata name="QueueRequest" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="Address">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="DNSTypeCode">
                <type api="T:Goedel.Platform.DNSTypeCode" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="Goedel.Platform" module="Goedel.Platform" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Platform" />
              <type api="T:Goedel.Platform.DNSContext" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:Goedel.Platform.DNSContext.QueryServiceAsync(System.Void,Goedel.Platform.ServiceDescription,System.String,System.String)">
          <apidata name="QueryServiceAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="Address">
              <type api="T:System.Void" ref="false" />
            </parameter>
            <parameter name="Service" optional="true">
              <type api="T:Goedel.Platform.ServiceDescription" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
            <parameter name="Port" optional="true">
              <type api="T:System.String" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
            <parameter name="Fallback" optional="true">
              <type api="T:System.String" ref="true" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>2</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Platform" module="Goedel.Platform" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Platform" />
            <type api="T:Goedel.Platform.DNSContext" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Platform.Framework.DNSContextUDP.Close" />
        <element api="M:Goedel.Platform.Framework.DNSContextUDP.GetResponseAsync" />
        <element api="M:Goedel.Platform.Framework.DNSContextUDP.GetResponseRawAsync" />
        <element api="M:Goedel.Platform.Framework.DNSContextUDP.SendRequest(Goedel.Platform.DNSRequest)" />
      </elements>
      <containers>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Platform.Framework" />
        <type api="T:Goedel.Platform.Framework.DNSContextUDP" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Platform.Framework.DNSContextUDP">
      <topicdata name="DNSContextUDP" group="list" subgroup="Properties" typeTopicId="T:Goedel.Platform.Framework.DNSContextUDP" />
      <apidata name="DNSContextUDP" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Goedel.Platform.DNSContext.Pending">
          <apidata name="Pending" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Pending" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Platform" module="Goedel.Platform" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Platform" />
            <type api="T:Goedel.Platform.DNSContext" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Platform.Framework" />
        <type api="T:Goedel.Platform.Framework.DNSContextUDP" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Platform.Framework.DNSContextUDP">
      <topicdata name="DNSContextUDP" group="list" subgroup="Fields" typeTopicId="T:Goedel.Platform.Framework.DNSContextUDP" />
      <apidata name="DNSContextUDP" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Platform.DNSContext.DNSClient">
          <apidata name="DNSClient" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:Goedel.Platform.DNSClient" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Platform" module="Goedel.Platform" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Platform" />
            <type api="T:Goedel.Platform.DNSContext" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.Platform.DNSContext.TaskListen">
          <apidata name="TaskListen" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Platform" module="Goedel.Platform" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Platform" />
            <type api="T:Goedel.Platform.DNSContext" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.Platform.DNSContext.Active">
          <apidata name="Active" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Platform" module="Goedel.Platform" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Platform" />
            <type api="T:Goedel.Platform.DNSContext" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Platform.Framework" />
        <type api="T:Goedel.Platform.Framework.DNSContextUDP" />
      </containers>
    </api>
    <api id="M:Goedel.Platform.Framework.DNSContextUDP.#ctor(System.Collections.Generic.List{System.Net.IPAddress},System.UInt16)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="ListIPAddress">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Net.IPAddress" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="Port">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Platform.Framework" />
        <type api="T:Goedel.Platform.Framework.DNSContextUDP" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Platform.Framework.DNSContextUDP.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Platform.DNSContext.Close">
          <type api="T:Goedel.Platform.DNSContext" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Platform.Framework" />
        <type api="T:Goedel.Platform.Framework.DNSContextUDP" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Platform.Framework.DNSContextUDP.GetResponseAsync">
      <topicdata group="api" />
      <apidata name="GetResponseAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Platform.DNSContext.GetResponseAsync">
          <type api="T:Goedel.Platform.DNSContext" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:Goedel.Platform.DNSResponse" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Platform.Framework" />
        <type api="T:Goedel.Platform.Framework.DNSContextUDP" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Platform.Framework.DNSContextUDP.GetResponseRawAsync">
      <topicdata group="api" />
      <apidata name="GetResponseRawAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Platform.DNSContext.GetResponseRawAsync">
          <type api="T:Goedel.Platform.DNSContext" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Platform.Framework" />
        <type api="T:Goedel.Platform.Framework.DNSContextUDP" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Platform.Framework.DNSContextUDP.SendRequest(Goedel.Platform.DNSRequest)">
      <topicdata group="api" />
      <apidata name="SendRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Platform.DNSContext.SendRequest(Goedel.Platform.DNSRequest)">
          <type api="T:Goedel.Platform.DNSContext" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Request">
          <type api="T:Goedel.Platform.DNSRequest" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Platform.Framework" module="Goedel.Platform.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Platform.Framework" />
        <type api="T:Goedel.Platform.Framework.DNSContextUDP" ref="true" />
      </containers>
    </api>
    <api id="N:Goedel.Protocol.Debug">
      <topicdata group="api" />
      <apidata name="Goedel.Protocol.Debug" group="namespace" />
      <elements>
        <element api="T:Goedel.Protocol.Debug.DebugLocalSession" />
        <element api="T:Goedel.Protocol.Debug.TraceDictionary" />
        <element api="T:Goedel.Protocol.Debug.TracePoint" />
        <element api="T:Goedel.Protocol.Debug.TraceMessage" />
      </elements>
    </api>
    <api id="T:Goedel.Protocol.Debug.DebugLocalSession">
      <topicdata group="api" />
      <apidata name="DebugLocalSession" group="type" subgroup="class" />
      <sourceContext file="Libraries/Goedel.Protocol.Debug/DebugLocalSession.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Protocol.LocalRemoteSession" ref="true" />
          <type api="T:Goedel.Protocol.JPCRemoteSession" ref="true" />
          <type api="T:Goedel.Protocol.JPCSession" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Goedel.Protocol.LocalRemoteSession.Host">
          <apidata name="Host" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:Goedel.Protocol.JPCProvider" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.LocalRemoteSession" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Protocol.JPCRemoteSession.Authenticate(System.String)">
          <apidata name="Authenticate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:Goedel.Protocol.JPCSession.Authenticate(System.String)">
              <type api="T:Goedel.Protocol.JPCSession" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="UDF">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.JPCRemoteSession" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.Protocol.JPCSession.Account">
          <apidata name="Account" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.JPCSession" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.Protocol.JPCSession.UDF">
          <apidata name="UDF" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.JPCSession" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.Protocol.JPCSession.Domain">
          <apidata name="Domain" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.JPCSession" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.Protocol.JPCSession.Authenticated">
          <apidata name="Authenticated" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.JPCSession" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Protocol.Debug.DebugLocalSession.#ctor">
          <element api="M:Goedel.Protocol.Debug.DebugLocalSession.#ctor(Goedel.Protocol.JPCProvider,System.String,System.String)" />
          <element api="M:Goedel.Protocol.Debug.DebugLocalSession.#ctor(Goedel.Protocol.JPCProvider,System.String,System.String,System.String)" />
        </element>
        <element api="Overload:Goedel.Protocol.Debug.DebugLocalSession.Post">
          <element api="M:Goedel.Protocol.Debug.DebugLocalSession.Post(Goedel.Protocol.StreamBuffer)" />
          <element api="M:Goedel.Protocol.Debug.DebugLocalSession.Post(System.String,Goedel.Protocol.JSONObject)" />
        </element>
        <element api="P:Goedel.Protocol.Debug.DebugLocalSession.Traces" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Protocol.Debug.DebugLocalSession">
      <topicdata name="DebugLocalSession" group="list" subgroup="Methods" typeTopicId="T:Goedel.Protocol.Debug.DebugLocalSession" />
      <apidata name="DebugLocalSession" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Goedel.Protocol.JPCRemoteSession.Authenticate(System.String)">
          <apidata name="Authenticate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:Goedel.Protocol.JPCSession.Authenticate(System.String)">
              <type api="T:Goedel.Protocol.JPCSession" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="UDF">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.JPCRemoteSession" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Protocol.Debug.DebugLocalSession.Post">
          <element api="M:Goedel.Protocol.Debug.DebugLocalSession.Post(Goedel.Protocol.StreamBuffer)" />
          <element api="M:Goedel.Protocol.Debug.DebugLocalSession.Post(System.String,Goedel.Protocol.JSONObject)" />
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.DebugLocalSession" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Protocol.Debug.DebugLocalSession">
      <topicdata name="DebugLocalSession" group="list" subgroup="Properties" typeTopicId="T:Goedel.Protocol.Debug.DebugLocalSession" />
      <apidata name="DebugLocalSession" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Goedel.Protocol.Debug.DebugLocalSession.Traces" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.DebugLocalSession" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Protocol.Debug.DebugLocalSession">
      <topicdata name="DebugLocalSession" group="list" subgroup="Fields" typeTopicId="T:Goedel.Protocol.Debug.DebugLocalSession" />
      <apidata name="DebugLocalSession" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Protocol.LocalRemoteSession.Host">
          <apidata name="Host" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:Goedel.Protocol.JPCProvider" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.LocalRemoteSession" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.Protocol.JPCSession.Account">
          <apidata name="Account" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.JPCSession" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.Protocol.JPCSession.UDF">
          <apidata name="UDF" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.JPCSession" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.Protocol.JPCSession.Domain">
          <apidata name="Domain" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.JPCSession" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.Protocol.JPCSession.Authenticated">
          <apidata name="Authenticated" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.JPCSession" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.DebugLocalSession" />
      </containers>
    </api>
    <api id="Overload:Goedel.Protocol.Debug.DebugLocalSession.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Protocol.Debug.DebugLocalSession.#ctor(Goedel.Protocol.JPCProvider,System.String,System.String)" />
        <element api="M:Goedel.Protocol.Debug.DebugLocalSession.#ctor(Goedel.Protocol.JPCProvider,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.DebugLocalSession" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.Protocol.Debug.DebugLocalSession.Post">
      <topicdata name="Post" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Post" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Protocol.Debug.DebugLocalSession.Post(Goedel.Protocol.StreamBuffer)" />
        <element api="M:Goedel.Protocol.Debug.DebugLocalSession.Post(System.String,Goedel.Protocol.JSONObject)" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.DebugLocalSession" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Debug.DebugLocalSession.#ctor(Goedel.Protocol.JPCProvider,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Protocol.Debug.DebugLocalSession.#ctor" />
      <sourceContext file="Libraries/Goedel.Protocol.Debug/DebugLocalSession.cs" />
      <parameters>
        <parameter name="Host">
          <type api="T:Goedel.Protocol.JPCProvider" ref="true" />
        </parameter>
        <parameter name="Domain">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Account">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.DebugLocalSession" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Debug.DebugLocalSession.#ctor(Goedel.Protocol.JPCProvider,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Protocol.Debug.DebugLocalSession.#ctor" />
      <sourceContext file="Libraries/Goedel.Protocol.Debug/DebugLocalSession.cs" />
      <parameters>
        <parameter name="Host">
          <type api="T:Goedel.Protocol.JPCProvider" ref="true" />
        </parameter>
        <parameter name="Domain">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Account">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="UDF">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.DebugLocalSession" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Debug.DebugLocalSession.Post(Goedel.Protocol.StreamBuffer)">
      <topicdata group="api" />
      <apidata name="Post" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Protocol.Debug.DebugLocalSession.Post" />
      <sourceContext file="Libraries/Goedel.Protocol.Debug/DebugLocalSession.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Protocol.LocalRemoteSession.Post(Goedel.Protocol.StreamBuffer)">
          <type api="T:Goedel.Protocol.LocalRemoteSession" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Data">
          <type api="T:Goedel.Protocol.StreamBuffer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Protocol.StreamBuffer" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.DebugLocalSession" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Debug.DebugLocalSession.Post(System.String,Goedel.Protocol.JSONObject)">
      <topicdata group="api" />
      <apidata name="Post" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Protocol.Debug.DebugLocalSession.Post" />
      <sourceContext file="Libraries/Goedel.Protocol.Debug/DebugLocalSession.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Protocol.JPCRemoteSession.Post(System.String,Goedel.Protocol.JSONObject)">
          <type api="T:Goedel.Protocol.JPCRemoteSession" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Request">
          <type api="T:Goedel.Protocol.JSONObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.DebugLocalSession" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Protocol.Debug.DebugLocalSession.Traces">
      <topicdata group="api" />
      <apidata name="Traces" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Protocol.Debug/DebugLocalSession.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Traces" />
      <setter name="set_Traces" />
      <returns>
        <type api="T:Goedel.Protocol.Debug.TraceDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.DebugLocalSession" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Protocol.Debug.TraceDictionary">
      <topicdata group="api" />
      <apidata name="TraceDictionary" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Protocol.Debug.TraceDictionary.#ctor(System.String,System.String)" />
        <element api="P:Goedel.Protocol.Debug.TraceDictionary.Current" />
        <element api="M:Goedel.Protocol.Debug.TraceDictionary.Get(System.String)" />
        <element api="P:Goedel.Protocol.Debug.TraceDictionary.HostName" />
        <element api="M:Goedel.Protocol.Debug.TraceDictionary.Label(System.String,System.String)" />
        <element api="P:Goedel.Protocol.Debug.TraceDictionary.Level" />
        <element api="M:Goedel.Protocol.Debug.TraceDictionary.Request(Goedel.Protocol.JSONObject)" />
        <element api="M:Goedel.Protocol.Debug.TraceDictionary.Response(System.String,Goedel.Protocol.JSONObject)" />
        <element api="F:Goedel.Protocol.Debug.TraceDictionary.Traces" />
        <element api="P:Goedel.Protocol.Debug.TraceDictionary.URI" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Protocol.Debug.TraceDictionary">
      <topicdata name="TraceDictionary" group="list" subgroup="Methods" typeTopicId="T:Goedel.Protocol.Debug.TraceDictionary" />
      <apidata name="TraceDictionary" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Protocol.Debug.TraceDictionary.Get(System.String)" />
        <element api="M:Goedel.Protocol.Debug.TraceDictionary.Label(System.String,System.String)" />
        <element api="M:Goedel.Protocol.Debug.TraceDictionary.Request(Goedel.Protocol.JSONObject)" />
        <element api="M:Goedel.Protocol.Debug.TraceDictionary.Response(System.String,Goedel.Protocol.JSONObject)" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.TraceDictionary" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Protocol.Debug.TraceDictionary">
      <topicdata name="TraceDictionary" group="list" subgroup="Properties" typeTopicId="T:Goedel.Protocol.Debug.TraceDictionary" />
      <apidata name="TraceDictionary" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Goedel.Protocol.Debug.TraceDictionary.Current" />
        <element api="P:Goedel.Protocol.Debug.TraceDictionary.HostName" />
        <element api="P:Goedel.Protocol.Debug.TraceDictionary.Level" />
        <element api="P:Goedel.Protocol.Debug.TraceDictionary.URI" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.TraceDictionary" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Protocol.Debug.TraceDictionary">
      <topicdata name="TraceDictionary" group="list" subgroup="Fields" typeTopicId="T:Goedel.Protocol.Debug.TraceDictionary" />
      <apidata name="TraceDictionary" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Protocol.Debug.TraceDictionary.Traces" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.TraceDictionary" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Debug.TraceDictionary.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="HostName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="URI">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.TraceDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Protocol.Debug.TraceDictionary.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:Goedel.Protocol.Debug.TracePoint" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.TraceDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Debug.TraceDictionary.Get(System.String)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Protocol.Debug.TracePoint" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.TraceDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Protocol.Debug.TraceDictionary.HostName">
      <topicdata group="api" />
      <apidata name="HostName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HostName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.TraceDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Debug.TraceDictionary.Label(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Label" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Command" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Protocol.Debug.TracePoint" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.TraceDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Protocol.Debug.TraceDictionary.Level">
      <topicdata group="api" />
      <apidata name="Level" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Level" />
      <setter name="set_Level" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.TraceDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Debug.TraceDictionary.Request(Goedel.Protocol.JSONObject)">
      <topicdata group="api" />
      <apidata name="Request" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Payload">
          <type api="T:Goedel.Protocol.JSONObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Protocol.Debug.TraceMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.TraceDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Debug.TraceDictionary.Response(System.String,Goedel.Protocol.JSONObject)">
      <topicdata group="api" />
      <apidata name="Response" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Status">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Payload">
          <type api="T:Goedel.Protocol.JSONObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Protocol.Debug.TraceMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.TraceDictionary" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Protocol.Debug.TraceDictionary.Traces">
      <topicdata group="api" />
      <apidata name="Traces" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:Goedel.Protocol.Debug.TracePoint" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.TraceDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Protocol.Debug.TraceDictionary.URI">
      <topicdata group="api" />
      <apidata name="URI" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_URI" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.TraceDictionary" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Protocol.Debug.TraceMessage">
      <topicdata group="api" />
      <apidata name="TraceMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Protocol.Debug.TraceMessage.#ctor(Goedel.Protocol.Debug.TracePoint,Goedel.Protocol.JSONObject,System.DateTime,System.Boolean)" />
        <element api="P:Goedel.Protocol.Debug.TraceMessage.IsRequest" />
        <element api="P:Goedel.Protocol.Debug.TraceMessage.Payload" />
        <element api="P:Goedel.Protocol.Debug.TraceMessage.Status" />
        <element api="Overload:Goedel.Protocol.Debug.TraceMessage.String">
          <element api="M:Goedel.Protocol.Debug.TraceMessage.String" />
          <element api="M:Goedel.Protocol.Debug.TraceMessage.String(System.Int32)" />
        </element>
        <element api="M:Goedel.Protocol.Debug.TraceMessage.StringHTTP(System.Boolean)" />
        <element api="M:Goedel.Protocol.Debug.TraceMessage.StringJSON(System.Boolean)" />
        <element api="P:Goedel.Protocol.Debug.TraceMessage.Time" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Protocol.Debug.TraceMessage">
      <topicdata name="TraceMessage" group="list" subgroup="Methods" typeTopicId="T:Goedel.Protocol.Debug.TraceMessage" />
      <apidata name="TraceMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Protocol.Debug.TraceMessage.String">
          <element api="M:Goedel.Protocol.Debug.TraceMessage.String" />
          <element api="M:Goedel.Protocol.Debug.TraceMessage.String(System.Int32)" />
        </element>
        <element api="M:Goedel.Protocol.Debug.TraceMessage.StringHTTP(System.Boolean)" />
        <element api="M:Goedel.Protocol.Debug.TraceMessage.StringJSON(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.TraceMessage" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Protocol.Debug.TraceMessage">
      <topicdata name="TraceMessage" group="list" subgroup="Properties" typeTopicId="T:Goedel.Protocol.Debug.TraceMessage" />
      <apidata name="TraceMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Goedel.Protocol.Debug.TraceMessage.IsRequest" />
        <element api="P:Goedel.Protocol.Debug.TraceMessage.Payload" />
        <element api="P:Goedel.Protocol.Debug.TraceMessage.Status" />
        <element api="P:Goedel.Protocol.Debug.TraceMessage.Time" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.TraceMessage" />
      </containers>
    </api>
    <api id="Overload:Goedel.Protocol.Debug.TraceMessage.String">
      <topicdata name="String" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="String" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Protocol.Debug.TraceMessage.String" />
        <element api="M:Goedel.Protocol.Debug.TraceMessage.String(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.TraceMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Debug.TraceMessage.#ctor(Goedel.Protocol.Debug.TracePoint,Goedel.Protocol.JSONObject,System.DateTime,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="TracePoint">
          <type api="T:Goedel.Protocol.Debug.TracePoint" ref="true" />
        </parameter>
        <parameter name="Payload">
          <type api="T:Goedel.Protocol.JSONObject" ref="true" />
        </parameter>
        <parameter name="Time">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="IsRequest">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.TraceMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Protocol.Debug.TraceMessage.IsRequest">
      <topicdata group="api" />
      <apidata name="IsRequest" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsRequest" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.TraceMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Protocol.Debug.TraceMessage.Payload">
      <topicdata group="api" />
      <apidata name="Payload" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Payload" />
      <returns>
        <type api="T:Goedel.Protocol.JSONObject" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.TraceMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Protocol.Debug.TraceMessage.Status">
      <topicdata group="api" />
      <apidata name="Status" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Status" />
      <setter name="set_Status" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.TraceMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Debug.TraceMessage.String">
      <topicdata group="api" />
      <apidata name="String" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Protocol.Debug.TraceMessage.String" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.TraceMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Debug.TraceMessage.String(System.Int32)">
      <topicdata group="api" />
      <apidata name="String" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Protocol.Debug.TraceMessage.String" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Level">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.TraceMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Debug.TraceMessage.StringHTTP(System.Boolean)">
      <topicdata group="api" />
      <apidata name="StringHTTP" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Redact">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.TraceMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Debug.TraceMessage.StringJSON(System.Boolean)">
      <topicdata group="api" />
      <apidata name="StringJSON" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Redact">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.TraceMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Protocol.Debug.TraceMessage.Time">
      <topicdata group="api" />
      <apidata name="Time" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Time" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.TraceMessage" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Protocol.Debug.TracePoint">
      <topicdata group="api" />
      <apidata name="TracePoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Protocol.Debug.TracePoint.#ctor(Goedel.Protocol.Debug.TraceDictionary,System.String)" />
        <element api="P:Goedel.Protocol.Debug.TracePoint.Command" />
        <element api="P:Goedel.Protocol.Debug.TracePoint.Level" />
        <element api="P:Goedel.Protocol.Debug.TracePoint.Messages" />
        <element api="P:Goedel.Protocol.Debug.TracePoint.TraceDictionary" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Protocol.Debug.TracePoint">
      <topicdata name="TracePoint" group="list" subgroup="Methods" typeTopicId="T:Goedel.Protocol.Debug.TracePoint" />
      <apidata name="TracePoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.TracePoint" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Protocol.Debug.TracePoint">
      <topicdata name="TracePoint" group="list" subgroup="Properties" typeTopicId="T:Goedel.Protocol.Debug.TracePoint" />
      <apidata name="TracePoint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Goedel.Protocol.Debug.TracePoint.Command" />
        <element api="P:Goedel.Protocol.Debug.TracePoint.Level" />
        <element api="P:Goedel.Protocol.Debug.TracePoint.Messages" />
        <element api="P:Goedel.Protocol.Debug.TracePoint.TraceDictionary" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.TracePoint" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Debug.TracePoint.#ctor(Goedel.Protocol.Debug.TraceDictionary,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="TraceDictionary">
          <type api="T:Goedel.Protocol.Debug.TraceDictionary" ref="true" />
        </parameter>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.TracePoint" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Protocol.Debug.TracePoint.Command">
      <topicdata group="api" />
      <apidata name="Command" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Command" />
      <setter name="set_Command" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.TracePoint" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Protocol.Debug.TracePoint.Level">
      <topicdata group="api" />
      <apidata name="Level" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Level" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.TracePoint" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Protocol.Debug.TracePoint.Messages">
      <topicdata group="api" />
      <apidata name="Messages" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Messages" />
      <setter name="set_Messages" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Goedel.Protocol.Debug.TraceMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.TracePoint" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Protocol.Debug.TracePoint.TraceDictionary">
      <topicdata group="api" />
      <apidata name="TraceDictionary" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TraceDictionary" />
      <returns>
        <type api="T:Goedel.Protocol.Debug.TraceDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Debug" module="Goedel.Protocol.Debug" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31021" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Debug" />
        <type api="T:Goedel.Protocol.Debug.TracePoint" ref="true" />
      </containers>
    </api>
    <api id="N:Goedel.Protocol.Framework">
      <topicdata group="api" />
      <apidata name="Goedel.Protocol.Framework" group="namespace" />
      <elements>
        <element api="T:Goedel.Protocol.Framework.FileCharacterTextStream" />
        <element api="T:Goedel.Protocol.Framework.MessageType" />
        <element api="T:Goedel.Protocol.Framework.BoundMessage" />
        <element api="T:Goedel.Protocol.Framework.BoundRequest" />
        <element api="T:Goedel.Protocol.Framework.BoundResponse" />
        <element api="T:Goedel.Protocol.Framework.PortRegistration" />
        <element api="T:Goedel.Protocol.Framework.HTTPPortRegistration" />
        <element api="T:Goedel.Protocol.Framework.InterfaceRegistration" />
        <element api="T:Goedel.Protocol.Framework.ProviderRegistration" />
        <element api="T:Goedel.Protocol.Framework.JPCServer" />
        <element api="T:Goedel.Protocol.Framework.WebRemoteSession" />
      </elements>
    </api>
    <api id="T:Goedel.Protocol.Framework.BoundMessage">
      <topicdata group="api" />
      <apidata name="BoundMessage" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Goedel.Protocol.Framework.BoundRequest" ref="true" />
          <type api="T:Goedel.Protocol.Framework.BoundResponse" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Protocol.Framework.BoundMessage.#ctor">
          <element api="M:Goedel.Protocol.Framework.BoundMessage.#ctor" />
          <element api="M:Goedel.Protocol.Framework.BoundMessage.#ctor(System.String)" />
        </element>
        <element api="P:Goedel.Protocol.Framework.BoundMessage.Base64Mac" />
        <element api="P:Goedel.Protocol.Framework.BoundMessage.Base64Ticket" />
        <element api="P:Goedel.Protocol.Framework.BoundMessage.ByteCount" />
        <element api="M:Goedel.Protocol.Framework.BoundMessage.HTTP" />
        <element api="P:Goedel.Protocol.Framework.BoundMessage.HTTPBinding" />
        <element api="F:Goedel.Protocol.Framework.BoundMessage.MAC" />
        <element api="F:Goedel.Protocol.Framework.BoundMessage.Payload" />
        <element api="F:Goedel.Protocol.Framework.BoundMessage.Ticket" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Protocol.Framework.BoundMessage">
      <topicdata name="BoundMessage" group="list" subgroup="Methods" typeTopicId="T:Goedel.Protocol.Framework.BoundMessage" />
      <apidata name="BoundMessage" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Protocol.Framework.BoundMessage.HTTP" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.BoundMessage" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Protocol.Framework.BoundMessage">
      <topicdata name="BoundMessage" group="list" subgroup="Properties" typeTopicId="T:Goedel.Protocol.Framework.BoundMessage" />
      <apidata name="BoundMessage" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Goedel.Protocol.Framework.BoundMessage.Base64Mac" />
        <element api="P:Goedel.Protocol.Framework.BoundMessage.Base64Ticket" />
        <element api="P:Goedel.Protocol.Framework.BoundMessage.ByteCount" />
        <element api="P:Goedel.Protocol.Framework.BoundMessage.HTTPBinding" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.BoundMessage" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Protocol.Framework.BoundMessage">
      <topicdata name="BoundMessage" group="list" subgroup="Fields" typeTopicId="T:Goedel.Protocol.Framework.BoundMessage" />
      <apidata name="BoundMessage" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="F:Goedel.Protocol.Framework.BoundMessage.MAC" />
        <element api="F:Goedel.Protocol.Framework.BoundMessage.Payload" />
        <element api="F:Goedel.Protocol.Framework.BoundMessage.Ticket" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.BoundMessage" />
      </containers>
    </api>
    <api id="Overload:Goedel.Protocol.Framework.BoundMessage.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Protocol.Framework.BoundMessage.#ctor" />
        <element api="M:Goedel.Protocol.Framework.BoundMessage.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.BoundMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.BoundMessage.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Protocol.Framework.BoundMessage.#ctor" />
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.BoundMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.BoundMessage.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Protocol.Framework.BoundMessage.#ctor" />
      <parameters>
        <parameter name="PayloadIn">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.BoundMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Protocol.Framework.BoundMessage.Base64Mac">
      <topicdata group="api" />
      <apidata name="Base64Mac" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Base64Mac" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.BoundMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Protocol.Framework.BoundMessage.Base64Ticket">
      <topicdata group="api" />
      <apidata name="Base64Ticket" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Base64Ticket" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.BoundMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Protocol.Framework.BoundMessage.ByteCount">
      <topicdata group="api" />
      <apidata name="ByteCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ByteCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.BoundMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.BoundMessage.HTTP">
      <topicdata group="api" />
      <apidata name="HTTP" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.BoundMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Protocol.Framework.BoundMessage.HTTPBinding">
      <topicdata group="api" />
      <apidata name="HTTPBinding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HTTPBinding" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.BoundMessage" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Protocol.Framework.BoundMessage.MAC">
      <topicdata group="api" />
      <apidata name="MAC" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.BoundMessage" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Protocol.Framework.BoundMessage.Payload">
      <topicdata group="api" />
      <apidata name="Payload" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.BoundMessage" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Protocol.Framework.BoundMessage.Ticket">
      <topicdata group="api" />
      <apidata name="Ticket" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.BoundMessage" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Protocol.Framework.BoundRequest">
      <topicdata group="api" />
      <apidata name="BoundRequest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Protocol.Framework.BoundMessage" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:Goedel.Protocol.Framework.BoundMessage.Base64Mac" />
        <element api="P:Goedel.Protocol.Framework.BoundMessage.Base64Ticket" />
        <element api="P:Goedel.Protocol.Framework.BoundMessage.ByteCount" />
        <element api="P:Goedel.Protocol.Framework.BoundMessage.HTTPBinding" />
        <element api="F:Goedel.Protocol.Framework.BoundMessage.MAC" />
        <element api="F:Goedel.Protocol.Framework.BoundMessage.Payload" />
        <element api="F:Goedel.Protocol.Framework.BoundMessage.Ticket" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Protocol.Framework.BoundRequest.#ctor(System.String)" />
        <element api="M:Goedel.Protocol.Framework.BoundRequest.HTTP" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Protocol.Framework.BoundRequest">
      <topicdata name="BoundRequest" group="list" subgroup="Methods" typeTopicId="T:Goedel.Protocol.Framework.BoundRequest" />
      <apidata name="BoundRequest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Protocol.Framework.BoundRequest.HTTP" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.BoundRequest" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Protocol.Framework.BoundRequest">
      <topicdata name="BoundRequest" group="list" subgroup="Properties" typeTopicId="T:Goedel.Protocol.Framework.BoundRequest" />
      <apidata name="BoundRequest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Goedel.Protocol.Framework.BoundMessage.Base64Mac" />
        <element api="P:Goedel.Protocol.Framework.BoundMessage.Base64Ticket" />
        <element api="P:Goedel.Protocol.Framework.BoundMessage.ByteCount" />
        <element api="P:Goedel.Protocol.Framework.BoundMessage.HTTPBinding" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.BoundRequest" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Protocol.Framework.BoundRequest">
      <topicdata name="BoundRequest" group="list" subgroup="Fields" typeTopicId="T:Goedel.Protocol.Framework.BoundRequest" />
      <apidata name="BoundRequest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Protocol.Framework.BoundMessage.MAC" />
        <element api="F:Goedel.Protocol.Framework.BoundMessage.Payload" />
        <element api="F:Goedel.Protocol.Framework.BoundMessage.Ticket" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.BoundRequest" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.BoundRequest.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="PayloadIn">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.BoundRequest" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.BoundRequest.HTTP">
      <topicdata group="api" />
      <apidata name="HTTP" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Protocol.Framework.BoundMessage.HTTP">
          <type api="T:Goedel.Protocol.Framework.BoundMessage" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.BoundRequest" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Protocol.Framework.BoundResponse">
      <topicdata group="api" />
      <apidata name="BoundResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Protocol.Framework.BoundMessage" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:Goedel.Protocol.Framework.BoundMessage.Base64Mac" />
        <element api="P:Goedel.Protocol.Framework.BoundMessage.Base64Ticket" />
        <element api="P:Goedel.Protocol.Framework.BoundMessage.ByteCount" />
        <element api="P:Goedel.Protocol.Framework.BoundMessage.HTTPBinding" />
        <element api="F:Goedel.Protocol.Framework.BoundMessage.MAC" />
        <element api="F:Goedel.Protocol.Framework.BoundMessage.Payload" />
        <element api="F:Goedel.Protocol.Framework.BoundMessage.Ticket" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Protocol.Framework.BoundResponse.#ctor">
          <element api="M:Goedel.Protocol.Framework.BoundResponse.#ctor(System.String)" />
          <element api="M:Goedel.Protocol.Framework.BoundResponse.#ctor(System.Int32,System.String)" />
        </element>
        <element api="F:Goedel.Protocol.Framework.BoundResponse.ErrorBadMac" />
        <element api="F:Goedel.Protocol.Framework.BoundResponse.ErrorSyntax" />
        <element api="F:Goedel.Protocol.Framework.BoundResponse.ErrorUnknown" />
        <element api="M:Goedel.Protocol.Framework.BoundResponse.HTTP" />
        <element api="F:Goedel.Protocol.Framework.BoundResponse.Status" />
        <element api="F:Goedel.Protocol.Framework.BoundResponse.StatusDescription" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Protocol.Framework.BoundResponse">
      <topicdata name="BoundResponse" group="list" subgroup="Methods" typeTopicId="T:Goedel.Protocol.Framework.BoundResponse" />
      <apidata name="BoundResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Protocol.Framework.BoundResponse.HTTP" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.BoundResponse" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Protocol.Framework.BoundResponse">
      <topicdata name="BoundResponse" group="list" subgroup="Properties" typeTopicId="T:Goedel.Protocol.Framework.BoundResponse" />
      <apidata name="BoundResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Goedel.Protocol.Framework.BoundMessage.Base64Mac" />
        <element api="P:Goedel.Protocol.Framework.BoundMessage.Base64Ticket" />
        <element api="P:Goedel.Protocol.Framework.BoundMessage.ByteCount" />
        <element api="P:Goedel.Protocol.Framework.BoundMessage.HTTPBinding" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.BoundResponse" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Protocol.Framework.BoundResponse">
      <topicdata name="BoundResponse" group="list" subgroup="Fields" typeTopicId="T:Goedel.Protocol.Framework.BoundResponse" />
      <apidata name="BoundResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Protocol.Framework.BoundMessage.MAC" />
        <element api="F:Goedel.Protocol.Framework.BoundMessage.Payload" />
        <element api="F:Goedel.Protocol.Framework.BoundMessage.Ticket" />
        <element api="F:Goedel.Protocol.Framework.BoundResponse.ErrorBadMac" />
        <element api="F:Goedel.Protocol.Framework.BoundResponse.ErrorSyntax" />
        <element api="F:Goedel.Protocol.Framework.BoundResponse.ErrorUnknown" />
        <element api="F:Goedel.Protocol.Framework.BoundResponse.Status" />
        <element api="F:Goedel.Protocol.Framework.BoundResponse.StatusDescription" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.BoundResponse" />
      </containers>
    </api>
    <api id="Overload:Goedel.Protocol.Framework.BoundResponse.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Protocol.Framework.BoundResponse.#ctor(System.String)" />
        <element api="M:Goedel.Protocol.Framework.BoundResponse.#ctor(System.Int32,System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.BoundResponse" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.BoundResponse.#ctor(System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Protocol.Framework.BoundResponse.#ctor" />
      <parameters>
        <parameter name="ErrorCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="Explanation">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.BoundResponse" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.BoundResponse.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Protocol.Framework.BoundResponse.#ctor" />
      <parameters>
        <parameter name="PayloadIn">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.BoundResponse" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Protocol.Framework.BoundResponse.ErrorBadMac">
      <topicdata group="api" />
      <apidata name="ErrorBadMac" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Protocol.Framework.BoundResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.BoundResponse" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Protocol.Framework.BoundResponse.ErrorSyntax">
      <topicdata group="api" />
      <apidata name="ErrorSyntax" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Protocol.Framework.BoundResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.BoundResponse" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Protocol.Framework.BoundResponse.ErrorUnknown">
      <topicdata group="api" />
      <apidata name="ErrorUnknown" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Protocol.Framework.BoundResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.BoundResponse" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.BoundResponse.HTTP">
      <topicdata group="api" />
      <apidata name="HTTP" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Protocol.Framework.BoundMessage.HTTP">
          <type api="T:Goedel.Protocol.Framework.BoundMessage" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.BoundResponse" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Protocol.Framework.BoundResponse.Status">
      <topicdata group="api" />
      <apidata name="Status" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.BoundResponse" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Protocol.Framework.BoundResponse.StatusDescription">
      <topicdata group="api" />
      <apidata name="StatusDescription" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.BoundResponse" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Protocol.Framework.FileCharacterTextStream">
      <topicdata group="api" />
      <apidata name="FileCharacterTextStream" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Protocol.CharacterTextStream" ref="true" />
          <type api="T:Goedel.Protocol.BufferedCharacterStream" ref="true" />
          <type api="T:Goedel.Protocol.CharacterStream" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Goedel.Protocol.CharacterTextStream.MarkPosition">
          <apidata name="MarkPosition" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.CharacterTextStream" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.Protocol.CharacterTextStream.MarkBuffer">
          <apidata name="MarkBuffer" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.CharacterTextStream" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.Protocol.CharacterTextStream.Buffer">
          <apidata name="Buffer" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.CharacterTextStream" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.Protocol.CharacterTextStream._EOF">
          <apidata name="_EOF" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.CharacterTextStream" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Protocol.CharacterTextStream.LookNext">
          <apidata name="LookNext" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:Goedel.Protocol.CharacterStream.LookNext">
              <type api="T:Goedel.Protocol.CharacterStream" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Char" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.CharacterTextStream" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Protocol.CharacterTextStream.GetNext">
          <apidata name="GetNext" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:Goedel.Protocol.CharacterStream.GetNext">
              <type api="T:Goedel.Protocol.CharacterStream" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Char" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.CharacterTextStream" ref="true" />
          </containers>
        </element>
        <element api="P:Goedel.Protocol.CharacterTextStream.EOF">
          <apidata name="EOF" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:Goedel.Protocol.CharacterStream.EOF">
              <type api="T:Goedel.Protocol.CharacterStream" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_EOF" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.CharacterTextStream" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.Protocol.CharacterStream.Count">
          <apidata name="Count" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.CharacterStream" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Protocol.Framework.FileCharacterTextStream.#ctor(System.IO.FileStream)" />
        <element api="M:Goedel.Protocol.Framework.FileCharacterTextStream.Mark" />
        <element api="M:Goedel.Protocol.Framework.FileCharacterTextStream.ReadChar" />
        <element api="M:Goedel.Protocol.Framework.FileCharacterTextStream.Restore" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Protocol.Framework.FileCharacterTextStream">
      <topicdata name="FileCharacterTextStream" group="list" subgroup="Methods" typeTopicId="T:Goedel.Protocol.Framework.FileCharacterTextStream" />
      <apidata name="FileCharacterTextStream" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Goedel.Protocol.CharacterTextStream.LookNext">
          <apidata name="LookNext" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:Goedel.Protocol.CharacterStream.LookNext">
              <type api="T:Goedel.Protocol.CharacterStream" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Char" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.CharacterTextStream" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Protocol.CharacterTextStream.GetNext">
          <apidata name="GetNext" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:Goedel.Protocol.CharacterStream.GetNext">
              <type api="T:Goedel.Protocol.CharacterStream" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Char" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.CharacterTextStream" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Protocol.Framework.FileCharacterTextStream.Mark" />
        <element api="M:Goedel.Protocol.Framework.FileCharacterTextStream.ReadChar" />
        <element api="M:Goedel.Protocol.Framework.FileCharacterTextStream.Restore" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.FileCharacterTextStream" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Protocol.Framework.FileCharacterTextStream">
      <topicdata name="FileCharacterTextStream" group="list" subgroup="Properties" typeTopicId="T:Goedel.Protocol.Framework.FileCharacterTextStream" />
      <apidata name="FileCharacterTextStream" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Goedel.Protocol.CharacterTextStream.EOF">
          <apidata name="EOF" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:Goedel.Protocol.CharacterStream.EOF">
              <type api="T:Goedel.Protocol.CharacterStream" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_EOF" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.CharacterTextStream" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.FileCharacterTextStream" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Protocol.Framework.FileCharacterTextStream">
      <topicdata name="FileCharacterTextStream" group="list" subgroup="Fields" typeTopicId="T:Goedel.Protocol.Framework.FileCharacterTextStream" />
      <apidata name="FileCharacterTextStream" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Protocol.CharacterTextStream.MarkPosition">
          <apidata name="MarkPosition" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.CharacterTextStream" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.Protocol.CharacterTextStream.MarkBuffer">
          <apidata name="MarkBuffer" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.CharacterTextStream" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.Protocol.CharacterTextStream.Buffer">
          <apidata name="Buffer" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.CharacterTextStream" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.Protocol.CharacterTextStream._EOF">
          <apidata name="_EOF" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.CharacterTextStream" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.Protocol.CharacterStream.Count">
          <apidata name="Count" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.CharacterStream" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.FileCharacterTextStream" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.FileCharacterTextStream.#ctor(System.IO.FileStream)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="FileStream">
          <type api="T:System.IO.FileStream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.FileCharacterTextStream" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.FileCharacterTextStream.Mark">
      <topicdata group="api" />
      <apidata name="Mark" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Protocol.BufferedCharacterStream.Mark">
          <type api="T:Goedel.Protocol.BufferedCharacterStream" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.FileCharacterTextStream" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.FileCharacterTextStream.ReadChar">
      <topicdata group="api" />
      <apidata name="ReadChar" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Protocol.CharacterTextStream.ReadChar">
          <type api="T:Goedel.Protocol.CharacterTextStream" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.FileCharacterTextStream" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.FileCharacterTextStream.Restore">
      <topicdata group="api" />
      <apidata name="Restore" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Protocol.BufferedCharacterStream.Restore">
          <type api="T:Goedel.Protocol.BufferedCharacterStream" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.FileCharacterTextStream" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Protocol.Framework.HTTPPortRegistration">
      <topicdata group="api" />
      <apidata name="HTTPPortRegistration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Protocol.Framework.PortRegistration" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Protocol.Framework.HTTPPortRegistration.#ctor(System.String,Goedel.Protocol.Framework.InterfaceRegistration)" />
        <element api="M:Goedel.Protocol.Framework.HTTPPortRegistration.Close" />
        <element api="M:Goedel.Protocol.Framework.HTTPPortRegistration.Open" />
        <element api="F:Goedel.Protocol.Framework.HTTPPortRegistration.URI" />
        <element api="F:Goedel.Protocol.Framework.PortRegistration.Interface" />
        <element api="F:Goedel.Protocol.Framework.PortRegistration.Provider" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Protocol.Framework.HTTPPortRegistration">
      <topicdata name="HTTPPortRegistration" group="list" subgroup="Methods" typeTopicId="T:Goedel.Protocol.Framework.HTTPPortRegistration" />
      <apidata name="HTTPPortRegistration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Protocol.Framework.HTTPPortRegistration.Close" />
        <element api="M:Goedel.Protocol.Framework.HTTPPortRegistration.Open" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.HTTPPortRegistration" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Protocol.Framework.HTTPPortRegistration">
      <topicdata name="HTTPPortRegistration" group="list" subgroup="Fields" typeTopicId="T:Goedel.Protocol.Framework.HTTPPortRegistration" />
      <apidata name="HTTPPortRegistration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Protocol.Framework.HTTPPortRegistration.URI" />
        <element api="F:Goedel.Protocol.Framework.PortRegistration.Interface" />
        <element api="F:Goedel.Protocol.Framework.PortRegistration.Provider" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.HTTPPortRegistration" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.HTTPPortRegistration.#ctor(System.String,Goedel.Protocol.Framework.InterfaceRegistration)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="URI">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Host">
          <type api="T:Goedel.Protocol.Framework.InterfaceRegistration" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.HTTPPortRegistration" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.HTTPPortRegistration.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Protocol.Framework.PortRegistration.Close">
          <type api="T:Goedel.Protocol.Framework.PortRegistration" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.HTTPPortRegistration" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.HTTPPortRegistration.Open">
      <topicdata group="api" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Protocol.Framework.PortRegistration.Open">
          <type api="T:Goedel.Protocol.Framework.PortRegistration" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.HTTPPortRegistration" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Protocol.Framework.HTTPPortRegistration.URI">
      <topicdata group="api" />
      <apidata name="URI" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.HTTPPortRegistration" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Protocol.Framework.InterfaceRegistration">
      <topicdata group="api" />
      <apidata name="InterfaceRegistration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Protocol.Framework.InterfaceRegistration.#ctor(Goedel.Protocol.JPCInterface,Goedel.Protocol.Framework.ProviderRegistration)" />
        <element api="M:Goedel.Protocol.Framework.InterfaceRegistration.AddHTTP(System.String)" />
        <element api="M:Goedel.Protocol.Framework.InterfaceRegistration.AddService(System.String)" />
        <element api="M:Goedel.Protocol.Framework.InterfaceRegistration.AddUDP(System.Int32)" />
        <element api="M:Goedel.Protocol.Framework.InterfaceRegistration.Close" />
        <element api="F:Goedel.Protocol.Framework.InterfaceRegistration.Interface" />
        <element api="M:Goedel.Protocol.Framework.InterfaceRegistration.Open" />
        <element api="F:Goedel.Protocol.Framework.InterfaceRegistration.ProviderRegistration" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Protocol.Framework.InterfaceRegistration">
      <topicdata name="InterfaceRegistration" group="list" subgroup="Methods" typeTopicId="T:Goedel.Protocol.Framework.InterfaceRegistration" />
      <apidata name="InterfaceRegistration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Protocol.Framework.InterfaceRegistration.AddHTTP(System.String)" />
        <element api="M:Goedel.Protocol.Framework.InterfaceRegistration.AddService(System.String)" />
        <element api="M:Goedel.Protocol.Framework.InterfaceRegistration.AddUDP(System.Int32)" />
        <element api="M:Goedel.Protocol.Framework.InterfaceRegistration.Close" />
        <element api="M:Goedel.Protocol.Framework.InterfaceRegistration.Open" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.InterfaceRegistration" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Protocol.Framework.InterfaceRegistration">
      <topicdata name="InterfaceRegistration" group="list" subgroup="Fields" typeTopicId="T:Goedel.Protocol.Framework.InterfaceRegistration" />
      <apidata name="InterfaceRegistration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Protocol.Framework.InterfaceRegistration.Interface" />
        <element api="F:Goedel.Protocol.Framework.InterfaceRegistration.ProviderRegistration" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.InterfaceRegistration" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.InterfaceRegistration.#ctor(Goedel.Protocol.JPCInterface,Goedel.Protocol.Framework.ProviderRegistration)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="Interface">
          <type api="T:Goedel.Protocol.JPCInterface" ref="true" />
        </parameter>
        <parameter name="ProviderRegistration">
          <type api="T:Goedel.Protocol.Framework.ProviderRegistration" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.InterfaceRegistration" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.InterfaceRegistration.AddHTTP(System.String)">
      <topicdata group="api" />
      <apidata name="AddHTTP" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="URI">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Protocol.Framework.HTTPPortRegistration" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.InterfaceRegistration" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.InterfaceRegistration.AddService(System.String)">
      <topicdata group="api" />
      <apidata name="AddService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Domain">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Protocol.Framework.HTTPPortRegistration" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.InterfaceRegistration" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.InterfaceRegistration.AddUDP(System.Int32)">
      <topicdata group="api" />
      <apidata name="AddUDP" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Protocol.Framework.PortRegistration" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.InterfaceRegistration" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.InterfaceRegistration.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.InterfaceRegistration" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Protocol.Framework.InterfaceRegistration.Interface">
      <topicdata group="api" />
      <apidata name="Interface" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Protocol.JPCInterface" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.InterfaceRegistration" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.InterfaceRegistration.Open">
      <topicdata group="api" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.InterfaceRegistration" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Protocol.Framework.InterfaceRegistration.ProviderRegistration">
      <topicdata group="api" />
      <apidata name="ProviderRegistration" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Protocol.Framework.ProviderRegistration" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.InterfaceRegistration" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Protocol.Framework.JPCServer">
      <topicdata group="api" />
      <apidata name="JPCServer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Protocol.Framework.JPCServer.#ctor" />
        <element api="M:Goedel.Protocol.Framework.JPCServer.Add(Goedel.Protocol.JPCProvider)" />
        <element api="F:Goedel.Protocol.Framework.JPCServer.HttpListener" />
        <element api="M:Goedel.Protocol.Framework.JPCServer.Register(Goedel.Protocol.Framework.HTTPPortRegistration)" />
        <element api="M:Goedel.Protocol.Framework.JPCServer.RunBlocking" />
        <element api="M:Goedel.Protocol.Framework.JPCServer.StartAsync" />
        <element api="M:Goedel.Protocol.Framework.JPCServer.Stop" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Protocol.Framework.JPCServer">
      <topicdata name="JPCServer" group="list" subgroup="Methods" typeTopicId="T:Goedel.Protocol.Framework.JPCServer" />
      <apidata name="JPCServer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Protocol.Framework.JPCServer.Add(Goedel.Protocol.JPCProvider)" />
        <element api="M:Goedel.Protocol.Framework.JPCServer.Register(Goedel.Protocol.Framework.HTTPPortRegistration)" />
        <element api="M:Goedel.Protocol.Framework.JPCServer.RunBlocking" />
        <element api="M:Goedel.Protocol.Framework.JPCServer.StartAsync" />
        <element api="M:Goedel.Protocol.Framework.JPCServer.Stop" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.JPCServer" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Protocol.Framework.JPCServer">
      <topicdata name="JPCServer" group="list" subgroup="Fields" typeTopicId="T:Goedel.Protocol.Framework.JPCServer" />
      <apidata name="JPCServer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Protocol.Framework.JPCServer.HttpListener" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.JPCServer" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.JPCServer.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.JPCServer" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.JPCServer.Add(Goedel.Protocol.JPCProvider)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="JPCHost">
          <type api="T:Goedel.Protocol.JPCProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Protocol.Framework.ProviderRegistration" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.JPCServer" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Protocol.Framework.JPCServer.HttpListener">
      <topicdata group="api" />
      <apidata name="HttpListener" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.HttpListener" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.JPCServer" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.JPCServer.Register(Goedel.Protocol.Framework.HTTPPortRegistration)">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Port">
          <type api="T:Goedel.Protocol.Framework.HTTPPortRegistration" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.JPCServer" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.JPCServer.RunBlocking">
      <topicdata group="api" />
      <apidata name="RunBlocking" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.JPCServer" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.JPCServer.StartAsync">
      <topicdata group="api" />
      <apidata name="StartAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.JPCServer" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.JPCServer.Stop">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.JPCServer" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Protocol.Framework.MessageType">
      <topicdata group="api" />
      <apidata name="MessageType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Goedel.Protocol.Framework.MessageType.Request" />
        <element api="F:Goedel.Protocol.Framework.MessageType.Response" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
      </containers>
    </api>
    <api id="F:Goedel.Protocol.Framework.MessageType.Request">
      <topicdata group="api" notopic="" />
      <apidata name="Request" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Protocol.Framework.MessageType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.MessageType" ref="false" />
      </containers>
    </api>
    <api id="F:Goedel.Protocol.Framework.MessageType.Response">
      <topicdata group="api" notopic="" />
      <apidata name="Response" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Protocol.Framework.MessageType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.MessageType" ref="false" />
      </containers>
    </api>
    <api id="T:Goedel.Protocol.Framework.PortRegistration">
      <topicdata group="api" />
      <apidata name="PortRegistration" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Goedel.Protocol.Framework.HTTPPortRegistration" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Protocol.Framework.PortRegistration.#ctor" />
        <element api="M:Goedel.Protocol.Framework.PortRegistration.Close" />
        <element api="F:Goedel.Protocol.Framework.PortRegistration.Interface" />
        <element api="M:Goedel.Protocol.Framework.PortRegistration.Open" />
        <element api="F:Goedel.Protocol.Framework.PortRegistration.Provider" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Protocol.Framework.PortRegistration">
      <topicdata name="PortRegistration" group="list" subgroup="Methods" typeTopicId="T:Goedel.Protocol.Framework.PortRegistration" />
      <apidata name="PortRegistration" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Protocol.Framework.PortRegistration.Close" />
        <element api="M:Goedel.Protocol.Framework.PortRegistration.Open" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.PortRegistration" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Protocol.Framework.PortRegistration">
      <topicdata name="PortRegistration" group="list" subgroup="Fields" typeTopicId="T:Goedel.Protocol.Framework.PortRegistration" />
      <apidata name="PortRegistration" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="F:Goedel.Protocol.Framework.PortRegistration.Interface" />
        <element api="F:Goedel.Protocol.Framework.PortRegistration.Provider" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.PortRegistration" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.PortRegistration.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.PortRegistration" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.PortRegistration.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.PortRegistration" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Protocol.Framework.PortRegistration.Interface">
      <topicdata group="api" />
      <apidata name="Interface" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Protocol.Framework.InterfaceRegistration" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.PortRegistration" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.PortRegistration.Open">
      <topicdata group="api" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.PortRegistration" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Protocol.Framework.PortRegistration.Provider">
      <topicdata group="api" />
      <apidata name="Provider" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Protocol.JPCProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.PortRegistration" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Protocol.Framework.ProviderRegistration">
      <topicdata group="api" />
      <apidata name="ProviderRegistration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Protocol.Framework.ProviderRegistration.#ctor(Goedel.Protocol.JPCProvider,Goedel.Protocol.Framework.JPCServer)" />
        <element api="M:Goedel.Protocol.Framework.ProviderRegistration.Add(Goedel.Protocol.JPCInterface)" />
        <element api="M:Goedel.Protocol.Framework.ProviderRegistration.Close" />
        <element api="F:Goedel.Protocol.Framework.ProviderRegistration.JPCProvider" />
        <element api="F:Goedel.Protocol.Framework.ProviderRegistration.JPCServer" />
        <element api="M:Goedel.Protocol.Framework.ProviderRegistration.Open" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Protocol.Framework.ProviderRegistration">
      <topicdata name="ProviderRegistration" group="list" subgroup="Methods" typeTopicId="T:Goedel.Protocol.Framework.ProviderRegistration" />
      <apidata name="ProviderRegistration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Protocol.Framework.ProviderRegistration.Add(Goedel.Protocol.JPCInterface)" />
        <element api="M:Goedel.Protocol.Framework.ProviderRegistration.Close" />
        <element api="M:Goedel.Protocol.Framework.ProviderRegistration.Open" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.ProviderRegistration" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Protocol.Framework.ProviderRegistration">
      <topicdata name="ProviderRegistration" group="list" subgroup="Fields" typeTopicId="T:Goedel.Protocol.Framework.ProviderRegistration" />
      <apidata name="ProviderRegistration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Protocol.Framework.ProviderRegistration.JPCProvider" />
        <element api="F:Goedel.Protocol.Framework.ProviderRegistration.JPCServer" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.ProviderRegistration" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.ProviderRegistration.#ctor(Goedel.Protocol.JPCProvider,Goedel.Protocol.Framework.JPCServer)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="JPCHost">
          <type api="T:Goedel.Protocol.JPCProvider" ref="true" />
        </parameter>
        <parameter name="JPCServer">
          <type api="T:Goedel.Protocol.Framework.JPCServer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.ProviderRegistration" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.ProviderRegistration.Add(Goedel.Protocol.JPCInterface)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Interface">
          <type api="T:Goedel.Protocol.JPCInterface" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Protocol.Framework.InterfaceRegistration" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.ProviderRegistration" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.ProviderRegistration.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.ProviderRegistration" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Protocol.Framework.ProviderRegistration.JPCProvider">
      <topicdata group="api" />
      <apidata name="JPCProvider" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Protocol.JPCProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.ProviderRegistration" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Protocol.Framework.ProviderRegistration.JPCServer">
      <topicdata group="api" />
      <apidata name="JPCServer" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Protocol.Framework.JPCServer" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.ProviderRegistration" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.ProviderRegistration.Open">
      <topicdata group="api" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.ProviderRegistration" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Protocol.Framework.WebRemoteSession">
      <topicdata group="api" />
      <apidata name="WebRemoteSession" group="type" subgroup="class" />
      <sourceContext file="Libraries/Goedel.Protocol.Framework/WebRemoteSession.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Protocol.JPCRemoteSession" ref="true" />
          <type api="T:Goedel.Protocol.JPCSession" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Goedel.Protocol.Framework.WebRemoteSession.Post">
          <element api="M:Goedel.Protocol.Framework.WebRemoteSession.Post(Goedel.Protocol.StreamBuffer)" />
          <element api="M:Goedel.Protocol.JPCRemoteSession.Post(System.String,Goedel.Protocol.JSONObject)">
            <apidata name="Post" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Tag">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Request">
                <type api="T:Goedel.Protocol.JSONObject" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.String" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Protocol" />
              <type api="T:Goedel.Protocol.JPCRemoteSession" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:Goedel.Protocol.JPCRemoteSession.Authenticate(System.String)">
          <apidata name="Authenticate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:Goedel.Protocol.JPCSession.Authenticate(System.String)">
              <type api="T:Goedel.Protocol.JPCSession" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="UDF">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.JPCRemoteSession" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.Protocol.JPCSession.Account">
          <apidata name="Account" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.JPCSession" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.Protocol.JPCSession.UDF">
          <apidata name="UDF" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.JPCSession" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.Protocol.JPCSession.Domain">
          <apidata name="Domain" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.JPCSession" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.Protocol.JPCSession.Authenticated">
          <apidata name="Authenticated" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.JPCSession" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Protocol.Framework.WebRemoteSession.#ctor(System.String,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Protocol.Framework.WebRemoteSession">
      <topicdata name="WebRemoteSession" group="list" subgroup="Methods" typeTopicId="T:Goedel.Protocol.Framework.WebRemoteSession" />
      <apidata name="WebRemoteSession" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:Goedel.Protocol.Framework.WebRemoteSession.Post">
          <element api="M:Goedel.Protocol.Framework.WebRemoteSession.Post(Goedel.Protocol.StreamBuffer)" />
          <element api="M:Goedel.Protocol.JPCRemoteSession.Post(System.String,Goedel.Protocol.JSONObject)">
            <apidata name="Post" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="Tag">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="Request">
                <type api="T:Goedel.Protocol.JSONObject" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.String" ref="true" />
            </returns>
            <containers>
              <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Goedel.Protocol" />
              <type api="T:Goedel.Protocol.JPCRemoteSession" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:Goedel.Protocol.JPCRemoteSession.Authenticate(System.String)">
          <apidata name="Authenticate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:Goedel.Protocol.JPCSession.Authenticate(System.String)">
              <type api="T:Goedel.Protocol.JPCSession" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="UDF">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.JPCRemoteSession" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.WebRemoteSession" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Protocol.Framework.WebRemoteSession">
      <topicdata name="WebRemoteSession" group="list" subgroup="Fields" typeTopicId="T:Goedel.Protocol.Framework.WebRemoteSession" />
      <apidata name="WebRemoteSession" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Protocol.JPCSession.Account">
          <apidata name="Account" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.JPCSession" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.Protocol.JPCSession.UDF">
          <apidata name="UDF" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.JPCSession" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.Protocol.JPCSession.Domain">
          <apidata name="Domain" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.JPCSession" ref="true" />
          </containers>
        </element>
        <element api="F:Goedel.Protocol.JPCSession.Authenticated">
          <apidata name="Authenticated" group="member" subgroup="field" />
          <memberdata visibility="public" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.JPCSession" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.WebRemoteSession" />
      </containers>
    </api>
    <api id="Overload:Goedel.Protocol.Framework.WebRemoteSession.Post">
      <topicdata name="Post" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Post" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Protocol.Framework.WebRemoteSession.Post(Goedel.Protocol.StreamBuffer)" />
        <element api="M:Goedel.Protocol.JPCRemoteSession.Post(System.String,Goedel.Protocol.JSONObject)">
          <apidata name="Post" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="Tag">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="Request">
              <type api="T:Goedel.Protocol.JSONObject" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Protocol" module="Goedel.Protocol" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Protocol" />
            <type api="T:Goedel.Protocol.JPCRemoteSession" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.WebRemoteSession" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.WebRemoteSession.#ctor(System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Libraries/Goedel.Protocol.Framework/WebRemoteSession.cs" />
      <parameters>
        <parameter name="Domain">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Service">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Account" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="UDF" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.WebRemoteSession" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Protocol.Framework.WebRemoteSession.Post(Goedel.Protocol.StreamBuffer)">
      <topicdata group="api" />
      <apidata name="Post" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Protocol.Framework.WebRemoteSession.Post" />
      <sourceContext file="Libraries/Goedel.Protocol.Framework/WebRemoteSession.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Protocol.JPCRemoteSession.Post(Goedel.Protocol.StreamBuffer)">
          <type api="T:Goedel.Protocol.JPCRemoteSession" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Content">
          <type api="T:Goedel.Protocol.StreamBuffer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Protocol.StreamBuffer" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <library assembly="Goedel.Protocol.Framework" module="Goedel.Protocol.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.31020" />
          <assemblydata version="1.0.6471.40475" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Protocol.Framework" />
        <type api="T:Goedel.Protocol.Framework.WebRemoteSession" ref="true" />
      </containers>
    </api>
    <api id="N:Goedel.Registry">
      <topicdata group="api" />
      <apidata name="Goedel.Registry" group="namespace" />
      <elements>
        <element api="T:Goedel.Registry.ExtensionMethods" />
        <element api="T:Goedel.Registry.Separator" />
        <element api="T:Goedel.Registry.ParserException" />
        <element api="T:Goedel.Registry.FileReadError" />
        <element api="T:Goedel.Registry.UnknownCommand" />
        <element api="T:Goedel.Registry.UnknownOption" />
        <element api="T:Goedel.Registry.NoCommand" />
        <element api="T:Goedel.Registry.SchemaParse" />
        <element api="T:Goedel.Registry.NotFoundReserved" />
        <element api="T:Goedel.Registry.InternalError" />
        <element api="T:Goedel.Registry.InvalidToken" />
        <element api="T:Goedel.Registry.ExpectedStart" />
        <element api="T:Goedel.Registry.ExpectedClass" />
        <element api="T:Goedel.Registry.Expected" />
        <element api="T:Goedel.Registry.TooManyClose" />
        <element api="T:Goedel.Registry.UnreachableCode" />
        <element api="T:Goedel.Registry.Boilerplate" />
        <element api="T:Goedel.Registry.ScriptOutput" />
        <element api="T:Goedel.Registry.TokenType" />
        <element api="T:Goedel.Registry.GoedelParseException" />
        <element api="T:Goedel.Registry.Lexer" />
        <element api="T:Goedel.Registry.Lexer.CharType" />
        <element api="T:Goedel.Registry.Parser" />
        <element api="T:Goedel.Registry.Dispatch" />
        <element api="T:Goedel.Registry.Source" />
        <element api="T:Goedel.Registry.Position" />
        <element api="T:Goedel.Registry.Registry`1" />
        <element api="T:Goedel.Registry.TYPE`1" />
        <element api="T:Goedel.Registry.ID`1" />
        <element api="T:Goedel.Registry.REF`1" />
        <element api="T:Goedel.Registry.TOKEN`1" />
        <element api="T:Goedel.Registry.Script" />
        <element api="T:Goedel.Registry.OutputFormat" />
        <element api="T:Goedel.Registry.StructureWriter" />
        <element api="T:Goedel.Registry.IndentWriter" />
        <element api="T:Goedel.Registry.XMLWriter" />
        <element api="T:Goedel.Registry.XMLEscape" />
        <element api="T:Goedel.Registry.XMLTextWriter" />
      </elements>
    </api>
    <api id="T:Goedel.Registry.Boilerplate">
      <topicdata group="api" />
      <apidata name="Boilerplate" group="type" subgroup="class" />
      <sourceContext file="RFCTool/Goedel.Tool.RFCTool/Boilerplate.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Registry.Script" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Registry.Boilerplate.#ctor">
          <element api="M:Goedel.Registry.Boilerplate.#ctor" />
          <element api="M:Goedel.Registry.Boilerplate.#ctor(System.IO.TextWriter)" />
        </element>
        <element api="M:Goedel.Registry.Boilerplate.Apache2License(System.IO.TextWriter,System.String,System.String,System.String)" />
        <element api="M:Goedel.Registry.Boilerplate.BSD2License(System.IO.TextWriter,System.String,System.String,System.String)" />
        <element api="M:Goedel.Registry.Boilerplate.BSD3License(System.IO.TextWriter,System.String,System.String,System.String)" />
        <element api="M:Goedel.Registry.Boilerplate.Header(System.IO.TextWriter,System.String,System.DateTime)" />
        <element api="M:Goedel.Registry.Boilerplate.ISCLicense(System.IO.TextWriter,System.String,System.String,System.String)" />
        <element api="M:Goedel.Registry.Boilerplate.License(System.IO.TextWriter,System.String,System.String)" />
        <element api="M:Goedel.Registry.Boilerplate.MITLicense(System.IO.TextWriter,System.String,System.String,System.String)" />
        <element api="P:Goedel.Registry.Script._Filename" />
        <element api="P:Goedel.Registry.Script._Indent" />
        <element api="P:Goedel.Registry.Script._Output" />
        <element api="M:Goedel.Registry.Script.Close" />
        <element api="Overload:Goedel.Registry.Boilerplate.CommentSummary">
          <element api="M:Goedel.Registry.Script.CommentSummary(System.Int32,System.Collections.Generic.List{System.String})" />
          <element api="M:Goedel.Registry.Script.CommentSummary(System.Int32,System.String)" />
        </element>
        <element api="Overload:Goedel.Registry.Boilerplate.SetTextWriter">
          <element api="M:Goedel.Registry.Script.SetTextWriter(System.IO.TextWriter)" />
          <element api="M:Goedel.Registry.Script.SetTextWriter(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.Boilerplate">
      <topicdata name="Boilerplate" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.Boilerplate" />
      <apidata name="Boilerplate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.Boilerplate.Apache2License(System.IO.TextWriter,System.String,System.String,System.String)" />
        <element api="M:Goedel.Registry.Boilerplate.BSD2License(System.IO.TextWriter,System.String,System.String,System.String)" />
        <element api="M:Goedel.Registry.Boilerplate.BSD3License(System.IO.TextWriter,System.String,System.String,System.String)" />
        <element api="M:Goedel.Registry.Boilerplate.Header(System.IO.TextWriter,System.String,System.DateTime)" />
        <element api="M:Goedel.Registry.Boilerplate.ISCLicense(System.IO.TextWriter,System.String,System.String,System.String)" />
        <element api="M:Goedel.Registry.Boilerplate.License(System.IO.TextWriter,System.String,System.String)" />
        <element api="M:Goedel.Registry.Boilerplate.MITLicense(System.IO.TextWriter,System.String,System.String,System.String)" />
        <element api="M:Goedel.Registry.Script.Close" />
        <element api="Overload:Goedel.Registry.Boilerplate.CommentSummary">
          <element api="M:Goedel.Registry.Script.CommentSummary(System.Int32,System.Collections.Generic.List{System.String})" />
          <element api="M:Goedel.Registry.Script.CommentSummary(System.Int32,System.String)" />
        </element>
        <element api="Overload:Goedel.Registry.Boilerplate.SetTextWriter">
          <element api="M:Goedel.Registry.Script.SetTextWriter(System.IO.TextWriter)" />
          <element api="M:Goedel.Registry.Script.SetTextWriter(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Boilerplate" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Registry.Boilerplate">
      <topicdata name="Boilerplate" group="list" subgroup="Properties" typeTopicId="T:Goedel.Registry.Boilerplate" />
      <apidata name="Boilerplate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Goedel.Registry.Script._Filename" />
        <element api="P:Goedel.Registry.Script._Indent" />
        <element api="P:Goedel.Registry.Script._Output" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Boilerplate" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.Boilerplate.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Registry.Boilerplate.#ctor" />
        <element api="M:Goedel.Registry.Boilerplate.#ctor(System.IO.TextWriter)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Boilerplate" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Boilerplate.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.Boilerplate.#ctor" />
      <sourceContext file="RFCTool/Goedel.Tool.RFCTool/Boilerplate.cs" />
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Boilerplate" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Boilerplate.#ctor(System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.Boilerplate.#ctor" />
      <sourceContext file="RFCTool/Goedel.Tool.RFCTool/Boilerplate.cs" />
      <parameters>
        <parameter name="Output">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Boilerplate" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Boilerplate.Apache2License(System.IO.TextWriter,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Apache2License" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="RFCTool/Goedel.Tool.RFCTool/Boilerplate.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Output">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="Comment">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Copyright">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Holder">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Boilerplate" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Boilerplate.BSD2License(System.IO.TextWriter,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="BSD2License" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="RFCTool/Goedel.Tool.RFCTool/Boilerplate.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Output">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="Comment">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Copyright">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Holder">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Boilerplate" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Boilerplate.BSD3License(System.IO.TextWriter,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="BSD3License" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="RFCTool/Goedel.Tool.RFCTool/Boilerplate.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Output">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="Comment">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Copyright">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Holder">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Boilerplate" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Boilerplate.Header(System.IO.TextWriter,System.String,System.DateTime)">
      <topicdata group="api" />
      <apidata name="Header" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="RFCTool/Goedel.Tool.RFCTool/Boilerplate.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Output">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="Comment">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="GenerateTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Boilerplate" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Boilerplate.ISCLicense(System.IO.TextWriter,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ISCLicense" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="RFCTool/Goedel.Tool.RFCTool/Boilerplate.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Output">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="Comment">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Copyright">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Holder">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Boilerplate" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Boilerplate.License(System.IO.TextWriter,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="License" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="RFCTool/Goedel.Tool.RFCTool/Boilerplate.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Output">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="Comment">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Boilerplate" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Boilerplate.MITLicense(System.IO.TextWriter,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="MITLicense" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="RFCTool/Goedel.Tool.RFCTool/Boilerplate.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Output">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="Comment">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Copyright">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Holder">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Boilerplate" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.Dispatch">
      <topicdata group="api" />
      <apidata name="Dispatch" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.Dispatch.#ctor" />
        <element api="P:Goedel.Registry.Dispatch.Elapsed" />
        <element api="F:Goedel.Registry.Dispatch.Started" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.Dispatch">
      <topicdata name="Dispatch" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.Dispatch" />
      <apidata name="Dispatch" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Dispatch" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Registry.Dispatch">
      <topicdata name="Dispatch" group="list" subgroup="Properties" typeTopicId="T:Goedel.Registry.Dispatch" />
      <apidata name="Dispatch" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Goedel.Registry.Dispatch.Elapsed" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Dispatch" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Registry.Dispatch">
      <topicdata name="Dispatch" group="list" subgroup="Fields" typeTopicId="T:Goedel.Registry.Dispatch" />
      <apidata name="Dispatch" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="F:Goedel.Registry.Dispatch.Started" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Dispatch" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Dispatch.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Dispatch" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Registry.Dispatch.Elapsed">
      <topicdata group="api" />
      <apidata name="Elapsed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Elapsed" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Dispatch" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.Dispatch.Started">
      <topicdata group="api" />
      <apidata name="Started" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Dispatch" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.Expected">
      <topicdata group="api" />
      <apidata name="Expected" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Registry.SchemaParse" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Registry.Expected.#ctor">
          <element api="M:Goedel.Registry.Expected.#ctor" />
          <element api="M:Goedel.Registry.Expected.#ctor(System.String)" />
          <element api="M:Goedel.Registry.Expected.#ctor(System.String,System.Exception)" />
        </element>
        <element api="F:Goedel.Registry.Expected.Throw" />
        <element api="F:Goedel.Registry.SchemaParse.UserData" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.Expected">
      <topicdata name="Expected" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.Expected" />
      <apidata name="Expected" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Expected" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Registry.Expected">
      <topicdata name="Expected" group="list" subgroup="Properties" typeTopicId="T:Goedel.Registry.Expected" />
      <apidata name="Expected" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Expected" />
      </containers>
    </api>
    <api id="Events.T:Goedel.Registry.Expected">
      <topicdata name="Expected" group="list" subgroup="Events" typeTopicId="T:Goedel.Registry.Expected" />
      <apidata name="Expected" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Expected" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Registry.Expected">
      <topicdata name="Expected" group="list" subgroup="Fields" typeTopicId="T:Goedel.Registry.Expected" />
      <apidata name="Expected" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Registry.Expected.Throw" />
        <element api="F:Goedel.Registry.SchemaParse.UserData" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Expected" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.Expected.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Registry.Expected.#ctor" />
        <element api="M:Goedel.Registry.Expected.#ctor(System.String)" />
        <element api="M:Goedel.Registry.Expected.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Expected" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Expected.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.Expected.#ctor" />
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Expected" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Expected.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.Expected.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Expected" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Expected.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.Expected.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Expected" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.Expected.Throw">
      <topicdata group="api" />
      <apidata name="Throw" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Utilities.ThrowDelegate" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Expected" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.ExpectedClass">
      <topicdata group="api" />
      <apidata name="ExpectedClass" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Registry.SchemaParse" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Registry.ExpectedClass.#ctor">
          <element api="M:Goedel.Registry.ExpectedClass.#ctor" />
          <element api="M:Goedel.Registry.ExpectedClass.#ctor(System.String)" />
          <element api="M:Goedel.Registry.ExpectedClass.#ctor(System.String,System.Exception)" />
        </element>
        <element api="F:Goedel.Registry.ExpectedClass.Throw" />
        <element api="F:Goedel.Registry.SchemaParse.UserData" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.ExpectedClass">
      <topicdata name="ExpectedClass" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.ExpectedClass" />
      <apidata name="ExpectedClass" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ExpectedClass" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Registry.ExpectedClass">
      <topicdata name="ExpectedClass" group="list" subgroup="Properties" typeTopicId="T:Goedel.Registry.ExpectedClass" />
      <apidata name="ExpectedClass" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ExpectedClass" />
      </containers>
    </api>
    <api id="Events.T:Goedel.Registry.ExpectedClass">
      <topicdata name="ExpectedClass" group="list" subgroup="Events" typeTopicId="T:Goedel.Registry.ExpectedClass" />
      <apidata name="ExpectedClass" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ExpectedClass" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Registry.ExpectedClass">
      <topicdata name="ExpectedClass" group="list" subgroup="Fields" typeTopicId="T:Goedel.Registry.ExpectedClass" />
      <apidata name="ExpectedClass" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Registry.ExpectedClass.Throw" />
        <element api="F:Goedel.Registry.SchemaParse.UserData" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ExpectedClass" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.ExpectedClass.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Registry.ExpectedClass.#ctor" />
        <element api="M:Goedel.Registry.ExpectedClass.#ctor(System.String)" />
        <element api="M:Goedel.Registry.ExpectedClass.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ExpectedClass" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.ExpectedClass.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.ExpectedClass.#ctor" />
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ExpectedClass" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.ExpectedClass.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.ExpectedClass.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ExpectedClass" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.ExpectedClass.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.ExpectedClass.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ExpectedClass" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.ExpectedClass.Throw">
      <topicdata group="api" />
      <apidata name="Throw" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Utilities.ThrowDelegate" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ExpectedClass" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.ExpectedStart">
      <topicdata group="api" />
      <apidata name="ExpectedStart" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Registry.SchemaParse" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Registry.ExpectedStart.#ctor">
          <element api="M:Goedel.Registry.ExpectedStart.#ctor" />
          <element api="M:Goedel.Registry.ExpectedStart.#ctor(System.String)" />
          <element api="M:Goedel.Registry.ExpectedStart.#ctor(System.String,System.Exception)" />
        </element>
        <element api="F:Goedel.Registry.ExpectedStart.Throw" />
        <element api="F:Goedel.Registry.SchemaParse.UserData" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.ExpectedStart">
      <topicdata name="ExpectedStart" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.ExpectedStart" />
      <apidata name="ExpectedStart" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ExpectedStart" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Registry.ExpectedStart">
      <topicdata name="ExpectedStart" group="list" subgroup="Properties" typeTopicId="T:Goedel.Registry.ExpectedStart" />
      <apidata name="ExpectedStart" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ExpectedStart" />
      </containers>
    </api>
    <api id="Events.T:Goedel.Registry.ExpectedStart">
      <topicdata name="ExpectedStart" group="list" subgroup="Events" typeTopicId="T:Goedel.Registry.ExpectedStart" />
      <apidata name="ExpectedStart" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ExpectedStart" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Registry.ExpectedStart">
      <topicdata name="ExpectedStart" group="list" subgroup="Fields" typeTopicId="T:Goedel.Registry.ExpectedStart" />
      <apidata name="ExpectedStart" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Registry.ExpectedStart.Throw" />
        <element api="F:Goedel.Registry.SchemaParse.UserData" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ExpectedStart" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.ExpectedStart.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Registry.ExpectedStart.#ctor" />
        <element api="M:Goedel.Registry.ExpectedStart.#ctor(System.String)" />
        <element api="M:Goedel.Registry.ExpectedStart.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ExpectedStart" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.ExpectedStart.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.ExpectedStart.#ctor" />
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ExpectedStart" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.ExpectedStart.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.ExpectedStart.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ExpectedStart" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.ExpectedStart.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.ExpectedStart.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ExpectedStart" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.ExpectedStart.Throw">
      <topicdata group="api" />
      <apidata name="Throw" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Utilities.ThrowDelegate" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ExpectedStart" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.ExtensionMethods">
      <topicdata group="api" />
      <apidata name="ExtensionMethods" group="type" subgroup="class" />
      <sourceContext file="Trojan3/Goedel.Trojan.GTK/ExtensionMethods.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" />
        <element api="Overload:Goedel.Registry.ExtensionMethods.If">
          <element api="M:Goedel.Registry.ExtensionMethods.If(System.Boolean,System.String)" />
          <element api="M:Goedel.Registry.ExtensionMethods.If(System.Boolean,System.String,System.String)" />
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" />
        <element api="Overload:Goedel.Registry.ExtensionMethods.Quoted">
          <element api="M:Goedel.Registry.ExtensionMethods.Quoted(System.Collections.Generic.List{System.String})" />
          <element api="M:Goedel.Registry.ExtensionMethods.Quoted(System.String)" />
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.QuotedNull(System.String)" />
        <element api="P:Goedel.Registry.ExtensionMethods.Target" />
        <element api="M:Goedel.Registry.ExtensionMethods.TBS(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Goedel.Registry.ExtensionMethods">
      <topicdata name="ExtensionMethods" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.ExtensionMethods" />
      <apidata name="ExtensionMethods" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" />
        <element api="Overload:Goedel.Registry.ExtensionMethods.If">
          <element api="M:Goedel.Registry.ExtensionMethods.If(System.Boolean,System.String)" />
          <element api="M:Goedel.Registry.ExtensionMethods.If(System.Boolean,System.String,System.String)" />
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" />
        <element api="Overload:Goedel.Registry.ExtensionMethods.Quoted">
          <element api="M:Goedel.Registry.ExtensionMethods.Quoted(System.Collections.Generic.List{System.String})" />
          <element api="M:Goedel.Registry.ExtensionMethods.Quoted(System.String)" />
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.QuotedNull(System.String)" />
        <element api="M:Goedel.Registry.ExtensionMethods.TBS(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ExtensionMethods" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Registry.ExtensionMethods">
      <topicdata name="ExtensionMethods" group="list" subgroup="Properties" typeTopicId="T:Goedel.Registry.ExtensionMethods" />
      <apidata name="ExtensionMethods" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:Goedel.Registry.ExtensionMethods.Target" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ExtensionMethods" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.ExtensionMethods.If">
      <topicdata name="If" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="If" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Registry.ExtensionMethods.If(System.Boolean,System.String)" />
        <element api="M:Goedel.Registry.ExtensionMethods.If(System.Boolean,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.ExtensionMethods.Quoted">
      <topicdata name="Quoted" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Quoted" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Registry.ExtensionMethods.Quoted(System.Collections.Generic.List{System.String})" />
        <element api="M:Goedel.Registry.ExtensionMethods.Quoted(System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.ExtensionMethods.CS(System.Object)">
      <topicdata group="api" />
      <apidata name="CS" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Trojan3/Goedel.Trojan.GTK/ExtensionMethods.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Base">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.Registry.ExtensionMethods.If(System.Boolean,System.String)">
      <topicdata group="api" />
      <apidata name="If" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Goedel.Registry.ExtensionMethods.If" />
      <sourceContext file="Trojan3/Goedel.Trojan.GTK/ExtensionMethods.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Value">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="Text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.Registry.ExtensionMethods.If(System.Boolean,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="If" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Goedel.Registry.ExtensionMethods.If" />
      <sourceContext file="Trojan3/Goedel.Trojan.GTK/ExtensionMethods.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Value">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="TrueText">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="FalseText">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.Registry.ExtensionMethods.Label(System.Object)">
      <topicdata group="api" />
      <apidata name="Label" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Trojan3/Goedel.Trojan.GTK/ExtensionMethods.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Base">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.Registry.ExtensionMethods.Quoted(System.Collections.Generic.List{System.String})">
      <topicdata group="api" />
      <apidata name="Quoted" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Goedel.Registry.ExtensionMethods.Quoted" />
      <sourceContext file="Trojan3/Goedel.Trojan.GTK/ExtensionMethods.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Base">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.Registry.ExtensionMethods.Quoted(System.String)">
      <topicdata group="api" />
      <apidata name="Quoted" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Goedel.Registry.ExtensionMethods.Quoted" />
      <sourceContext file="Trojan3/Goedel.Trojan.GTK/ExtensionMethods.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Base">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.Registry.ExtensionMethods.QuotedNull(System.String)">
      <topicdata group="api" />
      <apidata name="QuotedNull" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Trojan3/Goedel.Trojan.GTK/ExtensionMethods.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Base">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:Goedel.Registry.ExtensionMethods.Target">
      <topicdata group="api" />
      <apidata name="Target" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Trojan3/Goedel.Trojan.GTK/ExtensionMethods.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Target" />
      <setter name="set_Target" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.ExtensionMethods.TBS(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="TBS" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Trojan3/Goedel.Trojan.GTK/ExtensionMethods.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Bold" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Goedel.Registry.FileReadError">
      <topicdata group="api" />
      <apidata name="FileReadError" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Registry.ParserException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Registry.FileReadError.#ctor">
          <element api="M:Goedel.Registry.FileReadError.#ctor" />
          <element api="M:Goedel.Registry.FileReadError.#ctor(Goedel.Utilities.ExceptionData)" />
          <element api="M:Goedel.Registry.FileReadError.#ctor(System.String)" />
          <element api="M:Goedel.Registry.FileReadError.#ctor(Goedel.Utilities.ExceptionData,System.Exception)" />
          <element api="M:Goedel.Registry.FileReadError.#ctor(System.String,System.Exception)" />
        </element>
        <element api="F:Goedel.Registry.FileReadError.Throw" />
        <element api="F:Goedel.Registry.ParserException.UserData" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.FileReadError">
      <topicdata name="FileReadError" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.FileReadError" />
      <apidata name="FileReadError" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.FileReadError" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Registry.FileReadError">
      <topicdata name="FileReadError" group="list" subgroup="Properties" typeTopicId="T:Goedel.Registry.FileReadError" />
      <apidata name="FileReadError" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.FileReadError" />
      </containers>
    </api>
    <api id="Events.T:Goedel.Registry.FileReadError">
      <topicdata name="FileReadError" group="list" subgroup="Events" typeTopicId="T:Goedel.Registry.FileReadError" />
      <apidata name="FileReadError" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.FileReadError" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Registry.FileReadError">
      <topicdata name="FileReadError" group="list" subgroup="Fields" typeTopicId="T:Goedel.Registry.FileReadError" />
      <apidata name="FileReadError" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Registry.FileReadError.Throw" />
        <element api="F:Goedel.Registry.ParserException.UserData" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.FileReadError" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.FileReadError.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Registry.FileReadError.#ctor" />
        <element api="M:Goedel.Registry.FileReadError.#ctor(Goedel.Utilities.ExceptionData)" />
        <element api="M:Goedel.Registry.FileReadError.#ctor(System.String)" />
        <element api="M:Goedel.Registry.FileReadError.#ctor(Goedel.Utilities.ExceptionData,System.Exception)" />
        <element api="M:Goedel.Registry.FileReadError.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.FileReadError" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.FileReadError.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.FileReadError.#ctor" />
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.FileReadError" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.FileReadError.#ctor(Goedel.Utilities.ExceptionData)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.FileReadError.#ctor" />
      <parameters>
        <parameter name="Object">
          <type api="T:Goedel.Utilities.ExceptionData" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.FileReadError" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.FileReadError.#ctor(Goedel.Utilities.ExceptionData,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.FileReadError.#ctor" />
      <parameters>
        <parameter name="Object">
          <type api="T:Goedel.Utilities.ExceptionData" ref="true" />
        </parameter>
        <parameter name="Inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.FileReadError" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.FileReadError.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.FileReadError.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.FileReadError" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.FileReadError.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.FileReadError.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.FileReadError" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.FileReadError.Throw">
      <topicdata group="api" />
      <apidata name="Throw" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Utilities.ThrowDelegate" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.FileReadError" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.GoedelParseException">
      <topicdata group="api" />
      <apidata name="GoedelParseException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Registry.GoedelParseException.#ctor">
          <element api="M:Goedel.Registry.GoedelParseException.#ctor(System.String)" />
          <element api="M:Goedel.Registry.GoedelParseException.#ctor(System.String,Goedel.Registry.Position)" />
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.GoedelParseException">
      <topicdata name="GoedelParseException" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.GoedelParseException" />
      <apidata name="GoedelParseException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.GoedelParseException" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Registry.GoedelParseException">
      <topicdata name="GoedelParseException" group="list" subgroup="Properties" typeTopicId="T:Goedel.Registry.GoedelParseException" />
      <apidata name="GoedelParseException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.GoedelParseException" />
      </containers>
    </api>
    <api id="Events.T:Goedel.Registry.GoedelParseException">
      <topicdata name="GoedelParseException" group="list" subgroup="Events" typeTopicId="T:Goedel.Registry.GoedelParseException" />
      <apidata name="GoedelParseException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.GoedelParseException" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.GoedelParseException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Registry.GoedelParseException.#ctor(System.String)" />
        <element api="M:Goedel.Registry.GoedelParseException.#ctor(System.String,Goedel.Registry.Position)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.GoedelParseException" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.GoedelParseException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.GoedelParseException.#ctor" />
      <parameters>
        <parameter name="Message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.GoedelParseException" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.GoedelParseException.#ctor(System.String,Goedel.Registry.Position)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.GoedelParseException.#ctor" />
      <parameters>
        <parameter name="Message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Position">
          <type api="T:Goedel.Registry.Position" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.GoedelParseException" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.ID`1">
      <topicdata group="api" />
      <apidata name="ID" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ID`1.#ctor(Goedel.Registry.Position,System.String,Goedel.Registry.TYPE{`0},System.Boolean,`0)" />
        <element api="F:Goedel.Registry.ID`1.Declared" />
        <element api="F:Goedel.Registry.ID`1.Label" />
        <element api="F:Goedel.Registry.ID`1.Object" />
        <element api="F:Goedel.Registry.ID`1.Position" />
        <element api="F:Goedel.Registry.ID`1.REFs" />
        <element api="M:Goedel.Registry.ID`1.ToString" />
        <element api="F:Goedel.Registry.ID`1.Type" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.ID`1">
      <topicdata name="ID" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.ID`1" />
      <apidata name="ID" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ID`1.ToString" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ID`1" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Registry.ID`1">
      <topicdata name="ID" group="list" subgroup="Fields" typeTopicId="T:Goedel.Registry.ID`1" />
      <apidata name="ID" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="F:Goedel.Registry.ID`1.Declared" />
        <element api="F:Goedel.Registry.ID`1.Label" />
        <element api="F:Goedel.Registry.ID`1.Object" />
        <element api="F:Goedel.Registry.ID`1.Position" />
        <element api="F:Goedel.Registry.ID`1.REFs" />
        <element api="F:Goedel.Registry.ID`1.Type" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ID`1" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.ID`1.#ctor(Goedel.Registry.Position,System.String,Goedel.Registry.TYPE{`0},System.Boolean,`0)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="Position">
          <type api="T:Goedel.Registry.Position" ref="true" />
        </parameter>
        <parameter name="Label">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Type">
          <type api="T:Goedel.Registry.TYPE`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Goedel.Registry.ID`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="Declared">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ObjectIn">
          <template name="T" index="0" api="T:Goedel.Registry.ID`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ID`1" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.ID`1.Declared">
      <topicdata group="api" />
      <apidata name="Declared" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ID`1" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.ID`1.Label">
      <topicdata group="api" />
      <apidata name="Label" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ID`1" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.ID`1.Object">
      <topicdata group="api" />
      <apidata name="Object" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <template name="T" index="0" api="T:Goedel.Registry.ID`1" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ID`1" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.ID`1.Position">
      <topicdata group="api" />
      <apidata name="Position" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.Position" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ID`1" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.ID`1.REFs">
      <topicdata group="api" />
      <apidata name="REFs" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Goedel.Registry.REF`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Goedel.Registry.ID`1" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ID`1" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.ID`1.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ID`1" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.ID`1.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.TYPE`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Goedel.Registry.ID`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ID`1" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.IndentWriter">
      <topicdata group="api" />
      <apidata name="IndentWriter" group="type" subgroup="class" />
      <sourceContext file="RFCTool/Goedel.Tool.RFCTool/IndentWriter.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Registry.StructureWriter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.IndentWriter.#ctor(System.IO.TextWriter)" />
        <element api="Overload:Goedel.Registry.IndentWriter.EndDocument">
          <element api="M:Goedel.Registry.StructureWriter.EndDocument" />
          <element api="M:Goedel.Registry.IndentWriter.EndDocument(System.String)" />
        </element>
        <element api="M:Goedel.Registry.IndentWriter.EndElement(System.String)" />
        <element api="M:Goedel.Registry.IndentWriter.EndList(System.String)" />
        <element api="Overload:Goedel.Registry.IndentWriter.StartDocument">
          <element api="M:Goedel.Registry.StructureWriter.StartDocument" />
          <element api="M:Goedel.Registry.IndentWriter.StartDocument(System.String)" />
        </element>
        <element api="M:Goedel.Registry.IndentWriter.StartElement(System.String)" />
        <element api="M:Goedel.Registry.IndentWriter.StartList(System.String)" />
        <element api="Overload:Goedel.Registry.IndentWriter.WriteAttribute">
          <element api="M:Goedel.Registry.IndentWriter.WriteAttribute(System.String,System.Int32)" />
          <element api="M:Goedel.Registry.IndentWriter.WriteAttribute(System.String,System.Single)" />
          <element api="M:Goedel.Registry.IndentWriter.WriteAttribute(System.String,System.String)" />
        </element>
        <element api="M:Goedel.Registry.IndentWriter.WriteId(System.String,System.String)" />
        <element api="F:Goedel.Registry.StructureWriter.Indent" />
        <element api="F:Goedel.Registry.StructureWriter.Level" />
        <element api="M:Goedel.Registry.StructureWriter.StartLine" />
        <element api="F:Goedel.Registry.StructureWriter.StartOfLine" />
        <element api="F:Goedel.Registry.StructureWriter.TextWriter" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.IndentWriter">
      <topicdata name="IndentWriter" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.IndentWriter" />
      <apidata name="IndentWriter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Registry.IndentWriter.EndDocument">
          <element api="M:Goedel.Registry.StructureWriter.EndDocument" />
          <element api="M:Goedel.Registry.IndentWriter.EndDocument(System.String)" />
        </element>
        <element api="M:Goedel.Registry.IndentWriter.EndElement(System.String)" />
        <element api="M:Goedel.Registry.IndentWriter.EndList(System.String)" />
        <element api="Overload:Goedel.Registry.IndentWriter.StartDocument">
          <element api="M:Goedel.Registry.StructureWriter.StartDocument" />
          <element api="M:Goedel.Registry.IndentWriter.StartDocument(System.String)" />
        </element>
        <element api="M:Goedel.Registry.IndentWriter.StartElement(System.String)" />
        <element api="M:Goedel.Registry.IndentWriter.StartList(System.String)" />
        <element api="Overload:Goedel.Registry.IndentWriter.WriteAttribute">
          <element api="M:Goedel.Registry.IndentWriter.WriteAttribute(System.String,System.Int32)" />
          <element api="M:Goedel.Registry.IndentWriter.WriteAttribute(System.String,System.Single)" />
          <element api="M:Goedel.Registry.IndentWriter.WriteAttribute(System.String,System.String)" />
        </element>
        <element api="M:Goedel.Registry.IndentWriter.WriteId(System.String,System.String)" />
        <element api="M:Goedel.Registry.StructureWriter.StartLine" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.IndentWriter" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Registry.IndentWriter">
      <topicdata name="IndentWriter" group="list" subgroup="Fields" typeTopicId="T:Goedel.Registry.IndentWriter" />
      <apidata name="IndentWriter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Registry.StructureWriter.Indent" />
        <element api="F:Goedel.Registry.StructureWriter.Level" />
        <element api="F:Goedel.Registry.StructureWriter.StartOfLine" />
        <element api="F:Goedel.Registry.StructureWriter.TextWriter" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.IndentWriter" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.IndentWriter.EndDocument">
      <topicdata name="EndDocument" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="EndDocument" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Registry.StructureWriter.EndDocument" />
        <element api="M:Goedel.Registry.IndentWriter.EndDocument(System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.IndentWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.IndentWriter.StartDocument">
      <topicdata name="StartDocument" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="StartDocument" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Registry.StructureWriter.StartDocument" />
        <element api="M:Goedel.Registry.IndentWriter.StartDocument(System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.IndentWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.IndentWriter.WriteAttribute">
      <topicdata name="WriteAttribute" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="WriteAttribute" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Registry.IndentWriter.WriteAttribute(System.String,System.Int32)" />
        <element api="M:Goedel.Registry.IndentWriter.WriteAttribute(System.String,System.Single)" />
        <element api="M:Goedel.Registry.IndentWriter.WriteAttribute(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.IndentWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.IndentWriter.#ctor(System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="RFCTool/Goedel.Tool.RFCTool/IndentWriter.cs" />
      <parameters>
        <parameter name="TextWriter">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.IndentWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.IndentWriter.EndDocument(System.String)">
      <topicdata group="api" />
      <apidata name="EndDocument" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Registry.IndentWriter.EndDocument" />
      <sourceContext file="RFCTool/Goedel.Tool.RFCTool/IndentWriter.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Registry.StructureWriter.EndDocument(System.String)">
          <type api="T:Goedel.Registry.StructureWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.IndentWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.IndentWriter.EndElement(System.String)">
      <topicdata group="api" />
      <apidata name="EndElement" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="RFCTool/Goedel.Tool.RFCTool/IndentWriter.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Registry.StructureWriter.EndElement(System.String)">
          <type api="T:Goedel.Registry.StructureWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.IndentWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.IndentWriter.EndList(System.String)">
      <topicdata group="api" />
      <apidata name="EndList" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="RFCTool/Goedel.Tool.RFCTool/IndentWriter.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Registry.StructureWriter.EndList(System.String)">
          <type api="T:Goedel.Registry.StructureWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.IndentWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.IndentWriter.StartDocument(System.String)">
      <topicdata group="api" />
      <apidata name="StartDocument" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Registry.IndentWriter.StartDocument" />
      <sourceContext file="RFCTool/Goedel.Tool.RFCTool/IndentWriter.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Registry.StructureWriter.StartDocument(System.String)">
          <type api="T:Goedel.Registry.StructureWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.IndentWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.IndentWriter.StartElement(System.String)">
      <topicdata group="api" />
      <apidata name="StartElement" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="RFCTool/Goedel.Tool.RFCTool/IndentWriter.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Registry.StructureWriter.StartElement(System.String)">
          <type api="T:Goedel.Registry.StructureWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.IndentWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.IndentWriter.StartList(System.String)">
      <topicdata group="api" />
      <apidata name="StartList" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="RFCTool/Goedel.Tool.RFCTool/IndentWriter.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Registry.StructureWriter.StartList(System.String)">
          <type api="T:Goedel.Registry.StructureWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.IndentWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.IndentWriter.WriteAttribute(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="WriteAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Registry.IndentWriter.WriteAttribute" />
      <sourceContext file="RFCTool/Goedel.Tool.RFCTool/IndentWriter.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Registry.StructureWriter.WriteAttribute(System.String,System.Int32)">
          <type api="T:Goedel.Registry.StructureWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Data">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.IndentWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.IndentWriter.WriteAttribute(System.String,System.Single)">
      <topicdata group="api" />
      <apidata name="WriteAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Registry.IndentWriter.WriteAttribute" />
      <sourceContext file="RFCTool/Goedel.Tool.RFCTool/IndentWriter.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Registry.StructureWriter.WriteAttribute(System.String,System.Single)">
          <type api="T:Goedel.Registry.StructureWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Data">
          <type api="T:System.Single" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.IndentWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.IndentWriter.WriteAttribute(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Registry.IndentWriter.WriteAttribute" />
      <sourceContext file="RFCTool/Goedel.Tool.RFCTool/IndentWriter.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Registry.StructureWriter.WriteAttribute(System.String,System.String)">
          <type api="T:Goedel.Registry.StructureWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Data">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.IndentWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.IndentWriter.WriteId(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteId" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="RFCTool/Goedel.Tool.RFCTool/IndentWriter.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Registry.StructureWriter.WriteId(System.String,System.String)">
          <type api="T:Goedel.Registry.StructureWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Data">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.IndentWriter" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.InternalError">
      <topicdata group="api" />
      <apidata name="InternalError" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Registry.SchemaParse" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Registry.InternalError.#ctor">
          <element api="M:Goedel.Registry.InternalError.#ctor" />
          <element api="M:Goedel.Registry.InternalError.#ctor(System.String)" />
          <element api="M:Goedel.Registry.InternalError.#ctor(System.String,System.Exception)" />
        </element>
        <element api="F:Goedel.Registry.InternalError.Throw" />
        <element api="F:Goedel.Registry.SchemaParse.UserData" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.InternalError">
      <topicdata name="InternalError" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.InternalError" />
      <apidata name="InternalError" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.InternalError" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Registry.InternalError">
      <topicdata name="InternalError" group="list" subgroup="Properties" typeTopicId="T:Goedel.Registry.InternalError" />
      <apidata name="InternalError" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.InternalError" />
      </containers>
    </api>
    <api id="Events.T:Goedel.Registry.InternalError">
      <topicdata name="InternalError" group="list" subgroup="Events" typeTopicId="T:Goedel.Registry.InternalError" />
      <apidata name="InternalError" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.InternalError" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Registry.InternalError">
      <topicdata name="InternalError" group="list" subgroup="Fields" typeTopicId="T:Goedel.Registry.InternalError" />
      <apidata name="InternalError" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Registry.InternalError.Throw" />
        <element api="F:Goedel.Registry.SchemaParse.UserData" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.InternalError" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.InternalError.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Registry.InternalError.#ctor" />
        <element api="M:Goedel.Registry.InternalError.#ctor(System.String)" />
        <element api="M:Goedel.Registry.InternalError.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.InternalError" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.InternalError.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.InternalError.#ctor" />
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.InternalError" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.InternalError.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.InternalError.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.InternalError" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.InternalError.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.InternalError.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.InternalError" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.InternalError.Throw">
      <topicdata group="api" />
      <apidata name="Throw" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Utilities.ThrowDelegate" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.InternalError" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.InvalidToken">
      <topicdata group="api" />
      <apidata name="InvalidToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Registry.SchemaParse" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Registry.InvalidToken.#ctor">
          <element api="M:Goedel.Registry.InvalidToken.#ctor" />
          <element api="M:Goedel.Registry.InvalidToken.#ctor(System.String)" />
          <element api="M:Goedel.Registry.InvalidToken.#ctor(System.String,System.Exception)" />
        </element>
        <element api="F:Goedel.Registry.InvalidToken.Throw" />
        <element api="F:Goedel.Registry.SchemaParse.UserData" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.InvalidToken">
      <topicdata name="InvalidToken" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.InvalidToken" />
      <apidata name="InvalidToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.InvalidToken" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Registry.InvalidToken">
      <topicdata name="InvalidToken" group="list" subgroup="Properties" typeTopicId="T:Goedel.Registry.InvalidToken" />
      <apidata name="InvalidToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.InvalidToken" />
      </containers>
    </api>
    <api id="Events.T:Goedel.Registry.InvalidToken">
      <topicdata name="InvalidToken" group="list" subgroup="Events" typeTopicId="T:Goedel.Registry.InvalidToken" />
      <apidata name="InvalidToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.InvalidToken" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Registry.InvalidToken">
      <topicdata name="InvalidToken" group="list" subgroup="Fields" typeTopicId="T:Goedel.Registry.InvalidToken" />
      <apidata name="InvalidToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Registry.InvalidToken.Throw" />
        <element api="F:Goedel.Registry.SchemaParse.UserData" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.InvalidToken" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.InvalidToken.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Registry.InvalidToken.#ctor" />
        <element api="M:Goedel.Registry.InvalidToken.#ctor(System.String)" />
        <element api="M:Goedel.Registry.InvalidToken.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.InvalidToken" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.InvalidToken.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.InvalidToken.#ctor" />
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.InvalidToken" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.InvalidToken.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.InvalidToken.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.InvalidToken" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.InvalidToken.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.InvalidToken.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.InvalidToken" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.InvalidToken.Throw">
      <topicdata group="api" />
      <apidata name="Throw" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Utilities.ThrowDelegate" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.InvalidToken" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.Lexer">
      <topicdata group="api" />
      <apidata name="Lexer" group="type" subgroup="class" />
      <sourceContext file="Libraries/Goedel.Registry/Lexer.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.Lexer.#ctor(System.String)" />
        <element api="F:Goedel.Registry.Lexer.Position" />
        <element api="Overload:Goedel.Registry.Lexer.Process">
          <element api="M:Goedel.Registry.Lexer.Process(System.IO.Stream,Goedel.Registry.Parser)" />
          <element api="M:Goedel.Registry.Lexer.Process(System.IO.TextReader,Goedel.Registry.Parser)" />
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.Lexer">
      <topicdata name="Lexer" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.Lexer" />
      <apidata name="Lexer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Registry.Lexer.Process">
          <element api="M:Goedel.Registry.Lexer.Process(System.IO.Stream,Goedel.Registry.Parser)" />
          <element api="M:Goedel.Registry.Lexer.Process(System.IO.TextReader,Goedel.Registry.Parser)" />
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Lexer" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Registry.Lexer">
      <topicdata name="Lexer" group="list" subgroup="Fields" typeTopicId="T:Goedel.Registry.Lexer" />
      <apidata name="Lexer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Registry.Lexer.Position" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Lexer" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.Lexer.Process">
      <topicdata name="Process" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Process" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Registry.Lexer.Process(System.IO.Stream,Goedel.Registry.Parser)" />
        <element api="M:Goedel.Registry.Lexer.Process(System.IO.TextReader,Goedel.Registry.Parser)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Lexer" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Lexer.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Libraries/Goedel.Registry/Lexer.cs" />
      <parameters>
        <parameter name="filename">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Lexer" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.Lexer.Position">
      <topicdata group="api" />
      <apidata name="Position" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Registry/Lexer.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.Position" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Lexer" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Lexer.Process(System.IO.Stream,Goedel.Registry.Parser)">
      <topicdata group="api" />
      <apidata name="Process" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Registry.Lexer.Process" />
      <sourceContext file="Libraries/Goedel.Registry/Lexer.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Input">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="Parse">
          <type api="T:Goedel.Registry.Parser" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Lexer" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Lexer.Process(System.IO.TextReader,Goedel.Registry.Parser)">
      <topicdata group="api" />
      <apidata name="Process" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Registry.Lexer.Process" />
      <sourceContext file="Libraries/Goedel.Registry/Lexer.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Reader">
          <type api="T:System.IO.TextReader" ref="true" />
        </parameter>
        <parameter name="Parse">
          <type api="T:Goedel.Registry.Parser" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Lexer" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.Lexer.CharType">
      <topicdata group="api" />
      <apidata name="CharType" group="type" subgroup="enumeration" />
      <sourceContext file="Libraries/Goedel.Registry/Lexer.cs" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Goedel.Registry.Lexer.CharType.WhiteSpace" />
        <element api="F:Goedel.Registry.Lexer.CharType.Digit" />
        <element api="F:Goedel.Registry.Lexer.CharType.Lower" />
        <element api="F:Goedel.Registry.Lexer.CharType.Upper" />
        <element api="F:Goedel.Registry.Lexer.CharType.Underscore" />
        <element api="F:Goedel.Registry.Lexer.CharType.Slash" />
        <element api="F:Goedel.Registry.Lexer.CharType.BackSlash" />
        <element api="F:Goedel.Registry.Lexer.CharType.DoubleQuote" />
        <element api="F:Goedel.Registry.Lexer.CharType.At" />
        <element api="F:Goedel.Registry.Lexer.CharType.Left" />
        <element api="F:Goedel.Registry.Lexer.CharType.Right" />
        <element api="F:Goedel.Registry.Lexer.CharType.Period" />
        <element api="F:Goedel.Registry.Lexer.CharType.Comma" />
        <element api="F:Goedel.Registry.Lexer.CharType.Line" />
        <element api="F:Goedel.Registry.Lexer.CharType.CR" />
        <element api="F:Goedel.Registry.Lexer.CharType.Other" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Lexer" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.Lexer.CharType.At">
      <topicdata group="api" notopic="" />
      <apidata name="At" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Lexer.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.Lexer.CharType" ref="false">
          <type api="T:Goedel.Registry.Lexer" ref="true" />
        </type>
      </returns>
      <value>8</value>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Lexer.CharType" ref="false">
          <type api="T:Goedel.Registry.Lexer" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Registry.Lexer.CharType.BackSlash">
      <topicdata group="api" notopic="" />
      <apidata name="BackSlash" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Lexer.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.Lexer.CharType" ref="false">
          <type api="T:Goedel.Registry.Lexer" ref="true" />
        </type>
      </returns>
      <value>6</value>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Lexer.CharType" ref="false">
          <type api="T:Goedel.Registry.Lexer" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Registry.Lexer.CharType.Comma">
      <topicdata group="api" notopic="" />
      <apidata name="Comma" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Lexer.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.Lexer.CharType" ref="false">
          <type api="T:Goedel.Registry.Lexer" ref="true" />
        </type>
      </returns>
      <value>12</value>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Lexer.CharType" ref="false">
          <type api="T:Goedel.Registry.Lexer" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Registry.Lexer.CharType.CR">
      <topicdata group="api" notopic="" />
      <apidata name="CR" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Lexer.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.Lexer.CharType" ref="false">
          <type api="T:Goedel.Registry.Lexer" ref="true" />
        </type>
      </returns>
      <value>14</value>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Lexer.CharType" ref="false">
          <type api="T:Goedel.Registry.Lexer" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Registry.Lexer.CharType.Digit">
      <topicdata group="api" notopic="" />
      <apidata name="Digit" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Lexer.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.Lexer.CharType" ref="false">
          <type api="T:Goedel.Registry.Lexer" ref="true" />
        </type>
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Lexer.CharType" ref="false">
          <type api="T:Goedel.Registry.Lexer" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Registry.Lexer.CharType.DoubleQuote">
      <topicdata group="api" notopic="" />
      <apidata name="DoubleQuote" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Lexer.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.Lexer.CharType" ref="false">
          <type api="T:Goedel.Registry.Lexer" ref="true" />
        </type>
      </returns>
      <value>7</value>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Lexer.CharType" ref="false">
          <type api="T:Goedel.Registry.Lexer" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Registry.Lexer.CharType.Left">
      <topicdata group="api" notopic="" />
      <apidata name="Left" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Lexer.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.Lexer.CharType" ref="false">
          <type api="T:Goedel.Registry.Lexer" ref="true" />
        </type>
      </returns>
      <value>9</value>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Lexer.CharType" ref="false">
          <type api="T:Goedel.Registry.Lexer" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Registry.Lexer.CharType.Line">
      <topicdata group="api" notopic="" />
      <apidata name="Line" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Lexer.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.Lexer.CharType" ref="false">
          <type api="T:Goedel.Registry.Lexer" ref="true" />
        </type>
      </returns>
      <value>13</value>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Lexer.CharType" ref="false">
          <type api="T:Goedel.Registry.Lexer" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Registry.Lexer.CharType.Lower">
      <topicdata group="api" notopic="" />
      <apidata name="Lower" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Lexer.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.Lexer.CharType" ref="false">
          <type api="T:Goedel.Registry.Lexer" ref="true" />
        </type>
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Lexer.CharType" ref="false">
          <type api="T:Goedel.Registry.Lexer" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Registry.Lexer.CharType.Other">
      <topicdata group="api" notopic="" />
      <apidata name="Other" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Lexer.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.Lexer.CharType" ref="false">
          <type api="T:Goedel.Registry.Lexer" ref="true" />
        </type>
      </returns>
      <value>15</value>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Lexer.CharType" ref="false">
          <type api="T:Goedel.Registry.Lexer" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Registry.Lexer.CharType.Period">
      <topicdata group="api" notopic="" />
      <apidata name="Period" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Lexer.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.Lexer.CharType" ref="false">
          <type api="T:Goedel.Registry.Lexer" ref="true" />
        </type>
      </returns>
      <value>11</value>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Lexer.CharType" ref="false">
          <type api="T:Goedel.Registry.Lexer" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Registry.Lexer.CharType.Right">
      <topicdata group="api" notopic="" />
      <apidata name="Right" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Lexer.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.Lexer.CharType" ref="false">
          <type api="T:Goedel.Registry.Lexer" ref="true" />
        </type>
      </returns>
      <value>10</value>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Lexer.CharType" ref="false">
          <type api="T:Goedel.Registry.Lexer" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Registry.Lexer.CharType.Slash">
      <topicdata group="api" notopic="" />
      <apidata name="Slash" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Lexer.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.Lexer.CharType" ref="false">
          <type api="T:Goedel.Registry.Lexer" ref="true" />
        </type>
      </returns>
      <value>5</value>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Lexer.CharType" ref="false">
          <type api="T:Goedel.Registry.Lexer" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Registry.Lexer.CharType.Underscore">
      <topicdata group="api" notopic="" />
      <apidata name="Underscore" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Lexer.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.Lexer.CharType" ref="false">
          <type api="T:Goedel.Registry.Lexer" ref="true" />
        </type>
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Lexer.CharType" ref="false">
          <type api="T:Goedel.Registry.Lexer" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Registry.Lexer.CharType.Upper">
      <topicdata group="api" notopic="" />
      <apidata name="Upper" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Lexer.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.Lexer.CharType" ref="false">
          <type api="T:Goedel.Registry.Lexer" ref="true" />
        </type>
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Lexer.CharType" ref="false">
          <type api="T:Goedel.Registry.Lexer" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Goedel.Registry.Lexer.CharType.WhiteSpace">
      <topicdata group="api" notopic="" />
      <apidata name="WhiteSpace" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Lexer.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.Lexer.CharType" ref="false">
          <type api="T:Goedel.Registry.Lexer" ref="true" />
        </type>
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Lexer.CharType" ref="false">
          <type api="T:Goedel.Registry.Lexer" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:Goedel.Registry.NoCommand">
      <topicdata group="api" />
      <apidata name="NoCommand" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Registry.ParserException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Registry.NoCommand.#ctor">
          <element api="M:Goedel.Registry.NoCommand.#ctor" />
          <element api="M:Goedel.Registry.NoCommand.#ctor(System.String)" />
          <element api="M:Goedel.Registry.NoCommand.#ctor(System.String,System.Exception)" />
        </element>
        <element api="F:Goedel.Registry.NoCommand.Throw" />
        <element api="F:Goedel.Registry.ParserException.UserData" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.NoCommand">
      <topicdata name="NoCommand" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.NoCommand" />
      <apidata name="NoCommand" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.NoCommand" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Registry.NoCommand">
      <topicdata name="NoCommand" group="list" subgroup="Properties" typeTopicId="T:Goedel.Registry.NoCommand" />
      <apidata name="NoCommand" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.NoCommand" />
      </containers>
    </api>
    <api id="Events.T:Goedel.Registry.NoCommand">
      <topicdata name="NoCommand" group="list" subgroup="Events" typeTopicId="T:Goedel.Registry.NoCommand" />
      <apidata name="NoCommand" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.NoCommand" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Registry.NoCommand">
      <topicdata name="NoCommand" group="list" subgroup="Fields" typeTopicId="T:Goedel.Registry.NoCommand" />
      <apidata name="NoCommand" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Registry.NoCommand.Throw" />
        <element api="F:Goedel.Registry.ParserException.UserData" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.NoCommand" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.NoCommand.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Registry.NoCommand.#ctor" />
        <element api="M:Goedel.Registry.NoCommand.#ctor(System.String)" />
        <element api="M:Goedel.Registry.NoCommand.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.NoCommand" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.NoCommand.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.NoCommand.#ctor" />
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.NoCommand" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.NoCommand.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.NoCommand.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.NoCommand" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.NoCommand.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.NoCommand.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.NoCommand" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.NoCommand.Throw">
      <topicdata group="api" />
      <apidata name="Throw" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Utilities.ThrowDelegate" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.NoCommand" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.NotFoundReserved">
      <topicdata group="api" />
      <apidata name="NotFoundReserved" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Registry.SchemaParse" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Registry.NotFoundReserved.#ctor">
          <element api="M:Goedel.Registry.NotFoundReserved.#ctor" />
          <element api="M:Goedel.Registry.NotFoundReserved.#ctor(Goedel.Utilities.ExceptionData)" />
          <element api="M:Goedel.Registry.NotFoundReserved.#ctor(System.String)" />
          <element api="M:Goedel.Registry.NotFoundReserved.#ctor(Goedel.Utilities.ExceptionData,System.Exception)" />
          <element api="M:Goedel.Registry.NotFoundReserved.#ctor(System.String,System.Exception)" />
        </element>
        <element api="F:Goedel.Registry.NotFoundReserved.Throw" />
        <element api="F:Goedel.Registry.SchemaParse.UserData" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.NotFoundReserved">
      <topicdata name="NotFoundReserved" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.NotFoundReserved" />
      <apidata name="NotFoundReserved" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.NotFoundReserved" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Registry.NotFoundReserved">
      <topicdata name="NotFoundReserved" group="list" subgroup="Properties" typeTopicId="T:Goedel.Registry.NotFoundReserved" />
      <apidata name="NotFoundReserved" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.NotFoundReserved" />
      </containers>
    </api>
    <api id="Events.T:Goedel.Registry.NotFoundReserved">
      <topicdata name="NotFoundReserved" group="list" subgroup="Events" typeTopicId="T:Goedel.Registry.NotFoundReserved" />
      <apidata name="NotFoundReserved" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.NotFoundReserved" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Registry.NotFoundReserved">
      <topicdata name="NotFoundReserved" group="list" subgroup="Fields" typeTopicId="T:Goedel.Registry.NotFoundReserved" />
      <apidata name="NotFoundReserved" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Registry.NotFoundReserved.Throw" />
        <element api="F:Goedel.Registry.SchemaParse.UserData" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.NotFoundReserved" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.NotFoundReserved.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Registry.NotFoundReserved.#ctor" />
        <element api="M:Goedel.Registry.NotFoundReserved.#ctor(Goedel.Utilities.ExceptionData)" />
        <element api="M:Goedel.Registry.NotFoundReserved.#ctor(System.String)" />
        <element api="M:Goedel.Registry.NotFoundReserved.#ctor(Goedel.Utilities.ExceptionData,System.Exception)" />
        <element api="M:Goedel.Registry.NotFoundReserved.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.NotFoundReserved" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.NotFoundReserved.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.NotFoundReserved.#ctor" />
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.NotFoundReserved" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.NotFoundReserved.#ctor(Goedel.Utilities.ExceptionData)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.NotFoundReserved.#ctor" />
      <parameters>
        <parameter name="Object">
          <type api="T:Goedel.Utilities.ExceptionData" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.NotFoundReserved" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.NotFoundReserved.#ctor(Goedel.Utilities.ExceptionData,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.NotFoundReserved.#ctor" />
      <parameters>
        <parameter name="Object">
          <type api="T:Goedel.Utilities.ExceptionData" ref="true" />
        </parameter>
        <parameter name="Inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.NotFoundReserved" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.NotFoundReserved.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.NotFoundReserved.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.NotFoundReserved" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.NotFoundReserved.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.NotFoundReserved.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.NotFoundReserved" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.NotFoundReserved.Throw">
      <topicdata group="api" />
      <apidata name="Throw" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Utilities.ThrowDelegate" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.NotFoundReserved" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.OutputFormat">
      <topicdata group="api" />
      <apidata name="OutputFormat" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Goedel.Registry.OutputFormat.Goedel" />
        <element api="F:Goedel.Registry.OutputFormat.XML" />
        <element api="F:Goedel.Registry.OutputFormat.JSON" />
        <element api="F:Goedel.Registry.OutputFormat.MD" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.OutputFormat.Goedel">
      <topicdata group="api" notopic="" />
      <apidata name="Goedel" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.OutputFormat" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.OutputFormat" ref="false" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.OutputFormat.JSON">
      <topicdata group="api" notopic="" />
      <apidata name="JSON" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.OutputFormat" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.OutputFormat" ref="false" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.OutputFormat.MD">
      <topicdata group="api" notopic="" />
      <apidata name="MD" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.OutputFormat" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.OutputFormat" ref="false" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.OutputFormat.XML">
      <topicdata group="api" notopic="" />
      <apidata name="XML" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.OutputFormat" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.OutputFormat" ref="false" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.Parser">
      <topicdata group="api" />
      <apidata name="Parser" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.Parser.#ctor" />
        <element api="M:Goedel.Registry.Parser.Init" />
        <element api="F:Goedel.Registry.Parser.Options" />
        <element api="M:Goedel.Registry.Parser.Process(Goedel.Registry.TokenType,Goedel.Registry.Position,System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.Parser">
      <topicdata name="Parser" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.Parser" />
      <apidata name="Parser" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.Parser.Init" />
        <element api="M:Goedel.Registry.Parser.Process(Goedel.Registry.TokenType,Goedel.Registry.Position,System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Parser" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Registry.Parser">
      <topicdata name="Parser" group="list" subgroup="Fields" typeTopicId="T:Goedel.Registry.Parser" />
      <apidata name="Parser" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="F:Goedel.Registry.Parser.Options" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Parser" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Parser.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Parser" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Parser.Init">
      <topicdata group="api" />
      <apidata name="Init" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Parser" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.Parser.Options">
      <topicdata group="api" />
      <apidata name="Options" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.Dispatch" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Parser" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Parser.Process(Goedel.Registry.TokenType,Goedel.Registry.Position,System.String)">
      <topicdata group="api" />
      <apidata name="Process" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="Token">
          <type api="T:Goedel.Registry.TokenType" ref="false" />
        </parameter>
        <parameter name="Position">
          <type api="T:Goedel.Registry.Position" ref="true" />
        </parameter>
        <parameter name="Text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Parser" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.ParserException">
      <topicdata group="api" />
      <apidata name="ParserException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Goedel.Registry.FileReadError" ref="true" />
          <type api="T:Goedel.Registry.UnknownCommand" ref="true" />
          <type api="T:Goedel.Registry.UnknownOption" ref="true" />
          <type api="T:Goedel.Registry.NoCommand" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Registry.ParserException.#ctor">
          <element api="M:Goedel.Registry.ParserException.#ctor" />
          <element api="M:Goedel.Registry.ParserException.#ctor(System.String)" />
          <element api="M:Goedel.Registry.ParserException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="F:Goedel.Registry.ParserException.Throw" />
        <element api="F:Goedel.Registry.ParserException.UserData" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.ParserException">
      <topicdata name="ParserException" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.ParserException" />
      <apidata name="ParserException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ParserException" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Registry.ParserException">
      <topicdata name="ParserException" group="list" subgroup="Properties" typeTopicId="T:Goedel.Registry.ParserException" />
      <apidata name="ParserException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ParserException" />
      </containers>
    </api>
    <api id="Events.T:Goedel.Registry.ParserException">
      <topicdata name="ParserException" group="list" subgroup="Events" typeTopicId="T:Goedel.Registry.ParserException" />
      <apidata name="ParserException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ParserException" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Registry.ParserException">
      <topicdata name="ParserException" group="list" subgroup="Fields" typeTopicId="T:Goedel.Registry.ParserException" />
      <apidata name="ParserException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Registry.ParserException.Throw" />
        <element api="F:Goedel.Registry.ParserException.UserData" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ParserException" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.ParserException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Registry.ParserException.#ctor" />
        <element api="M:Goedel.Registry.ParserException.#ctor(System.String)" />
        <element api="M:Goedel.Registry.ParserException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ParserException" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.ParserException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.ParserException.#ctor" />
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ParserException" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.ParserException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.ParserException.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ParserException" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.ParserException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.ParserException.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ParserException" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.ParserException.Throw">
      <topicdata group="api" />
      <apidata name="Throw" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Utilities.ThrowDelegate" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ParserException" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.ParserException.UserData">
      <topicdata group="api" />
      <apidata name="UserData" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ParserException" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.Position">
      <topicdata group="api" />
      <apidata name="Position" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.Position.#ctor(System.String)" />
        <element api="F:Goedel.Registry.Position.Ch" />
        <element api="F:Goedel.Registry.Position.Col" />
        <element api="F:Goedel.Registry.Position.File" />
        <element api="F:Goedel.Registry.Position.Ln" />
        <element api="M:Goedel.Registry.Position.ToString" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.Position">
      <topicdata name="Position" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.Position" />
      <apidata name="Position" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.Position.ToString" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Position" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Registry.Position">
      <topicdata name="Position" group="list" subgroup="Fields" typeTopicId="T:Goedel.Registry.Position" />
      <apidata name="Position" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Registry.Position.Ch" />
        <element api="F:Goedel.Registry.Position.Col" />
        <element api="F:Goedel.Registry.Position.File" />
        <element api="F:Goedel.Registry.Position.Ln" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Position" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Position.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="NameIn">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Position" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.Position.Ch">
      <topicdata group="api" />
      <apidata name="Ch" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Position" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.Position.Col">
      <topicdata group="api" />
      <apidata name="Col" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Position" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.Position.File">
      <topicdata group="api" />
      <apidata name="File" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.Source" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Position" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.Position.Ln">
      <topicdata group="api" />
      <apidata name="Ln" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Position" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Position.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Position" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.REF`1">
      <topicdata group="api" />
      <apidata name="REF" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Goedel.Registry.TOKEN`1" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Registry.REF`1.#ctor">
          <element api="M:Goedel.Registry.REF`1.#ctor" />
          <element api="M:Goedel.Registry.REF`1.#ctor(Goedel.Registry.Position,Goedel.Registry.ID{`0},`0)" />
        </element>
        <element api="P:Goedel.Registry.REF`1.Definition" />
        <element api="F:Goedel.Registry.REF`1.ID" />
        <element api="P:Goedel.Registry.REF`1.Label" />
        <element api="F:Goedel.Registry.REF`1.Object" />
        <element api="F:Goedel.Registry.REF`1.Position" />
        <element api="M:Goedel.Registry.REF`1.ToString" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.REF`1">
      <topicdata name="REF" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.REF`1" />
      <apidata name="REF" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.REF`1.ToString" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.REF`1" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Registry.REF`1">
      <topicdata name="REF" group="list" subgroup="Properties" typeTopicId="T:Goedel.Registry.REF`1" />
      <apidata name="REF" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="P:Goedel.Registry.REF`1.Definition" />
        <element api="P:Goedel.Registry.REF`1.Label" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.REF`1" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Registry.REF`1">
      <topicdata name="REF" group="list" subgroup="Fields" typeTopicId="T:Goedel.Registry.REF`1" />
      <apidata name="REF" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="F:Goedel.Registry.REF`1.ID" />
        <element api="F:Goedel.Registry.REF`1.Object" />
        <element api="F:Goedel.Registry.REF`1.Position" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.REF`1" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.REF`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Registry.REF`1.#ctor" />
        <element api="M:Goedel.Registry.REF`1.#ctor(Goedel.Registry.Position,Goedel.Registry.ID{`0},`0)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.REF`1" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.REF`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.REF`1.#ctor" />
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.REF`1" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.REF`1.#ctor(Goedel.Registry.Position,Goedel.Registry.ID{`0},`0)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.REF`1.#ctor" />
      <parameters>
        <parameter name="Position">
          <type api="T:Goedel.Registry.Position" ref="true" />
        </parameter>
        <parameter name="ID">
          <type api="T:Goedel.Registry.ID`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Goedel.Registry.REF`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="ObjectIn">
          <template name="T" index="0" api="T:Goedel.Registry.REF`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.REF`1" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Registry.REF`1.Definition">
      <topicdata group="api" />
      <apidata name="Definition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Definition" />
      <returns>
        <template name="T" index="0" api="T:Goedel.Registry.REF`1" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.REF`1" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.REF`1.ID">
      <topicdata group="api" />
      <apidata name="ID" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.ID`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Goedel.Registry.REF`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.REF`1" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Registry.REF`1.Label">
      <topicdata group="api" />
      <apidata name="Label" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Label" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.REF`1" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.REF`1.Object">
      <topicdata group="api" />
      <apidata name="Object" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <template name="T" index="0" api="T:Goedel.Registry.REF`1" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.REF`1" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.REF`1.Position">
      <topicdata group="api" />
      <apidata name="Position" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.Position" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.REF`1" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.REF`1.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.REF`1" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.Registry`1">
      <topicdata group="api" />
      <apidata name="Registry" group="type" subgroup="class" />
      <sourceContext file="Libraries/Goedel.Registry/Registry.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.Registry`1.#ctor" />
        <element api="F:Goedel.Registry.Registry`1.Files" />
        <element api="M:Goedel.Registry.Registry`1.FindType(System.String)" />
        <element api="M:Goedel.Registry.Registry`1.ID(Goedel.Registry.Position,System.String,Goedel.Registry.TYPE{`0},`0)" />
        <element api="F:Goedel.Registry.Registry`1.IDs" />
        <element api="M:Goedel.Registry.Registry`1.REF(Goedel.Registry.Position,System.String,Goedel.Registry.TYPE{`0},`0)" />
        <element api="M:Goedel.Registry.Registry`1.SetFile(System.String)" />
        <element api="M:Goedel.Registry.Registry`1.TOKEN(Goedel.Registry.Position,System.String,Goedel.Registry.TYPE{`0},`0)" />
        <element api="M:Goedel.Registry.Registry`1.TYPE(System.String)" />
        <element api="F:Goedel.Registry.Registry`1.Types" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.Registry`1">
      <topicdata name="Registry" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.Registry`1" />
      <apidata name="Registry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.Registry`1.FindType(System.String)" />
        <element api="M:Goedel.Registry.Registry`1.ID(Goedel.Registry.Position,System.String,Goedel.Registry.TYPE{`0},`0)" />
        <element api="M:Goedel.Registry.Registry`1.REF(Goedel.Registry.Position,System.String,Goedel.Registry.TYPE{`0},`0)" />
        <element api="M:Goedel.Registry.Registry`1.SetFile(System.String)" />
        <element api="M:Goedel.Registry.Registry`1.TOKEN(Goedel.Registry.Position,System.String,Goedel.Registry.TYPE{`0},`0)" />
        <element api="M:Goedel.Registry.Registry`1.TYPE(System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Registry`1" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Registry.Registry`1">
      <topicdata name="Registry" group="list" subgroup="Fields" typeTopicId="T:Goedel.Registry.Registry`1" />
      <apidata name="Registry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="F:Goedel.Registry.Registry`1.Files" />
        <element api="F:Goedel.Registry.Registry`1.IDs" />
        <element api="F:Goedel.Registry.Registry`1.Types" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Registry`1" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Registry`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Libraries/Goedel.Registry/Registry.cs" />
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Registry`1" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.Registry`1.Files">
      <topicdata group="api" />
      <apidata name="Files" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Registry/Registry.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Goedel.Registry.Source" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Registry`1" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Registry`1.FindType(System.String)">
      <topicdata group="api" />
      <apidata name="FindType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Registry/Registry.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Token">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Registry.TYPE`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Goedel.Registry.Registry`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Registry`1" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Registry`1.ID(Goedel.Registry.Position,System.String,Goedel.Registry.TYPE{`0},`0)">
      <topicdata group="api" />
      <apidata name="ID" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Registry/Registry.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Position">
          <type api="T:Goedel.Registry.Position" ref="true" />
        </parameter>
        <parameter name="Text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Type">
          <type api="T:Goedel.Registry.TYPE`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Goedel.Registry.Registry`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="ObjectIn">
          <template name="T" index="0" api="T:Goedel.Registry.Registry`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Registry.ID`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Goedel.Registry.Registry`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Registry`1" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.Registry`1.IDs">
      <topicdata group="api" />
      <apidata name="IDs" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Registry/Registry.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Goedel.Registry.ID`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Goedel.Registry.Registry`1" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Registry`1" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Registry`1.REF(Goedel.Registry.Position,System.String,Goedel.Registry.TYPE{`0},`0)">
      <topicdata group="api" />
      <apidata name="REF" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Registry/Registry.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Position">
          <type api="T:Goedel.Registry.Position" ref="true" />
        </parameter>
        <parameter name="Text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Type">
          <type api="T:Goedel.Registry.TYPE`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Goedel.Registry.Registry`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="ObjectIn">
          <template name="T" index="0" api="T:Goedel.Registry.Registry`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Registry.REF`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Goedel.Registry.Registry`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Registry`1" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Registry`1.SetFile(System.String)">
      <topicdata group="api" />
      <apidata name="SetFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Registry/Registry.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Registry.Source" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Registry`1" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Registry`1.TOKEN(Goedel.Registry.Position,System.String,Goedel.Registry.TYPE{`0},`0)">
      <topicdata group="api" />
      <apidata name="TOKEN" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Registry/Registry.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Position">
          <type api="T:Goedel.Registry.Position" ref="true" />
        </parameter>
        <parameter name="Text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Type">
          <type api="T:Goedel.Registry.TYPE`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Goedel.Registry.Registry`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="ObjectIn">
          <template name="T" index="0" api="T:Goedel.Registry.Registry`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Registry.TOKEN`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Goedel.Registry.Registry`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Registry`1" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Registry`1.TYPE(System.String)">
      <topicdata group="api" />
      <apidata name="TYPE" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Registry/Registry.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Registry.TYPE`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Goedel.Registry.Registry`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Registry`1" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.Registry`1.Types">
      <topicdata group="api" />
      <apidata name="Types" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Registry/Registry.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Goedel.Registry.TYPE`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Goedel.Registry.Registry`1" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Registry`1" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.SchemaParse">
      <topicdata group="api" />
      <apidata name="SchemaParse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Goedel.Registry.NotFoundReserved" ref="true" />
          <type api="T:Goedel.Registry.InternalError" ref="true" />
          <type api="T:Goedel.Registry.InvalidToken" ref="true" />
          <type api="T:Goedel.Registry.ExpectedStart" ref="true" />
          <type api="T:Goedel.Registry.ExpectedClass" ref="true" />
          <type api="T:Goedel.Registry.Expected" ref="true" />
          <type api="T:Goedel.Registry.TooManyClose" ref="true" />
          <type api="T:Goedel.Registry.UnreachableCode" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Registry.SchemaParse.#ctor">
          <element api="M:Goedel.Registry.SchemaParse.#ctor" />
          <element api="M:Goedel.Registry.SchemaParse.#ctor(System.String)" />
          <element api="M:Goedel.Registry.SchemaParse.#ctor(System.String,System.Exception)" />
        </element>
        <element api="F:Goedel.Registry.SchemaParse.Throw" />
        <element api="F:Goedel.Registry.SchemaParse.UserData" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.SchemaParse">
      <topicdata name="SchemaParse" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.SchemaParse" />
      <apidata name="SchemaParse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.SchemaParse" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Registry.SchemaParse">
      <topicdata name="SchemaParse" group="list" subgroup="Properties" typeTopicId="T:Goedel.Registry.SchemaParse" />
      <apidata name="SchemaParse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.SchemaParse" />
      </containers>
    </api>
    <api id="Events.T:Goedel.Registry.SchemaParse">
      <topicdata name="SchemaParse" group="list" subgroup="Events" typeTopicId="T:Goedel.Registry.SchemaParse" />
      <apidata name="SchemaParse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.SchemaParse" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Registry.SchemaParse">
      <topicdata name="SchemaParse" group="list" subgroup="Fields" typeTopicId="T:Goedel.Registry.SchemaParse" />
      <apidata name="SchemaParse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Registry.SchemaParse.Throw" />
        <element api="F:Goedel.Registry.SchemaParse.UserData" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.SchemaParse" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.SchemaParse.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Registry.SchemaParse.#ctor" />
        <element api="M:Goedel.Registry.SchemaParse.#ctor(System.String)" />
        <element api="M:Goedel.Registry.SchemaParse.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.SchemaParse" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.SchemaParse.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.SchemaParse.#ctor" />
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.SchemaParse" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.SchemaParse.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.SchemaParse.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.SchemaParse" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.SchemaParse.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.SchemaParse.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.SchemaParse" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.SchemaParse.Throw">
      <topicdata group="api" />
      <apidata name="Throw" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Utilities.ThrowDelegate" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.SchemaParse" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.SchemaParse.UserData">
      <topicdata group="api" />
      <apidata name="UserData" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.SchemaParse" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.Script">
      <topicdata group="api" />
      <apidata name="Script" group="type" subgroup="class" />
      <sourceContext file="Libraries/Goedel.Registry/Script.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Goedel.Registry.Boilerplate" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Registry.Script.#ctor">
          <element api="M:Goedel.Registry.Script.#ctor" />
          <element api="M:Goedel.Registry.Script.#ctor(System.IO.TextWriter)" />
        </element>
        <element api="F:Goedel.Registry.Script._EntryAssembly" />
        <element api="P:Goedel.Registry.Script._Filename" />
        <element api="P:Goedel.Registry.Script._Indent" />
        <element api="P:Goedel.Registry.Script._Output" />
        <element api="F:Goedel.Registry.Script._TestEntryAssembly" />
        <element api="M:Goedel.Registry.Script.AssemblyBuildTime(System.Reflection.Assembly)" />
        <element api="P:Goedel.Registry.Script.AssemblyCompany" />
        <element api="P:Goedel.Registry.Script.AssemblyCopyright" />
        <element api="P:Goedel.Registry.Script.AssemblyDescription" />
        <element api="P:Goedel.Registry.Script.AssemblyProduct" />
        <element api="P:Goedel.Registry.Script.AssemblyTitle" />
        <element api="P:Goedel.Registry.Script.AssemblyVersion" />
        <element api="M:Goedel.Registry.Script.Close" />
        <element api="Overload:Goedel.Registry.Script.CommentSummary">
          <element api="M:Goedel.Registry.Script.CommentSummary(System.Int32,System.Collections.Generic.List{System.String})" />
          <element api="M:Goedel.Registry.Script.CommentSummary(System.Int32,System.String)" />
        </element>
        <element api="P:Goedel.Registry.Script.EntryAssembly" />
        <element api="M:Goedel.Registry.Script.GetAssemblyCompany(System.Reflection.Assembly)" />
        <element api="M:Goedel.Registry.Script.GetAssemblyCopyright(System.Reflection.Assembly)" />
        <element api="M:Goedel.Registry.Script.GetAssemblyDescription(System.Reflection.Assembly)" />
        <element api="M:Goedel.Registry.Script.GetAssemblyProduct(System.Reflection.Assembly)" />
        <element api="M:Goedel.Registry.Script.GetAssemblyTitle(System.Reflection.Assembly)" />
        <element api="M:Goedel.Registry.Script.GetAssemblyVersion(System.Reflection.Assembly)" />
        <element api="M:Goedel.Registry.Script.LocalizeTime(System.DateTime,System.Boolean)" />
        <element api="P:Goedel.Registry.Script.Platform" />
        <element api="P:Goedel.Registry.Script.PlatformVersion" />
        <element api="Overload:Goedel.Registry.Script.SetTextWriter">
          <element api="M:Goedel.Registry.Script.SetTextWriter(System.IO.TextWriter)" />
          <element api="M:Goedel.Registry.Script.SetTextWriter(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.Script">
      <topicdata name="Script" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.Script" />
      <apidata name="Script" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.Script.AssemblyBuildTime(System.Reflection.Assembly)" />
        <element api="M:Goedel.Registry.Script.Close" />
        <element api="Overload:Goedel.Registry.Script.CommentSummary">
          <element api="M:Goedel.Registry.Script.CommentSummary(System.Int32,System.Collections.Generic.List{System.String})" />
          <element api="M:Goedel.Registry.Script.CommentSummary(System.Int32,System.String)" />
        </element>
        <element api="M:Goedel.Registry.Script.GetAssemblyCompany(System.Reflection.Assembly)" />
        <element api="M:Goedel.Registry.Script.GetAssemblyCopyright(System.Reflection.Assembly)" />
        <element api="M:Goedel.Registry.Script.GetAssemblyDescription(System.Reflection.Assembly)" />
        <element api="M:Goedel.Registry.Script.GetAssemblyProduct(System.Reflection.Assembly)" />
        <element api="M:Goedel.Registry.Script.GetAssemblyTitle(System.Reflection.Assembly)" />
        <element api="M:Goedel.Registry.Script.GetAssemblyVersion(System.Reflection.Assembly)" />
        <element api="M:Goedel.Registry.Script.LocalizeTime(System.DateTime,System.Boolean)" />
        <element api="Overload:Goedel.Registry.Script.SetTextWriter">
          <element api="M:Goedel.Registry.Script.SetTextWriter(System.IO.TextWriter)" />
          <element api="M:Goedel.Registry.Script.SetTextWriter(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Registry.Script">
      <topicdata name="Script" group="list" subgroup="Properties" typeTopicId="T:Goedel.Registry.Script" />
      <apidata name="Script" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Goedel.Registry.Script._Filename" />
        <element api="P:Goedel.Registry.Script._Indent" />
        <element api="P:Goedel.Registry.Script._Output" />
        <element api="P:Goedel.Registry.Script.AssemblyCompany" />
        <element api="P:Goedel.Registry.Script.AssemblyCopyright" />
        <element api="P:Goedel.Registry.Script.AssemblyDescription" />
        <element api="P:Goedel.Registry.Script.AssemblyProduct" />
        <element api="P:Goedel.Registry.Script.AssemblyTitle" />
        <element api="P:Goedel.Registry.Script.AssemblyVersion" />
        <element api="P:Goedel.Registry.Script.EntryAssembly" />
        <element api="P:Goedel.Registry.Script.Platform" />
        <element api="P:Goedel.Registry.Script.PlatformVersion" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Registry.Script">
      <topicdata name="Script" group="list" subgroup="Fields" typeTopicId="T:Goedel.Registry.Script" />
      <apidata name="Script" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Registry.Script._EntryAssembly" />
        <element api="F:Goedel.Registry.Script._TestEntryAssembly" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.Script.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Registry.Script.#ctor" />
        <element api="M:Goedel.Registry.Script.#ctor(System.IO.TextWriter)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.Script.CommentSummary">
      <topicdata name="CommentSummary" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="CommentSummary" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Registry.Script.CommentSummary(System.Int32,System.Collections.Generic.List{System.String})" />
        <element api="M:Goedel.Registry.Script.CommentSummary(System.Int32,System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.Script.SetTextWriter">
      <topicdata name="SetTextWriter" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="SetTextWriter" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Registry.Script.SetTextWriter(System.IO.TextWriter)" />
        <element api="M:Goedel.Registry.Script.SetTextWriter(System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Script.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.Script.#ctor" />
      <sourceContext file="Libraries/Goedel.Registry/Script.cs" />
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Script.#ctor(System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.Script.#ctor" />
      <sourceContext file="Libraries/Goedel.Registry/Script.cs" />
      <parameters>
        <parameter name="Output">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.Script._EntryAssembly">
      <topicdata group="api" />
      <apidata name="_EntryAssembly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Script.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Reflection.Assembly" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Registry.Script._Filename">
      <topicdata group="api" />
      <apidata name="_Filename" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Registry/Script.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get__Filename" />
      <setter name="set__Filename" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Registry.Script._Indent">
      <topicdata group="api" />
      <apidata name="_Indent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Registry/Script.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get__Indent" />
      <setter name="set__Indent" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Registry.Script._Output">
      <topicdata group="api" />
      <apidata name="_Output" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Registry/Script.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get__Output" />
      <setter name="set__Output" />
      <returns>
        <type api="T:System.IO.TextWriter" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.Script._TestEntryAssembly">
      <topicdata group="api" />
      <apidata name="_TestEntryAssembly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Script.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Script.AssemblyBuildTime(System.Reflection.Assembly)">
      <topicdata group="api" />
      <apidata name="AssemblyBuildTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Script.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Assembly">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Registry.Script.AssemblyCompany">
      <topicdata group="api" />
      <apidata name="AssemblyCompany" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Script.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AssemblyCompany" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Registry.Script.AssemblyCopyright">
      <topicdata group="api" />
      <apidata name="AssemblyCopyright" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Script.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AssemblyCopyright" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Registry.Script.AssemblyDescription">
      <topicdata group="api" />
      <apidata name="AssemblyDescription" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Script.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AssemblyDescription" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Registry.Script.AssemblyProduct">
      <topicdata group="api" />
      <apidata name="AssemblyProduct" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Script.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AssemblyProduct" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Registry.Script.AssemblyTitle">
      <topicdata group="api" />
      <apidata name="AssemblyTitle" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Script.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AssemblyTitle" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Registry.Script.AssemblyVersion">
      <topicdata group="api" />
      <apidata name="AssemblyVersion" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Script.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AssemblyVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Script.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Registry/Script.cs" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Script.CommentSummary(System.Int32,System.Collections.Generic.List{System.String})">
      <topicdata group="api" />
      <apidata name="CommentSummary" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Registry.Script.CommentSummary" />
      <sourceContext file="Libraries/Goedel.Registry/Script.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Spaces">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="Text">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Script.CommentSummary(System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="CommentSummary" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Registry.Script.CommentSummary" />
      <sourceContext file="Libraries/Goedel.Registry/Script.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Spaces">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="Text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Registry.Script.EntryAssembly">
      <topicdata group="api" />
      <apidata name="EntryAssembly" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Script.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EntryAssembly" />
      <returns>
        <type api="T:System.Reflection.Assembly" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Script.GetAssemblyCompany(System.Reflection.Assembly)">
      <topicdata group="api" />
      <apidata name="GetAssemblyCompany" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Script.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Assembly">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Script.GetAssemblyCopyright(System.Reflection.Assembly)">
      <topicdata group="api" />
      <apidata name="GetAssemblyCopyright" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Script.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Assembly">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Script.GetAssemblyDescription(System.Reflection.Assembly)">
      <topicdata group="api" />
      <apidata name="GetAssemblyDescription" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Script.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Assembly">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Script.GetAssemblyProduct(System.Reflection.Assembly)">
      <topicdata group="api" />
      <apidata name="GetAssemblyProduct" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Script.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Assembly">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Script.GetAssemblyTitle(System.Reflection.Assembly)">
      <topicdata group="api" />
      <apidata name="GetAssemblyTitle" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Script.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Assembly">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Script.GetAssemblyVersion(System.Reflection.Assembly)">
      <topicdata group="api" />
      <apidata name="GetAssemblyVersion" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Script.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Assembly">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Script.LocalizeTime(System.DateTime,System.Boolean)">
      <topicdata group="api" />
      <apidata name="LocalizeTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Script.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Time">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="UTC">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Registry.Script.Platform">
      <topicdata group="api" />
      <apidata name="Platform" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Script.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Platform" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Registry.Script.PlatformVersion">
      <topicdata group="api" />
      <apidata name="PlatformVersion" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/Script.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PlatformVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Script.SetTextWriter(System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name="SetTextWriter" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Registry.Script.SetTextWriter" />
      <sourceContext file="Libraries/Goedel.Registry/Script.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Output">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Script.SetTextWriter(System.String)">
      <topicdata group="api" />
      <apidata name="SetTextWriter" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Registry.Script.SetTextWriter" />
      <sourceContext file="Libraries/Goedel.Registry/Script.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="FileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Script" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.ScriptOutput">
      <topicdata group="api" />
      <apidata name="ScriptOutput" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ScriptOutput.#ctor(System.IO.TextWriter)" />
        <element api="F:Goedel.Registry.ScriptOutput._Indent" />
        <element api="F:Goedel.Registry.ScriptOutput._Output" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.ScriptOutput">
      <topicdata name="ScriptOutput" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.ScriptOutput" />
      <apidata name="ScriptOutput" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ScriptOutput" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Registry.ScriptOutput">
      <topicdata name="ScriptOutput" group="list" subgroup="Fields" typeTopicId="T:Goedel.Registry.ScriptOutput" />
      <apidata name="ScriptOutput" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Registry.ScriptOutput._Indent" />
        <element api="F:Goedel.Registry.ScriptOutput._Output" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ScriptOutput" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.ScriptOutput.#ctor(System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="Output">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ScriptOutput" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.ScriptOutput._Indent">
      <topicdata group="api" />
      <apidata name="_Indent" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ScriptOutput" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.ScriptOutput._Output">
      <topicdata group="api" />
      <apidata name="_Output" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.TextWriter" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.ScriptOutput" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.Separator">
      <topicdata group="api" />
      <apidata name="Separator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Registry.Separator.#ctor">
          <element api="M:Goedel.Registry.Separator.#ctor(System.String)" />
          <element api="M:Goedel.Registry.Separator.#ctor(System.String,System.String)" />
        </element>
        <element api="F:Goedel.Registry.Separator.First" />
        <element api="F:Goedel.Registry.Separator.IsFirst" />
        <element api="F:Goedel.Registry.Separator.Next" />
        <element api="M:Goedel.Registry.Separator.ToString" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.Separator">
      <topicdata name="Separator" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.Separator" />
      <apidata name="Separator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.Separator.ToString" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Separator" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Registry.Separator">
      <topicdata name="Separator" group="list" subgroup="Fields" typeTopicId="T:Goedel.Registry.Separator" />
      <apidata name="Separator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Registry.Separator.First" />
        <element api="F:Goedel.Registry.Separator.IsFirst" />
        <element api="F:Goedel.Registry.Separator.Next" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Separator" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.Separator.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Registry.Separator.#ctor(System.String)" />
        <element api="M:Goedel.Registry.Separator.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Separator" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Separator.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.Separator.#ctor" />
      <parameters>
        <parameter name="Next">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Separator" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Separator.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.Separator.#ctor" />
      <parameters>
        <parameter name="First">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Next">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Separator" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.Separator.First">
      <topicdata group="api" />
      <apidata name="First" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Separator" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.Separator.IsFirst">
      <topicdata group="api" />
      <apidata name="IsFirst" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Separator" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.Separator.Next">
      <topicdata group="api" />
      <apidata name="Next" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Separator" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Separator.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Separator" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.Source">
      <topicdata group="api" />
      <apidata name="Source" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.Source.#ctor(System.String)" />
        <element api="P:Goedel.Registry.Source.Name" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.Source">
      <topicdata name="Source" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.Source" />
      <apidata name="Source" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Source" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Registry.Source">
      <topicdata name="Source" group="list" subgroup="Properties" typeTopicId="T:Goedel.Registry.Source" />
      <apidata name="Source" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Goedel.Registry.Source.Name" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Source" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.Source.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="NameIn">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Source" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Registry.Source.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.Source" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.StructureWriter">
      <topicdata group="api" />
      <apidata name="StructureWriter" group="type" subgroup="class" />
      <sourceContext file="Libraries/Goedel.Registry/StructureWriter.cs" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Goedel.Registry.IndentWriter" ref="true" />
          <type api="T:Goedel.Registry.XMLWriter" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Registry.StructureWriter.#ctor">
          <element api="M:Goedel.Registry.StructureWriter.#ctor" />
          <element api="M:Goedel.Registry.StructureWriter.#ctor(System.IO.TextWriter)" />
        </element>
        <element api="Overload:Goedel.Registry.StructureWriter.EndDocument">
          <element api="M:Goedel.Registry.StructureWriter.EndDocument" />
          <element api="M:Goedel.Registry.StructureWriter.EndDocument(System.String)" />
        </element>
        <element api="M:Goedel.Registry.StructureWriter.EndElement(System.String)" />
        <element api="M:Goedel.Registry.StructureWriter.EndList(System.String)" />
        <element api="M:Goedel.Registry.StructureWriter.GetStructureWriter(System.IO.TextWriter,Goedel.Registry.OutputFormat)" />
        <element api="F:Goedel.Registry.StructureWriter.Indent" />
        <element api="F:Goedel.Registry.StructureWriter.Level" />
        <element api="Overload:Goedel.Registry.StructureWriter.StartDocument">
          <element api="M:Goedel.Registry.StructureWriter.StartDocument" />
          <element api="M:Goedel.Registry.StructureWriter.StartDocument(System.String)" />
        </element>
        <element api="M:Goedel.Registry.StructureWriter.StartElement(System.String)" />
        <element api="M:Goedel.Registry.StructureWriter.StartLine" />
        <element api="M:Goedel.Registry.StructureWriter.StartList(System.String)" />
        <element api="F:Goedel.Registry.StructureWriter.StartOfLine" />
        <element api="F:Goedel.Registry.StructureWriter.TextWriter" />
        <element api="Overload:Goedel.Registry.StructureWriter.WriteAttribute">
          <element api="M:Goedel.Registry.StructureWriter.WriteAttribute(System.String,System.Int32)" />
          <element api="M:Goedel.Registry.StructureWriter.WriteAttribute(System.String,System.Single)" />
          <element api="M:Goedel.Registry.StructureWriter.WriteAttribute(System.String,System.String)" />
        </element>
        <element api="M:Goedel.Registry.StructureWriter.WriteId(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.StructureWriter">
      <topicdata name="StructureWriter" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.StructureWriter" />
      <apidata name="StructureWriter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Registry.StructureWriter.EndDocument">
          <element api="M:Goedel.Registry.StructureWriter.EndDocument" />
          <element api="M:Goedel.Registry.StructureWriter.EndDocument(System.String)" />
        </element>
        <element api="M:Goedel.Registry.StructureWriter.EndElement(System.String)" />
        <element api="M:Goedel.Registry.StructureWriter.EndList(System.String)" />
        <element api="M:Goedel.Registry.StructureWriter.GetStructureWriter(System.IO.TextWriter,Goedel.Registry.OutputFormat)" />
        <element api="Overload:Goedel.Registry.StructureWriter.StartDocument">
          <element api="M:Goedel.Registry.StructureWriter.StartDocument" />
          <element api="M:Goedel.Registry.StructureWriter.StartDocument(System.String)" />
        </element>
        <element api="M:Goedel.Registry.StructureWriter.StartElement(System.String)" />
        <element api="M:Goedel.Registry.StructureWriter.StartLine" />
        <element api="M:Goedel.Registry.StructureWriter.StartList(System.String)" />
        <element api="Overload:Goedel.Registry.StructureWriter.WriteAttribute">
          <element api="M:Goedel.Registry.StructureWriter.WriteAttribute(System.String,System.Int32)" />
          <element api="M:Goedel.Registry.StructureWriter.WriteAttribute(System.String,System.Single)" />
          <element api="M:Goedel.Registry.StructureWriter.WriteAttribute(System.String,System.String)" />
        </element>
        <element api="M:Goedel.Registry.StructureWriter.WriteId(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.StructureWriter" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Registry.StructureWriter">
      <topicdata name="StructureWriter" group="list" subgroup="Fields" typeTopicId="T:Goedel.Registry.StructureWriter" />
      <apidata name="StructureWriter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="F:Goedel.Registry.StructureWriter.Indent" />
        <element api="F:Goedel.Registry.StructureWriter.Level" />
        <element api="F:Goedel.Registry.StructureWriter.StartOfLine" />
        <element api="F:Goedel.Registry.StructureWriter.TextWriter" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.StructureWriter" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.StructureWriter.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Registry.StructureWriter.#ctor" />
        <element api="M:Goedel.Registry.StructureWriter.#ctor(System.IO.TextWriter)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.StructureWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.StructureWriter.EndDocument">
      <topicdata name="EndDocument" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="EndDocument" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Registry.StructureWriter.EndDocument" />
        <element api="M:Goedel.Registry.StructureWriter.EndDocument(System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.StructureWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.StructureWriter.StartDocument">
      <topicdata name="StartDocument" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="StartDocument" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Registry.StructureWriter.StartDocument" />
        <element api="M:Goedel.Registry.StructureWriter.StartDocument(System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.StructureWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.StructureWriter.WriteAttribute">
      <topicdata name="WriteAttribute" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="WriteAttribute" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Registry.StructureWriter.WriteAttribute(System.String,System.Int32)" />
        <element api="M:Goedel.Registry.StructureWriter.WriteAttribute(System.String,System.Single)" />
        <element api="M:Goedel.Registry.StructureWriter.WriteAttribute(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.StructureWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.StructureWriter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:Goedel.Registry.StructureWriter.#ctor" />
      <sourceContext file="Libraries/Goedel.Registry/StructureWriter.cs" />
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.StructureWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.StructureWriter.#ctor(System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.StructureWriter.#ctor" />
      <sourceContext file="Libraries/Goedel.Registry/StructureWriter.cs" />
      <parameters>
        <parameter name="TextWriter">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.StructureWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.StructureWriter.EndDocument">
      <topicdata group="api" />
      <apidata name="EndDocument" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Registry.StructureWriter.EndDocument" />
      <sourceContext file="Libraries/Goedel.Registry/StructureWriter.cs" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.StructureWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.StructureWriter.EndDocument(System.String)">
      <topicdata group="api" />
      <apidata name="EndDocument" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Registry.StructureWriter.EndDocument" />
      <sourceContext file="Libraries/Goedel.Registry/StructureWriter.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.StructureWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.StructureWriter.EndElement(System.String)">
      <topicdata group="api" />
      <apidata name="EndElement" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Registry/StructureWriter.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.StructureWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.StructureWriter.EndList(System.String)">
      <topicdata group="api" />
      <apidata name="EndList" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Registry/StructureWriter.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.StructureWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.StructureWriter.GetStructureWriter(System.IO.TextWriter,Goedel.Registry.OutputFormat)">
      <topicdata group="api" />
      <apidata name="GetStructureWriter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/StructureWriter.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="TextWriter">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="OutputFormat">
          <type api="T:Goedel.Registry.OutputFormat" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Goedel.Registry.StructureWriter" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.StructureWriter" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.StructureWriter.Indent">
      <topicdata group="api" />
      <apidata name="Indent" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Registry/StructureWriter.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.StructureWriter" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.StructureWriter.Level">
      <topicdata group="api" />
      <apidata name="Level" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <sourceContext file="Libraries/Goedel.Registry/StructureWriter.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.StructureWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.StructureWriter.StartDocument">
      <topicdata group="api" />
      <apidata name="StartDocument" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Registry.StructureWriter.StartDocument" />
      <sourceContext file="Libraries/Goedel.Registry/StructureWriter.cs" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.StructureWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.StructureWriter.StartDocument(System.String)">
      <topicdata group="api" />
      <apidata name="StartDocument" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Registry.StructureWriter.StartDocument" />
      <sourceContext file="Libraries/Goedel.Registry/StructureWriter.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.StructureWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.StructureWriter.StartElement(System.String)">
      <topicdata group="api" />
      <apidata name="StartElement" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Registry/StructureWriter.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.StructureWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.StructureWriter.StartLine">
      <topicdata group="api" />
      <apidata name="StartLine" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="Libraries/Goedel.Registry/StructureWriter.cs" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.StructureWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.StructureWriter.StartList(System.String)">
      <topicdata group="api" />
      <apidata name="StartList" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Registry/StructureWriter.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.StructureWriter" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.StructureWriter.StartOfLine">
      <topicdata group="api" />
      <apidata name="StartOfLine" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <sourceContext file="Libraries/Goedel.Registry/StructureWriter.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.StructureWriter" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.StructureWriter.TextWriter">
      <topicdata group="api" />
      <apidata name="TextWriter" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <sourceContext file="Libraries/Goedel.Registry/StructureWriter.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.TextWriter" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.StructureWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.StructureWriter.WriteAttribute(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="WriteAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Registry.StructureWriter.WriteAttribute" />
      <sourceContext file="Libraries/Goedel.Registry/StructureWriter.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Data">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.StructureWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.StructureWriter.WriteAttribute(System.String,System.Single)">
      <topicdata group="api" />
      <apidata name="WriteAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Registry.StructureWriter.WriteAttribute" />
      <sourceContext file="Libraries/Goedel.Registry/StructureWriter.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Data">
          <type api="T:System.Single" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.StructureWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.StructureWriter.WriteAttribute(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Registry.StructureWriter.WriteAttribute" />
      <sourceContext file="Libraries/Goedel.Registry/StructureWriter.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Data">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.StructureWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.StructureWriter.WriteId(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteId" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Registry/StructureWriter.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Data">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.StructureWriter" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.TOKEN`1">
      <topicdata group="api" />
      <apidata name="TOKEN" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Registry.REF`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Goedel.Registry.TOKEN`1" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="P:Goedel.Registry.REF`1.Definition" />
        <element api="F:Goedel.Registry.REF`1.ID" />
        <element api="P:Goedel.Registry.REF`1.Label" />
        <element api="F:Goedel.Registry.REF`1.Object" />
        <element api="F:Goedel.Registry.REF`1.Position" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.TOKEN`1.#ctor(Goedel.Registry.Position,Goedel.Registry.ID{`0},`0)" />
        <element api="M:Goedel.Registry.TOKEN`1.ToString" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.TOKEN`1">
      <topicdata name="TOKEN" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.TOKEN`1" />
      <apidata name="TOKEN" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.TOKEN`1.ToString" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.TOKEN`1" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Registry.TOKEN`1">
      <topicdata name="TOKEN" group="list" subgroup="Properties" typeTopicId="T:Goedel.Registry.TOKEN`1" />
      <apidata name="TOKEN" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="P:Goedel.Registry.REF`1.Definition" />
        <element api="P:Goedel.Registry.REF`1.Label" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.TOKEN`1" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Registry.TOKEN`1">
      <topicdata name="TOKEN" group="list" subgroup="Fields" typeTopicId="T:Goedel.Registry.TOKEN`1" />
      <apidata name="TOKEN" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="F:Goedel.Registry.REF`1.ID" />
        <element api="F:Goedel.Registry.REF`1.Object" />
        <element api="F:Goedel.Registry.REF`1.Position" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.TOKEN`1" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.TOKEN`1.#ctor(Goedel.Registry.Position,Goedel.Registry.ID{`0},`0)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="Position">
          <type api="T:Goedel.Registry.Position" ref="true" />
        </parameter>
        <parameter name="ID">
          <type api="T:Goedel.Registry.ID`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Goedel.Registry.TOKEN`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="ObjectIn">
          <template name="T" index="0" api="T:Goedel.Registry.TOKEN`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.TOKEN`1" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.TOKEN`1.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Registry.REF`1.ToString">
          <type api="T:Goedel.Registry.REF`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Goedel.Registry.TOKEN`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.TOKEN`1" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.TokenType">
      <topicdata group="api" />
      <apidata name="TokenType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Goedel.Registry.TokenType.BEGIN" />
        <element api="F:Goedel.Registry.TokenType.END" />
        <element api="F:Goedel.Registry.TokenType.LABEL" />
        <element api="F:Goedel.Registry.TokenType.LITERAL" />
        <element api="F:Goedel.Registry.TokenType.STRING" />
        <element api="F:Goedel.Registry.TokenType.INTEGER" />
        <element api="F:Goedel.Registry.TokenType.FLOAT" />
        <element api="F:Goedel.Registry.TokenType.INVALID" />
        <element api="F:Goedel.Registry.TokenType.COMMENT" />
        <element api="F:Goedel.Registry.TokenType.NULL" />
        <element api="F:Goedel.Registry.TokenType.SEPARATOR" />
        <element api="F:Goedel.Registry.TokenType.TEXT" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.TokenType.BEGIN">
      <topicdata group="api" notopic="" />
      <apidata name="BEGIN" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.TokenType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.TokenType" ref="false" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.TokenType.COMMENT">
      <topicdata group="api" notopic="" />
      <apidata name="COMMENT" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.TokenType" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.TokenType" ref="false" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.TokenType.END">
      <topicdata group="api" notopic="" />
      <apidata name="END" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.TokenType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.TokenType" ref="false" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.TokenType.FLOAT">
      <topicdata group="api" notopic="" />
      <apidata name="FLOAT" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.TokenType" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.TokenType" ref="false" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.TokenType.INTEGER">
      <topicdata group="api" notopic="" />
      <apidata name="INTEGER" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.TokenType" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.TokenType" ref="false" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.TokenType.INVALID">
      <topicdata group="api" notopic="" />
      <apidata name="INVALID" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.TokenType" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.TokenType" ref="false" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.TokenType.LABEL">
      <topicdata group="api" notopic="" />
      <apidata name="LABEL" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.TokenType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.TokenType" ref="false" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.TokenType.LITERAL">
      <topicdata group="api" notopic="" />
      <apidata name="LITERAL" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.TokenType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.TokenType" ref="false" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.TokenType.NULL">
      <topicdata group="api" notopic="" />
      <apidata name="NULL" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.TokenType" ref="false" />
      </returns>
      <value>9</value>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.TokenType" ref="false" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.TokenType.SEPARATOR">
      <topicdata group="api" notopic="" />
      <apidata name="SEPARATOR" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.TokenType" ref="false" />
      </returns>
      <value>10</value>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.TokenType" ref="false" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.TokenType.STRING">
      <topicdata group="api" notopic="" />
      <apidata name="STRING" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.TokenType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.TokenType" ref="false" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.TokenType.TEXT">
      <topicdata group="api" notopic="" />
      <apidata name="TEXT" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Registry.TokenType" ref="false" />
      </returns>
      <value>11</value>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.TokenType" ref="false" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.TooManyClose">
      <topicdata group="api" />
      <apidata name="TooManyClose" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Registry.SchemaParse" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Goedel.Registry.SchemaParse.UserData" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Registry.TooManyClose.#ctor">
          <element api="M:Goedel.Registry.TooManyClose.#ctor" />
          <element api="M:Goedel.Registry.TooManyClose.#ctor(System.String)" />
          <element api="M:Goedel.Registry.TooManyClose.#ctor(System.String,System.Exception)" />
        </element>
        <element api="F:Goedel.Registry.TooManyClose.Throw" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.TooManyClose">
      <topicdata name="TooManyClose" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.TooManyClose" />
      <apidata name="TooManyClose" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.TooManyClose" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Registry.TooManyClose">
      <topicdata name="TooManyClose" group="list" subgroup="Properties" typeTopicId="T:Goedel.Registry.TooManyClose" />
      <apidata name="TooManyClose" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.TooManyClose" />
      </containers>
    </api>
    <api id="Events.T:Goedel.Registry.TooManyClose">
      <topicdata name="TooManyClose" group="list" subgroup="Events" typeTopicId="T:Goedel.Registry.TooManyClose" />
      <apidata name="TooManyClose" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.TooManyClose" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Registry.TooManyClose">
      <topicdata name="TooManyClose" group="list" subgroup="Fields" typeTopicId="T:Goedel.Registry.TooManyClose" />
      <apidata name="TooManyClose" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Registry.SchemaParse.UserData" />
        <element api="F:Goedel.Registry.TooManyClose.Throw" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.TooManyClose" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.TooManyClose.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Registry.TooManyClose.#ctor" />
        <element api="M:Goedel.Registry.TooManyClose.#ctor(System.String)" />
        <element api="M:Goedel.Registry.TooManyClose.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.TooManyClose" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.TooManyClose.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.TooManyClose.#ctor" />
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.TooManyClose" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.TooManyClose.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.TooManyClose.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.TooManyClose" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.TooManyClose.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.TooManyClose.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.TooManyClose" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.TooManyClose.Throw">
      <topicdata group="api" />
      <apidata name="Throw" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Utilities.ThrowDelegate" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.TooManyClose" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.TYPE`1">
      <topicdata group="api" />
      <apidata name="TYPE" group="type" subgroup="class" />
      <sourceContext file="Libraries/Goedel.Command/Type.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.TYPE`1.#ctor" />
        <element api="F:Goedel.Registry.TYPE`1.IDs" />
        <element api="F:Goedel.Registry.TYPE`1.Label" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.TYPE`1">
      <topicdata name="TYPE" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.TYPE`1" />
      <apidata name="TYPE" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.TYPE`1" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Registry.TYPE`1">
      <topicdata name="TYPE" group="list" subgroup="Fields" typeTopicId="T:Goedel.Registry.TYPE`1" />
      <apidata name="TYPE" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="F:Goedel.Registry.TYPE`1.IDs" />
        <element api="F:Goedel.Registry.TYPE`1.Label" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.TYPE`1" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.TYPE`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Libraries/Goedel.Command/Type.cs" />
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.TYPE`1" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.TYPE`1.IDs">
      <topicdata group="api" />
      <apidata name="IDs" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Command/Type.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Goedel.Registry.ID`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Goedel.Registry.TYPE`1" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.TYPE`1" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.TYPE`1.Label">
      <topicdata group="api" />
      <apidata name="Label" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <sourceContext file="Libraries/Goedel.Command/Type.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.TYPE`1" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.UnknownCommand">
      <topicdata group="api" />
      <apidata name="UnknownCommand" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Registry.ParserException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Goedel.Registry.ParserException.UserData" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Registry.UnknownCommand.#ctor">
          <element api="M:Goedel.Registry.UnknownCommand.#ctor" />
          <element api="M:Goedel.Registry.UnknownCommand.#ctor(Goedel.Utilities.ExceptionData)" />
          <element api="M:Goedel.Registry.UnknownCommand.#ctor(System.String)" />
          <element api="M:Goedel.Registry.UnknownCommand.#ctor(Goedel.Utilities.ExceptionData,System.Exception)" />
          <element api="M:Goedel.Registry.UnknownCommand.#ctor(System.String,System.Exception)" />
        </element>
        <element api="F:Goedel.Registry.UnknownCommand.Throw" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.UnknownCommand">
      <topicdata name="UnknownCommand" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.UnknownCommand" />
      <apidata name="UnknownCommand" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.UnknownCommand" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Registry.UnknownCommand">
      <topicdata name="UnknownCommand" group="list" subgroup="Properties" typeTopicId="T:Goedel.Registry.UnknownCommand" />
      <apidata name="UnknownCommand" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.UnknownCommand" />
      </containers>
    </api>
    <api id="Events.T:Goedel.Registry.UnknownCommand">
      <topicdata name="UnknownCommand" group="list" subgroup="Events" typeTopicId="T:Goedel.Registry.UnknownCommand" />
      <apidata name="UnknownCommand" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.UnknownCommand" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Registry.UnknownCommand">
      <topicdata name="UnknownCommand" group="list" subgroup="Fields" typeTopicId="T:Goedel.Registry.UnknownCommand" />
      <apidata name="UnknownCommand" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Registry.ParserException.UserData" />
        <element api="F:Goedel.Registry.UnknownCommand.Throw" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.UnknownCommand" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.UnknownCommand.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Registry.UnknownCommand.#ctor" />
        <element api="M:Goedel.Registry.UnknownCommand.#ctor(Goedel.Utilities.ExceptionData)" />
        <element api="M:Goedel.Registry.UnknownCommand.#ctor(System.String)" />
        <element api="M:Goedel.Registry.UnknownCommand.#ctor(Goedel.Utilities.ExceptionData,System.Exception)" />
        <element api="M:Goedel.Registry.UnknownCommand.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.UnknownCommand" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.UnknownCommand.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.UnknownCommand.#ctor" />
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.UnknownCommand" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.UnknownCommand.#ctor(Goedel.Utilities.ExceptionData)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.UnknownCommand.#ctor" />
      <parameters>
        <parameter name="Object">
          <type api="T:Goedel.Utilities.ExceptionData" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.UnknownCommand" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.UnknownCommand.#ctor(Goedel.Utilities.ExceptionData,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.UnknownCommand.#ctor" />
      <parameters>
        <parameter name="Object">
          <type api="T:Goedel.Utilities.ExceptionData" ref="true" />
        </parameter>
        <parameter name="Inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.UnknownCommand" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.UnknownCommand.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.UnknownCommand.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.UnknownCommand" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.UnknownCommand.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.UnknownCommand.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.UnknownCommand" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.UnknownCommand.Throw">
      <topicdata group="api" />
      <apidata name="Throw" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Utilities.ThrowDelegate" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.UnknownCommand" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.UnknownOption">
      <topicdata group="api" />
      <apidata name="UnknownOption" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Registry.ParserException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Goedel.Registry.ParserException.UserData" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Registry.UnknownOption.#ctor">
          <element api="M:Goedel.Registry.UnknownOption.#ctor" />
          <element api="M:Goedel.Registry.UnknownOption.#ctor(Goedel.Utilities.ExceptionData)" />
          <element api="M:Goedel.Registry.UnknownOption.#ctor(System.String)" />
          <element api="M:Goedel.Registry.UnknownOption.#ctor(Goedel.Utilities.ExceptionData,System.Exception)" />
          <element api="M:Goedel.Registry.UnknownOption.#ctor(System.String,System.Exception)" />
        </element>
        <element api="F:Goedel.Registry.UnknownOption.Throw" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.UnknownOption">
      <topicdata name="UnknownOption" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.UnknownOption" />
      <apidata name="UnknownOption" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.UnknownOption" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Registry.UnknownOption">
      <topicdata name="UnknownOption" group="list" subgroup="Properties" typeTopicId="T:Goedel.Registry.UnknownOption" />
      <apidata name="UnknownOption" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.UnknownOption" />
      </containers>
    </api>
    <api id="Events.T:Goedel.Registry.UnknownOption">
      <topicdata name="UnknownOption" group="list" subgroup="Events" typeTopicId="T:Goedel.Registry.UnknownOption" />
      <apidata name="UnknownOption" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.UnknownOption" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Registry.UnknownOption">
      <topicdata name="UnknownOption" group="list" subgroup="Fields" typeTopicId="T:Goedel.Registry.UnknownOption" />
      <apidata name="UnknownOption" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Registry.ParserException.UserData" />
        <element api="F:Goedel.Registry.UnknownOption.Throw" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.UnknownOption" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.UnknownOption.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Registry.UnknownOption.#ctor" />
        <element api="M:Goedel.Registry.UnknownOption.#ctor(Goedel.Utilities.ExceptionData)" />
        <element api="M:Goedel.Registry.UnknownOption.#ctor(System.String)" />
        <element api="M:Goedel.Registry.UnknownOption.#ctor(Goedel.Utilities.ExceptionData,System.Exception)" />
        <element api="M:Goedel.Registry.UnknownOption.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.UnknownOption" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.UnknownOption.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.UnknownOption.#ctor" />
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.UnknownOption" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.UnknownOption.#ctor(Goedel.Utilities.ExceptionData)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.UnknownOption.#ctor" />
      <parameters>
        <parameter name="Object">
          <type api="T:Goedel.Utilities.ExceptionData" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.UnknownOption" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.UnknownOption.#ctor(Goedel.Utilities.ExceptionData,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.UnknownOption.#ctor" />
      <parameters>
        <parameter name="Object">
          <type api="T:Goedel.Utilities.ExceptionData" ref="true" />
        </parameter>
        <parameter name="Inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.UnknownOption" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.UnknownOption.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.UnknownOption.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.UnknownOption" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.UnknownOption.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.UnknownOption.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.UnknownOption" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.UnknownOption.Throw">
      <topicdata group="api" />
      <apidata name="Throw" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Utilities.ThrowDelegate" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.UnknownOption" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.UnreachableCode">
      <topicdata group="api" />
      <apidata name="UnreachableCode" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Registry.SchemaParse" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Goedel.Registry.SchemaParse.UserData" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="Overload:Goedel.Registry.UnreachableCode.#ctor">
          <element api="M:Goedel.Registry.UnreachableCode.#ctor" />
          <element api="M:Goedel.Registry.UnreachableCode.#ctor(System.String)" />
          <element api="M:Goedel.Registry.UnreachableCode.#ctor(System.String,System.Exception)" />
        </element>
        <element api="F:Goedel.Registry.UnreachableCode.Throw" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.UnreachableCode">
      <topicdata name="UnreachableCode" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.UnreachableCode" />
      <apidata name="UnreachableCode" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.UnreachableCode" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Registry.UnreachableCode">
      <topicdata name="UnreachableCode" group="list" subgroup="Properties" typeTopicId="T:Goedel.Registry.UnreachableCode" />
      <apidata name="UnreachableCode" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.UnreachableCode" />
      </containers>
    </api>
    <api id="Events.T:Goedel.Registry.UnreachableCode">
      <topicdata name="UnreachableCode" group="list" subgroup="Events" typeTopicId="T:Goedel.Registry.UnreachableCode" />
      <apidata name="UnreachableCode" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.UnreachableCode" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Registry.UnreachableCode">
      <topicdata name="UnreachableCode" group="list" subgroup="Fields" typeTopicId="T:Goedel.Registry.UnreachableCode" />
      <apidata name="UnreachableCode" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Registry.SchemaParse.UserData" />
        <element api="F:Goedel.Registry.UnreachableCode.Throw" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.UnreachableCode" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.UnreachableCode.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Goedel.Registry.UnreachableCode.#ctor" />
        <element api="M:Goedel.Registry.UnreachableCode.#ctor(System.String)" />
        <element api="M:Goedel.Registry.UnreachableCode.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.UnreachableCode" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.UnreachableCode.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.UnreachableCode.#ctor" />
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.UnreachableCode" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.UnreachableCode.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.UnreachableCode.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.UnreachableCode" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.UnreachableCode.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Goedel.Registry.UnreachableCode.#ctor" />
      <parameters>
        <parameter name="Description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.UnreachableCode" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.UnreachableCode.Throw">
      <topicdata group="api" />
      <apidata name="Throw" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Goedel.Utilities.ThrowDelegate" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.UnreachableCode" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.XMLEscape">
      <topicdata group="api" />
      <apidata name="XMLEscape" group="type" subgroup="class" />
      <sourceContext file="Libraries/Goedel.Registry/XMLEscape.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Goedel.Registry.XMLEscape.AsXML(System.String)" />
        <element api="M:Goedel.Registry.XMLEscape.AsXMLAttribute(System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Goedel.Registry.XMLEscape">
      <topicdata name="XMLEscape" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.XMLEscape" />
      <apidata name="XMLEscape" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Goedel.Registry.XMLEscape.AsXML(System.String)" />
        <element api="M:Goedel.Registry.XMLEscape.AsXMLAttribute(System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLEscape" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.XMLEscape.AsXML(System.String)">
      <topicdata group="api" />
      <apidata name="AsXML" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/XMLEscape.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLEscape" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Goedel.Registry.XMLEscape.AsXMLAttribute(System.String)">
      <topicdata group="api" />
      <apidata name="AsXMLAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Libraries/Goedel.Registry/XMLEscape.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLEscape" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Goedel.Registry.XMLTextWriter">
      <topicdata group="api" />
      <apidata name="XMLTextWriter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.XMLTextWriter.#ctor(System.IO.TextWriter,System.Boolean)" />
        <element api="M:Goedel.Registry.XMLTextWriter.Comment(System.String)" />
        <element api="M:Goedel.Registry.XMLTextWriter.End(System.Boolean,System.Boolean)" />
        <element api="M:Goedel.Registry.XMLTextWriter.EndLine(System.Boolean)" />
        <element api="P:Goedel.Registry.XMLTextWriter.IndentIncrement" />
        <element api="F:Goedel.Registry.XMLTextWriter.Output" />
        <element api="P:Goedel.Registry.XMLTextWriter.Stack" />
        <element api="Overload:Goedel.Registry.XMLTextWriter.Start">
          <element api="M:Goedel.Registry.XMLTextWriter.Start(System.String,System.String[])" />
          <element api="M:Goedel.Registry.XMLTextWriter.Start(System.String,System.Boolean,System.Boolean,System.String[])" />
        </element>
        <element api="M:Goedel.Registry.XMLTextWriter.StartLine(System.Boolean)" />
        <element api="M:Goedel.Registry.XMLTextWriter.Write(System.String,System.Boolean,System.Boolean)" />
        <element api="Overload:Goedel.Registry.XMLTextWriter.WriteElement">
          <element api="M:Goedel.Registry.XMLTextWriter.WriteElement(System.String,System.Collections.Generic.List{System.String},System.String[])" />
          <element api="M:Goedel.Registry.XMLTextWriter.WriteElement(System.String,System.String,System.String[])" />
          <element api="M:Goedel.Registry.XMLTextWriter.WriteElement(System.String,System.Boolean,System.Boolean,System.String,System.String[])" />
        </element>
        <element api="M:Goedel.Registry.XMLTextWriter.WriteElementEmpty(System.String,System.String[])" />
        <element api="M:Goedel.Registry.XMLTextWriter.WriteElementIf(System.String,System.String,System.String[])" />
        <element api="M:Goedel.Registry.XMLTextWriter.WriteElementIfTrim(System.String,System.String,System.String[])" />
        <element api="M:Goedel.Registry.XMLTextWriter.WriteInlineElement(System.String,System.String,System.String[])" />
        <element api="M:Goedel.Registry.XMLTextWriter.WriteVerbatim(System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.XMLTextWriter">
      <topicdata name="XMLTextWriter" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.XMLTextWriter" />
      <apidata name="XMLTextWriter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.XMLTextWriter.Comment(System.String)" />
        <element api="M:Goedel.Registry.XMLTextWriter.End(System.Boolean,System.Boolean)" />
        <element api="M:Goedel.Registry.XMLTextWriter.EndLine(System.Boolean)" />
        <element api="Overload:Goedel.Registry.XMLTextWriter.Start">
          <element api="M:Goedel.Registry.XMLTextWriter.Start(System.String,System.String[])" />
          <element api="M:Goedel.Registry.XMLTextWriter.Start(System.String,System.Boolean,System.Boolean,System.String[])" />
        </element>
        <element api="M:Goedel.Registry.XMLTextWriter.StartLine(System.Boolean)" />
        <element api="M:Goedel.Registry.XMLTextWriter.Write(System.String,System.Boolean,System.Boolean)" />
        <element api="Overload:Goedel.Registry.XMLTextWriter.WriteElement">
          <element api="M:Goedel.Registry.XMLTextWriter.WriteElement(System.String,System.Collections.Generic.List{System.String},System.String[])" />
          <element api="M:Goedel.Registry.XMLTextWriter.WriteElement(System.String,System.String,System.String[])" />
          <element api="M:Goedel.Registry.XMLTextWriter.WriteElement(System.String,System.Boolean,System.Boolean,System.String,System.String[])" />
        </element>
        <element api="M:Goedel.Registry.XMLTextWriter.WriteElementEmpty(System.String,System.String[])" />
        <element api="M:Goedel.Registry.XMLTextWriter.WriteElementIf(System.String,System.String,System.String[])" />
        <element api="M:Goedel.Registry.XMLTextWriter.WriteElementIfTrim(System.String,System.String,System.String[])" />
        <element api="M:Goedel.Registry.XMLTextWriter.WriteInlineElement(System.String,System.String,System.String[])" />
        <element api="M:Goedel.Registry.XMLTextWriter.WriteVerbatim(System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLTextWriter" />
      </containers>
    </api>
    <api id="Properties.T:Goedel.Registry.XMLTextWriter">
      <topicdata name="XMLTextWriter" group="list" subgroup="Properties" typeTopicId="T:Goedel.Registry.XMLTextWriter" />
      <apidata name="XMLTextWriter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Goedel.Registry.XMLTextWriter.IndentIncrement" />
        <element api="P:Goedel.Registry.XMLTextWriter.Stack" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLTextWriter" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Registry.XMLTextWriter">
      <topicdata name="XMLTextWriter" group="list" subgroup="Fields" typeTopicId="T:Goedel.Registry.XMLTextWriter" />
      <apidata name="XMLTextWriter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Registry.XMLTextWriter.Output" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLTextWriter" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.XMLTextWriter.Start">
      <topicdata name="Start" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Start" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Registry.XMLTextWriter.Start(System.String,System.String[])" />
        <element api="M:Goedel.Registry.XMLTextWriter.Start(System.String,System.Boolean,System.Boolean,System.String[])" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLTextWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.XMLTextWriter.WriteElement">
      <topicdata name="WriteElement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="WriteElement" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Registry.XMLTextWriter.WriteElement(System.String,System.Collections.Generic.List{System.String},System.String[])" />
        <element api="M:Goedel.Registry.XMLTextWriter.WriteElement(System.String,System.String,System.String[])" />
        <element api="M:Goedel.Registry.XMLTextWriter.WriteElement(System.String,System.Boolean,System.Boolean,System.String,System.String[])" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLTextWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.XMLTextWriter.#ctor(System.IO.TextWriter,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="Output">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="Header" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLTextWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.XMLTextWriter.Comment(System.String)">
      <topicdata group="api" />
      <apidata name="Comment" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLTextWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.XMLTextWriter.End(System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name="End" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Start" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
        <parameter name="End" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLTextWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.XMLTextWriter.EndLine(System.Boolean)">
      <topicdata group="api" />
      <apidata name="EndLine" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Write" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLTextWriter" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Registry.XMLTextWriter.IndentIncrement">
      <topicdata group="api" />
      <apidata name="IndentIncrement" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IndentIncrement" />
      <setter name="set_IndentIncrement" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLTextWriter" ref="true" />
      </containers>
    </api>
    <api id="F:Goedel.Registry.XMLTextWriter.Output">
      <topicdata group="api" />
      <apidata name="Output" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.TextWriter" ref="true" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLTextWriter" ref="true" />
      </containers>
    </api>
    <api id="P:Goedel.Registry.XMLTextWriter.Stack">
      <topicdata group="api" />
      <apidata name="Stack" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Stack" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLTextWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.XMLTextWriter.Start(System.String,System.Boolean,System.Boolean,System.String[])">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Registry.XMLTextWriter.Start" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Start">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="End">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="Attributes" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLTextWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.XMLTextWriter.Start(System.String,System.String[])">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Registry.XMLTextWriter.Start" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Attributes" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLTextWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.XMLTextWriter.StartLine(System.Boolean)">
      <topicdata group="api" />
      <apidata name="StartLine" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Write" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLTextWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.XMLTextWriter.Write(System.String,System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Text" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
        <parameter name="Start" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
        <parameter name="End" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLTextWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.XMLTextWriter.WriteElement(System.String,System.Boolean,System.Boolean,System.String,System.String[])">
      <topicdata group="api" />
      <apidata name="WriteElement" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Registry.XMLTextWriter.WriteElement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Start">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="End">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="Text" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="Attributes" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLTextWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.XMLTextWriter.WriteElement(System.String,System.Collections.Generic.List{System.String},System.String[])">
      <topicdata group="api" />
      <apidata name="WriteElement" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Registry.XMLTextWriter.WriteElement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Texts">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="Attributes" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLTextWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.XMLTextWriter.WriteElement(System.String,System.String,System.String[])">
      <topicdata group="api" />
      <apidata name="WriteElement" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Registry.XMLTextWriter.WriteElement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Text" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="Attributes" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLTextWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.XMLTextWriter.WriteElementEmpty(System.String,System.String[])">
      <topicdata group="api" />
      <apidata name="WriteElementEmpty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Attributes" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLTextWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.XMLTextWriter.WriteElementIf(System.String,System.String,System.String[])">
      <topicdata group="api" />
      <apidata name="WriteElementIf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Attributes" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLTextWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.XMLTextWriter.WriteElementIfTrim(System.String,System.String,System.String[])">
      <topicdata group="api" />
      <apidata name="WriteElementIfTrim" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Attributes" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLTextWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.XMLTextWriter.WriteInlineElement(System.String,System.String,System.String[])">
      <topicdata group="api" />
      <apidata name="WriteInlineElement" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Text" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="Attributes" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLTextWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.XMLTextWriter.WriteVerbatim(System.String)">
      <topicdata group="api" />
      <apidata name="WriteVerbatim" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLTextWriter" ref="true" />
      </containers>
    </api>
    <api id="T:Goedel.Registry.XMLWriter">
      <topicdata group="api" />
      <apidata name="XMLWriter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Goedel.Registry.StructureWriter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Goedel.Registry.XMLWriter.EndDocument">
          <element api="M:Goedel.Registry.StructureWriter.EndDocument" />
          <element api="M:Goedel.Registry.XMLWriter.EndDocument(System.String)" />
        </element>
        <element api="F:Goedel.Registry.StructureWriter.Indent" />
        <element api="F:Goedel.Registry.StructureWriter.Level" />
        <element api="Overload:Goedel.Registry.XMLWriter.StartDocument">
          <element api="M:Goedel.Registry.StructureWriter.StartDocument" />
          <element api="M:Goedel.Registry.XMLWriter.StartDocument(System.String)" />
        </element>
        <element api="M:Goedel.Registry.StructureWriter.StartLine" />
        <element api="F:Goedel.Registry.StructureWriter.StartOfLine" />
        <element api="F:Goedel.Registry.StructureWriter.TextWriter" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.XMLWriter.#ctor(System.IO.TextWriter)" />
        <element api="M:Goedel.Registry.XMLWriter.EndElement(System.String)" />
        <element api="M:Goedel.Registry.XMLWriter.EndList(System.String)" />
        <element api="M:Goedel.Registry.XMLWriter.StartElement(System.String)" />
        <element api="M:Goedel.Registry.XMLWriter.StartList(System.String)" />
        <element api="Overload:Goedel.Registry.XMLWriter.WriteAttribute">
          <element api="M:Goedel.Registry.XMLWriter.WriteAttribute(System.String,System.Int32)" />
          <element api="M:Goedel.Registry.XMLWriter.WriteAttribute(System.String,System.Single)" />
          <element api="M:Goedel.Registry.XMLWriter.WriteAttribute(System.String,System.String)" />
        </element>
        <element api="M:Goedel.Registry.XMLWriter.WriteId(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
      </containers>
    </api>
    <api id="Methods.T:Goedel.Registry.XMLWriter">
      <topicdata name="XMLWriter" group="list" subgroup="Methods" typeTopicId="T:Goedel.Registry.XMLWriter" />
      <apidata name="XMLWriter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:Goedel.Registry.XMLWriter.EndDocument">
          <element api="M:Goedel.Registry.StructureWriter.EndDocument" />
          <element api="M:Goedel.Registry.XMLWriter.EndDocument(System.String)" />
        </element>
        <element api="Overload:Goedel.Registry.XMLWriter.StartDocument">
          <element api="M:Goedel.Registry.StructureWriter.StartDocument" />
          <element api="M:Goedel.Registry.XMLWriter.StartDocument(System.String)" />
        </element>
        <element api="M:Goedel.Registry.StructureWriter.StartLine" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.Label(System.Object)" source="extension">
          <apidata name="Label" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.ExtensionMethods.CS(System.Object)" source="extension">
          <apidata name="CS" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Goedel.Registry" />
            <type api="T:Goedel.Registry.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:Goedel.Registry.XMLWriter.EndElement(System.String)" />
        <element api="M:Goedel.Registry.XMLWriter.EndList(System.String)" />
        <element api="M:Goedel.Registry.XMLWriter.StartElement(System.String)" />
        <element api="M:Goedel.Registry.XMLWriter.StartList(System.String)" />
        <element api="Overload:Goedel.Registry.XMLWriter.WriteAttribute">
          <element api="M:Goedel.Registry.XMLWriter.WriteAttribute(System.String,System.Int32)" />
          <element api="M:Goedel.Registry.XMLWriter.WriteAttribute(System.String,System.Single)" />
          <element api="M:Goedel.Registry.XMLWriter.WriteAttribute(System.String,System.String)" />
        </element>
        <element api="M:Goedel.Registry.XMLWriter.WriteId(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLWriter" />
      </containers>
    </api>
    <api id="Fields.T:Goedel.Registry.XMLWriter">
      <topicdata name="XMLWriter" group="list" subgroup="Fields" typeTopicId="T:Goedel.Registry.XMLWriter" />
      <apidata name="XMLWriter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Goedel.Registry.StructureWriter.Indent" />
        <element api="F:Goedel.Registry.StructureWriter.Level" />
        <element api="F:Goedel.Registry.StructureWriter.StartOfLine" />
        <element api="F:Goedel.Registry.StructureWriter.TextWriter" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLWriter" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.XMLWriter.EndDocument">
      <topicdata name="EndDocument" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="EndDocument" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Registry.StructureWriter.EndDocument" />
        <element api="M:Goedel.Registry.XMLWriter.EndDocument(System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.XMLWriter.StartDocument">
      <topicdata name="StartDocument" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="StartDocument" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Registry.StructureWriter.StartDocument" />
        <element api="M:Goedel.Registry.XMLWriter.StartDocument(System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:Goedel.Registry.XMLWriter.WriteAttribute">
      <topicdata name="WriteAttribute" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="WriteAttribute" group="member" subgroup="method" />
      <elements>
        <element api="M:Goedel.Registry.XMLWriter.WriteAttribute(System.String,System.Int32)" />
        <element api="M:Goedel.Registry.XMLWriter.WriteAttribute(System.String,System.Single)" />
        <element api="M:Goedel.Registry.XMLWriter.WriteAttribute(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.XMLWriter.#ctor(System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="TextWriterIn">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.XMLWriter.EndDocument(System.String)">
      <topicdata group="api" />
      <apidata name="EndDocument" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Registry.XMLWriter.EndDocument" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Registry.StructureWriter.EndDocument(System.String)">
          <type api="T:Goedel.Registry.StructureWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.XMLWriter.EndElement(System.String)">
      <topicdata group="api" />
      <apidata name="EndElement" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Registry.StructureWriter.EndElement(System.String)">
          <type api="T:Goedel.Registry.StructureWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.XMLWriter.EndList(System.String)">
      <topicdata group="api" />
      <apidata name="EndList" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Registry.StructureWriter.EndList(System.String)">
          <type api="T:Goedel.Registry.StructureWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.XMLWriter.StartDocument(System.String)">
      <topicdata group="api" />
      <apidata name="StartDocument" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Registry.XMLWriter.StartDocument" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Registry.StructureWriter.StartDocument(System.String)">
          <type api="T:Goedel.Registry.StructureWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.XMLWriter.StartElement(System.String)">
      <topicdata group="api" />
      <apidata name="StartElement" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Registry.StructureWriter.StartElement(System.String)">
          <type api="T:Goedel.Registry.StructureWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.XMLWriter.StartList(System.String)">
      <topicdata group="api" />
      <apidata name="StartList" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Registry.StructureWriter.StartList(System.String)">
          <type api="T:Goedel.Registry.StructureWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.XMLWriter.WriteAttribute(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="WriteAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Registry.XMLWriter.WriteAttribute" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Registry.StructureWriter.WriteAttribute(System.String,System.Int32)">
          <type api="T:Goedel.Registry.StructureWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Data">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.XMLWriter.WriteAttribute(System.String,System.Single)">
      <topicdata group="api" />
      <apidata name="WriteAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Registry.XMLWriter.WriteAttribute" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Registry.StructureWriter.WriteAttribute(System.String,System.Single)">
          <type api="T:Goedel.Registry.StructureWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Data">
          <type api="T:System.Single" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.XMLWriter.WriteAttribute(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Goedel.Registry.XMLWriter.WriteAttribute" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Registry.StructureWriter.WriteAttribute(System.String,System.String)">
          <type api="T:Goedel.Registry.StructureWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Data">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Goedel.Registry.XMLWriter.WriteId(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteId" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Goedel.Registry.StructureWriter.WriteId(System.String,System.String)">
          <type api="T:Goedel.Registry.StructureWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Tag">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Data">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Goedel.Registry" module="Goedel.Registry" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.6471.40474" />
          <noAptca />
        </library>
        <namespace api="N:Goedel.Registry" />
        <type api="T:Goedel.Registry.XMLWriter" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>